<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Blog</title>
<link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/</link>
<atom:link href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/index.xml" rel="self" type="application/rss+xml"/>
<description>NanoString&#39;s CosMx Analysis Scratch Space</description>
<generator>quarto-1.6.30</generator>
<lastBuildDate>Tue, 21 Oct 2025 00:00:00 GMT</lastBuildDate>
<item>
  <title>Differential expression: best practices and advanced techniques</title>
  <dc:creator>Patrick Danaher</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/DE-guide/</link>
  <description><![CDATA[ 





<section id="introduction" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="introduction"><span class="header-section-number">1</span> Introduction</h2>
<p>CosMx (R) SMI analyses often culminate in a differential expression (DE) analysis. Exploratory analyses uncover all manner of interesting trends, and then these trends suggest hypotheses that can be tested with DE. A surprising breadth of questions can be framed as DE problems. To give a few examples:</p>
<ul>
<li>How do tumor cells respond to the presence of T-cells?</li>
<li>How do microglia activate in regions of inflammation?</li>
<li>How do microglia differ across brain regions?</li>
<li>How do T-cells change as they get farther from blood vessels?</li>
<li>How do fibroblasts respond to signaling from ligands in nearby cells?</li>
<li>How are macrophages different in inflamed tissue regions?</li>
<li>How do beta cells in pancreatic islets respond to local inflammation?</li>
</ul>
<p>Or, in the general form:</p>
<p>“How does <em>my favorite cell type</em> change in response to <em>some aspect of its environment</em>?”</p>
<p>This post reviews major topics in DE in spatial transcriptomics, providing code when necessary.</p>
</section>
<section id="setting-up-a-de-question" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="setting-up-a-de-question"><span class="header-section-number">2</span> Setting up a DE question</h2>
<p>Our experience suggests that most studies demand a highly custom DE question whose framing depends on the investigator’s primary questions and working assumptions about the biological system. To assist with this framing, we present below a collection of examples which, with slight modifications and remixing, covers most DE investigations you are likely to find productive. In each case we’ll define a variable that can be used as a predictor in DE models.</p>
<section id="important-note-treatment-of-continuous-variables" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="important-note-treatment-of-continuous-variables"><span class="header-section-number">2.1</span> Important note: treatment of continuous variables</h3>
<p>Say we want to run DE against a continuous variable like distance to a cell type, or the expression level of a cytokine in a cell’s neighbors. We can calculate that distance (or neighborhood expression level) and use it as a predictor in our model. However, in doing so we implicitly assume a linear relationship between the variable and our outcome (either linear or log-scale gene expression, depending on the model). Other models might be more appropriate: we could consider transforming the variable, or we could break it into bins for a non-parametric approach. In particular, we have often found that binning of continuous variables produces satisfactory results.</p>
<section id="transformations" class="level4" data-number="2.1.1">
<h4 data-number="2.1.1" class="anchored" data-anchor-id="transformations"><span class="header-section-number">2.1.1</span> Transformations:</h4>
<ul>
<li>If you think distance to a feature matters because of some diffused signals, then concentration of those molecules will vary with 1/distance.</li>
<li>If neighborhood expression of a molecule is strongly right-tailed, which is likely, then a log transformation could prevent the end of the tail from having undue influence.</li>
<li>To make effect sizes more interpretable, scale the variable from 0-1.</li>
<li>For variables with strong skew or long tails, a quantile transformation can prevent extreme values from exerting excess influence on DE results.</li>
</ul>
</section>
<section id="binning-discretizing" class="level4" data-number="2.1.2">
<h4 data-number="2.1.2" class="anchored" data-anchor-id="binning-discretizing"><span class="header-section-number">2.1.2</span> Binning / discretizing:</h4>
<p>You can avoid assumptions about the shape of a variable by binning it, e.g.&nbsp;assigning cells to 20 bins of “distance to nearest T-cell”. Then, you can use a likelihood ratio test against a null model (intercept-only) to test the compound null hypothesis that “this variable predicts expression.” Because we usually have so many cells to work with, the slight loss in statistical power that comes with this approach is usually a cheap tradeoff to make for its flexibility. Also nice: you can use plots like the below to show how each gene changes expression across bins:</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/DE-guide/figures/bins.png" class="img-fluid figure-img" style="width:110.0%"></p>
</figure>
</div>
</div>
</div>
<p>Note: When binning, examine the number of cells per bin. If some bins have too few cells to produce stable results, either consider discarding them, or take wider bins.</p>
</section>
<section id="splines-flexibility-without-bins" class="level4" data-number="2.1.3">
<h4 data-number="2.1.3" class="anchored" data-anchor-id="splines-flexibility-without-bins"><span class="header-section-number">2.1.3</span> Splines: flexibility without bins</h4>
<p>Discretizing / binning has one drawback: the fit to discretized variables can be highly discontinuous, e.g.&nbsp;with a single bin having a large estimated effect size. It often makes sense to assume your design variable’s impact on gene expression varies smoothly across its range. To achieve this, you can use splines:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># define a continuous variable:</span></span>
<span id="cb1-2">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rnorm</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5000</span>)</span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fit splines to it, producing a matrix of 10 dimensions:</span></span>
<span id="cb1-4">splinex <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(splines<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ns</span>(x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">df =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>))</span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># the "splinex" matrix can now be input into DE models</span></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># how splinex relates to x:</span></span>
<span id="cb1-8">o <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">order</span>(x)</span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(x, splinex[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"variable"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"spline values"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex.lab =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.3</span>)</span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># draw each spline as a line:</span></span>
<span id="cb1-11"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(splinex)) {</span>
<span id="cb1-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lines</span>(x[o], splinex[o, i], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alpha</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkblue"</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>))</span>
<span id="cb1-13">}</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/DE-guide/figures/splines.png" class="img-fluid figure-img" style="width:170.0%"></p>
</figure>
</div>
</div>
</div>
<p>To measure a gene’s significance when using splines, use a likelihood ratio test against an intercept-only null model, just as you would with a binned variable. To explore your results, plot mean values across bins for your most significant genes as in the above heatmap.</p>
</section>
</section>
<section id="example-data" class="level3" data-number="2.2">
<h3 data-number="2.2" class="anchored" data-anchor-id="example-data"><span class="header-section-number">2.2</span> Example data</h3>
<p>First, let’s pull in data in a standard format. We’ll assume you’re starting with flat files exported from AtoMx, read into R as demonstrated in our basic analysis vignettes.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Expected inputs:</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># - counts: a sparse matrix of expression in cells * genes</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># - metadata: a data frame or data table of cell metadata, aligned by row to counts</span></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># - xy: a 2-column matrix of xy positions, aligned by row to counts</span></span>
<span id="cb2-5"></span>
<span id="cb2-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Further calculations: get normalized counts:</span></span>
<span id="cb2-7">norm_factors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(meta_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>nCount_RNA) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> meta_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>nCount_RNA </span>
<span id="cb2-8">norm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Diagonal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> norm_factors) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> counts</span></code></pre></div>
</details>
</div>
<p>For our examples, we’ll look at a subset of data from a breast tumor. Our metadata picks up midway through an analysis: we already have cell types and niche calls in the metadata. Here’s a glance at all the metadata we’ll use:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(meta_data)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/DE-guide/figures/metadatatable.png" class="img-fluid figure-img" style="width:170.0%"></p>
</figure>
</div>
</div>
</div>
<p>…and the sample itself:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">clustcols  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Tumor=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#C4B7A6"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Macrophage=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#D55E00"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Fibroblast=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#009E73"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dendritic=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#CC79A7"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Necrotic cells</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#999999"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Tcell=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0072B2"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Plasma=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#56B4E9"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">neutrophil=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#E69F00"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">innate_lymphoid=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#F0E442"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Vasculature=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#800000"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nk=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#117733"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mast=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#A65628"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bcell=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#6A3D9A"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Unknown=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#666666"</span>)</span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mar =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb4-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(xy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">asp =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb4-5">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> clustcols[meta_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>celltype], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb4-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"topleft"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> clustcols, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(clustcols), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/DE-guide/figures/celltypemap.png" class="img-fluid figure-img" style="width:170.0%"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="gallery-of-differential-expression-setups" class="level3" data-number="2.3">
<h3 data-number="2.3" class="anchored" data-anchor-id="gallery-of-differential-expression-setups"><span class="header-section-number">2.3</span> Gallery of Differential Expression setups</h3>
<p>Below we demonstrate a variety of ways to define predictor variables for DE. In each case, we’ll plot the variable spatially and provide code for defining it.</p>
<section id="niche-spatial-domain-unsupervised" class="level4" data-number="2.3.1">
<h4 data-number="2.3.1" class="anchored" data-anchor-id="niche-spatial-domain-unsupervised"><span class="header-section-number">2.3.1</span> Niche / spatial domain (unsupervised)</h4>
<p>A great many algorithms exist for clustering cellular neighborhoods into niches / spatial domains. Lately we favor the Novae algorithm. However you define niches, they’re often a reasonable basis for a DE analysis.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## (use pre-calculated niche)</span></span>
<span id="cb5-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## plot niche:</span></span>
<span id="cb5-3">inds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> meta_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>celltype <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tumor"</span></span>
<span id="cb5-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mar =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb5-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(xy[inds, ], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">asp =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb5-6">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tumor cells colored by niche"</span>,</span>
<span id="cb5-7">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dodgerblue3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orange"</span>)[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(meta_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>niche[inds]))],</span>
<span id="cb5-8">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb5-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">points</span>(xy[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>inds, ], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey80"</span>)</span>
<span id="cb5-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"topleft"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dodgerblue3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orange"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"niche = "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">levels</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(meta_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>niche[inds]))), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/DE-guide/figures/niche.png" class="img-fluid figure-img" style="width:170.0%"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="custom-defined-niche" class="level3" data-number="2.4">
<h3 data-number="2.4" class="anchored" data-anchor-id="custom-defined-niche"><span class="header-section-number">2.4</span> Custom-defined niche</h3>
<p>Niches defined through a spatial clustering algorithm are useful for exploring a dataset, but often they are not perfectly aligned to your understanding of a tissue. It is therefore often necessary to define niches by hand, to capture precisely the biology you want. Examples include anatomical structures like cortical layers in the brain, disease states like areas of inflammation, or custom constructs like “near vs.&nbsp;far from glomeruli”.</p>
<p>In general, such partitions of the data can be built by applying the code of the following examples, using thresholds to dichotomize continuous variables as needed.</p>
<p>For example, in a past anaylsis of a kidney, we defined niches as follows:</p>
<ul>
<li>“glomeruli”: cells with &gt;30% of their nearest neighbors being glomerulus-specific cell types (podocyte, mesangial cell, glomerular endothelial cells).</li>
<li>“glomerular boundary”: cells within a fixes distance of glomeruli</li>
<li>“tubulointerstitium”: everything else</li>
<li>“immune hotspots”: cells with &gt;10 immune cells in their nearest neighbors. This overrode all the above annotations.</li>
</ul>
<p>This approach was driven by our knowledge of the tissue and by our biological questions.</p>
</section>
<section id="distance-to-nearest-cell-from-a-given-cluster-group" class="level3" data-number="2.5">
<h3 data-number="2.5" class="anchored" data-anchor-id="distance-to-nearest-cell-from-a-given-cluster-group"><span class="header-section-number">2.5</span> Distance to nearest cell from a given cluster / group</h3>
<p>A common and productive DE question is: how does my favorite cell type change with proximity to another cell type?</p>
<p>To demonstrate how to ask this kind of question, below we score tumor cells by their distance to the nearest T-cell:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Calculate tumor cells' distance to nearest T-cell:</span></span>
<span id="cb6-2">inds.tumor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> meta_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>celltype <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tumor"</span></span>
<span id="cb6-3">inds.t     <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> meta_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>celltype <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tcell"</span></span>
<span id="cb6-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stopifnot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">any</span>(inds.tumor), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">any</span>(inds.t))</span>
<span id="cb6-5">dist2tcell <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> FNN<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get.knnx</span>(</span>
<span id="cb6-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data  =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(xy[inds.t, , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">drop=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>]),</span>
<span id="cb6-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">query =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(xy),</span>
<span id="cb6-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb6-9">)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>nn.dist[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb6-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># store in metadata:</span></span>
<span id="cb6-11">meta_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>dist2tcell <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dist2tcell</span>
<span id="cb6-12"></span>
<span id="cb6-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## plot tumor cells, coloring by distance to T-cell:</span></span>
<span id="cb6-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mar =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb6-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(xy[inds.tumor, ], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">asp =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb6-16">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tumor cells colored by distance to T-cell"</span>,</span>
<span id="cb6-17">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colorRampPalette</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#A6CEE3"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#1F78B4"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#081D58"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)))(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">101</span>)[</span>
<span id="cb6-18">       <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> dist2tcell <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(dist2tcell))</span>
<span id="cb6-19">     ][inds.tumor],</span>
<span id="cb6-20">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb6-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">points</span>(xy[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>inds.tumor, ], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wheat"</span>)</span>
<span id="cb6-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">points</span>(xy[inds.t, ], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span>
<span id="cb6-23"></span>
<span id="cb6-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"topleft"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#1F78B4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wheat"</span>), </span>
<span id="cb6-25">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tumor cells (colored by distance to T-cells)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T-cells"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"other cells"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/DE-guide/figures/dist2tcell.png" class="img-fluid figure-img" style="width:170.0%"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="distance-to-nearest-cell-from-an-anatomical-structure" class="level3" data-number="2.6">
<h3 data-number="2.6" class="anchored" data-anchor-id="distance-to-nearest-cell-from-an-anatomical-structure"><span class="header-section-number">2.6</span> Distance to nearest cell from an anatomical structure</h3>
<p>Many cell types fall in structures, e.g.&nbsp;blood vessels, tumor glands, or glomeruli. When calculating distance to a structure, it is tempting to simply record distance to the nearest relevant cell type, e.g.&nbsp;endothelial cells for blood vessels, or tumor cells for tumor glands, or podocytes and mesangial cells for glomeruli. However, this approach is easily distorted by sporadic cell typing errors. It is more robust to look at distance to the nearest <em>spatially contiguous group</em> of the target cell type.</p>
<p>Below, we’ll define an annotation for ‘vascular structure’, based on contiguous groups of endothelial cells. We use DBSCAN algorithm, an incredibly fast algorithm which can cluster together cells within a fixed radius of each other. We’ll keep only cells that fall in clusters of at least 3.</p>
<p>First let’s look at our target cell type:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## show the target cell type: vasculature</span></span>
<span id="cb7-2">inds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> meta_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>celltype <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Vasculature"</span></span>
<span id="cb7-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mar =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb7-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(xy[, ], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">asp =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb7-5">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Vasculature"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey80"</span>,</span>
<span id="cb7-6">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb7-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">points</span>(xy[inds, ], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkred"</span>)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/DE-guide/figures/vessel.png" class="img-fluid figure-img" style="width:170.0%"></p>
</figure>
</div>
</div>
</div>
<p>Then retain only the spatially-contiguous groups:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## use dbscan to isolate clusters of Vasculature cells:</span></span>
<span id="cb8-2">db <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dbscan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbscan</span>(xy[inds, ],</span>
<span id="cb8-3">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">eps =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># very small radius</span></span>
<span id="cb8-4">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">minPts =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cluster</span>
<span id="cb8-5">inds.in.clusters <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> db <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb8-6">is.vessel <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> inds</span>
<span id="cb8-7">is.vessel[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(inds)] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> inds.in.clusters</span>
<span id="cb8-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># store in metadata:</span></span>
<span id="cb8-9">meta_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>is.vessel <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> is.vessel</span>
<span id="cb8-10"></span>
<span id="cb8-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## show the result:</span></span>
<span id="cb8-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mar =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb8-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(xy[, ], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">asp =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb8-14">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Vasculature after filter with dbscan"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey80"</span>,</span>
<span id="cb8-15">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb8-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">points</span>(xy[inds <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>is.vessel,], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>)</span>
<span id="cb8-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">points</span>(xy[is.vessel, ], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span>
<span id="cb8-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"topleft"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>), </span>
<span id="cb8-19">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Blood vessel cells"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Vasculature cells excluded by dbscan"</span>))</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/DE-guide/figures/vesseldb.png" class="img-fluid figure-img" style="width:170.0%"></p>
</figure>
</div>
</div>
</div>
<p>After obtaining this cleaned up annotation, we could then take the distance to it using<br>
code from the tumor distance to T-cell example earlier.</p>
</section>
<section id="number-of-a-given-cell-type-in-a-neighborhood" class="level3" data-number="2.7">
<h3 data-number="2.7" class="anchored" data-anchor-id="number-of-a-given-cell-type-in-a-neighborhood"><span class="header-section-number">2.7</span> Number of a given cell type in a neighborhood</h3>
<p>Another common question: how does a cell type change in response to the abundance of another cell type in its neighborhood? Here we’ll log-transform our predictor to acknowledge the probability of diminishing effects of each new T-cell in a tumor cell’s neighborhood.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Calculate the number of T-cells in each tumor cell's neighborhood:</span></span>
<span id="cb9-2">inds.tumor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> meta_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>celltype <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tumor"</span></span>
<span id="cb9-3">inds.t <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> meta_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>celltype <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tcell"</span></span>
<span id="cb9-4"></span>
<span id="cb9-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get the 50 nearest neighbors of each cell:</span></span>
<span id="cb9-6">neighbors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> InSituCor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nearestNeighborGraph</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xy[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> xy[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb9-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (or alternatively, get neighbors within a radius of 0.1mm):</span></span>
<span id="cb9-8">neighbors.radius <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> InSituCor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">radiusBasedGraph</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xy[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> xy[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">R =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb9-9"></span>
<span id="cb9-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># count the T-cells among cells' neighbors:</span></span>
<span id="cb9-11">neighboring.tcells <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> InSituCor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">neighbor_sum</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (meta_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>celltype <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tcell"</span>),</span>
<span id="cb9-12">                                               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">neighbors =</span> neighbors)</span>
<span id="cb9-13">log.neighboring.tcells <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log2</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> neighboring.tcells)</span>
<span id="cb9-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># store in metadata:</span></span>
<span id="cb9-15">meta_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>log.neighboring.tcells <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> log.neighboring.tcells</span>
<span id="cb9-16"></span>
<span id="cb9-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># color tumor cells by the number of T-cell neighbors:</span></span>
<span id="cb9-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mar =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb9-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(xy[inds.tumor, ], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">asp =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb9-20">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tumor cells colored by log2(number of T-cell neighbors)"</span>,</span>
<span id="cb9-21">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colorRampPalette</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#A6CEE3"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#1F78B4"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#081D58"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)))(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">101</span>)[</span>
<span id="cb9-22">       <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> log.neighboring.tcells <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(log.neighboring.tcells))</span>
<span id="cb9-23">     ][inds.tumor],</span>
<span id="cb9-24">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb9-25"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">points</span>(xy[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>inds.tumor, ], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wheat"</span>)</span>
<span id="cb9-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">points</span>(xy[inds.t, ], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>)</span>
<span id="cb9-27"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"topleft"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#1F78B4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wheat"</span>), </span>
<span id="cb9-28">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tumor cells colored by log2(number of neighboring T-cells)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T-cells"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"other cells"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/DE-guide/figures/ntcells.png" class="img-fluid figure-img" style="width:170.0%"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="gene-expression-in-cells-neighborhoods" class="level3" data-number="2.8">
<h3 data-number="2.8" class="anchored" data-anchor-id="gene-expression-in-cells-neighborhoods"><span class="header-section-number">2.8</span> Gene expression in cells’ neighborhoods</h3>
<p>To investigate how a gene impacts nearby cells, we can run differential expression against the gene’s total expression in each cell’s neighborhood. Below, we score macrophages for the total abundance of CXCL14 in their neighborhoods. This sets us up for DE studies of how macrophages respond to signaling from CXCL14. In the below example, we take the additional step of log-transforming neighborhood CXCL14.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## get average CXCL14 expression in each cell's neighborhood:</span></span>
<span id="cb10-2"></span>
<span id="cb10-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get the 50 nearest neighbors of each cell:</span></span>
<span id="cb10-4">neighbors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> InSituCor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nearestNeighborGraph</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xy[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> xy[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">N =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>)</span>
<span id="cb10-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (or alternatively, get neighbors within a radius of 0.1mm):</span></span>
<span id="cb10-6">neighbors.radius <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> InSituCor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">radiusBasedGraph</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xy[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> xy[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">R =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb10-7"></span>
<span id="cb10-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># normalized CXCL14:</span></span>
<span id="cb10-9">normvals <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> counts[, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CXCL14"</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> meta_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>nCount_RNA</span>
<span id="cb10-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get average CXCL14 expression in each cell's neighborhood:</span></span>
<span id="cb10-11">neighboring.cxcl14 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> InSituCor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">neighbor_sum</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> normvals,</span>
<span id="cb10-12">                                               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">neighbors =</span> neighbors)</span>
<span id="cb10-13">log2.neighboring.cxcl14 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log2</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> neighboring.cxcl14)</span>
<span id="cb10-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add to metadata:</span></span>
<span id="cb10-15">meta_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>log2.neighboring.cxcl14 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> log2.neighboring.cxcl14</span>
<span id="cb10-16"></span>
<span id="cb10-17"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## plot macrophages, coloring by local CXCL14 expression:</span></span>
<span id="cb10-18">inds.mac <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> meta_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>celltype <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Macrophage"</span></span>
<span id="cb10-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mar =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb10-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(xy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">asp =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wheat"</span>,</span>
<span id="cb10-21">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Macrophages colored by log2(neighborhood CXCL14 expression)"</span>,</span>
<span id="cb10-22">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb10-23"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">points</span>(xy[inds.mac, ], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>, </span>
<span id="cb10-24">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colorRampPalette</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#A6CEE3"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#1F78B4"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#081D58"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)))(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">101</span>)[</span>
<span id="cb10-25">       <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> log2.neighboring.cxcl14 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(log2.neighboring.cxcl14))</span>
<span id="cb10-26">     ][inds.mac])</span>
<span id="cb10-27"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"topleft"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#1F78B4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wheat"</span>), </span>
<span id="cb10-28">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Macrophages colored by log2(neighborhood CXCL14 expression)"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"other cells"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/DE-guide/figures/cxcl14.png" class="img-fluid figure-img" style="width:170.0%"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="distance-to-a-hand-selected-region" class="level3" data-number="2.9">
<h3 data-number="2.9" class="anchored" data-anchor-id="distance-to-a-hand-selected-region"><span class="header-section-number">2.9</span> Distance to a hand-selected region</h3>
<p>Sometimes it’s easier to select a region of a tissue by hand than to devise a computational rule to do so. If your study has e.g.&nbsp;hundreds of glomeruli, you probably want a rule to define in/out of a glomerulus. But if your study has e.g.&nbsp;just a few tertiary lymphoid structures, it’s probably simpler to circle them by hand. Below is code for hand-drawing Regions Of Interest (ROIs) and flagging cells as in/out of them:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' Define roi's by Clicking on cells in a graphics window</span></span>
<span id="cb11-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' </span></span>
<span id="cb11-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' How to use:</span></span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' \itemize{</span></span>
<span id="cb11-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' \item Plot your cells in xy space. Use asp = 1. </span></span>
<span id="cb11-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' \item Click cells around the boundary of your roi.</span></span>
<span id="cb11-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' \item Hit enter or escape when done with your selection.</span></span>
<span id="cb11-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' }</span></span>
<span id="cb11-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' Other details:</span></span>
<span id="cb11-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' \itemize{</span></span>
<span id="cb11-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' \item Uses graphics::identify() to select points. </span></span>
<span id="cb11-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' \item Only works for base graphics, not ggplots.</span></span>
<span id="cb11-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' \item Can go wrong (draw rois in the wrong place) if the plot doesn't have asp = 1. </span></span>
<span id="cb11-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' }</span></span>
<span id="cb11-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @param xy Matrix of xy positions used in the plot. </span></span>
<span id="cb11-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @param show Logical, for whether to show the selected roi when you're done. </span></span>
<span id="cb11-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @param type One of:</span></span>
<span id="cb11-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' \itemize{</span></span>
<span id="cb11-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' \item "direct" to define the boundary points in order, exactly as you click</span></span>
<span id="cb11-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' \item "ahull" to draw an alpha hull around your selection</span></span>
<span id="cb11-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' } </span></span>
<span id="cb11-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @return A list with 3 elements:</span></span>
<span id="cb11-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' \itemize{</span></span>
<span id="cb11-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' \item roi: The indices of the points in the roi</span></span>
<span id="cb11-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' \item selected: The indices of the user-selected points</span></span>
<span id="cb11-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' \item hull: The hull of the roi, either the user-selected polygon or the results of alphahull:ahull}</span></span>
<span id="cb11-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @importFrom graphics identify</span></span>
<span id="cb11-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @importFrom alphahull ahull</span></span>
<span id="cb11-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' @</span></span>
<span id="cb11-30">defineROI <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(xy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"direct"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">boundary_points =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) {</span>
<span id="cb11-31">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.null</span>(boundary_points)) {</span>
<span id="cb11-32">    hull.x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> boundary_points[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb11-33">    hull.y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> boundary_points[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb11-34">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get points in the boundary:</span></span>
<span id="cb11-35">    roi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">point.in.polygon</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">point.x =</span> xy[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">point.y =</span> xy[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], </span>
<span id="cb11-36">                                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pol.x =</span> hull.x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pol.y =</span> hull.y) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb11-37">    inds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb11-38">    hull <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb11-39">  }</span>
<span id="cb11-40">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.null</span>(boundary_points)) {</span>
<span id="cb11-41">    </span>
<span id="cb11-42">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.element</span>(type, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"direct"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ahull"</span>))) {</span>
<span id="cb11-43">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stop</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"must either give boundary_points or set type to </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\'</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">direct</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\'</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> or </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\'</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">ahull</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\'</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-44">    }</span>
<span id="cb11-45">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># user identifies boundary:</span></span>
<span id="cb11-46">    identifyres <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">identify</span>(xy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">order =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb11-47">    inds <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> identifyres<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ind[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">order</span>(identifyres<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>order)]</span>
<span id="cb11-48">    </span>
<span id="cb11-49">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"direct"</span>) {</span>
<span id="cb11-50">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The hull is just the polygon you've selected:</span></span>
<span id="cb11-51">      hull.x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> xy[inds, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb11-52">      hull.y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> xy[inds, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]</span>
<span id="cb11-53">      hull <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> inds</span>
<span id="cb11-54">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get points in the boundary:</span></span>
<span id="cb11-55">      roi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sp<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">point.in.polygon</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">point.x =</span> xy[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">point.y =</span> xy[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], </span>
<span id="cb11-56">                                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pol.x =</span> hull.x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pol.y =</span> hull.y) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span></span>
<span id="cb11-57">    }</span>
<span id="cb11-58">    </span>
<span id="cb11-59">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ahull"</span>) {</span>
<span id="cb11-60">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get alpha hull of boundary:</span></span>
<span id="cb11-61">      hull <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> alphahull<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ahull</span>(xy[inds, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], xy[inds, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>)</span>
<span id="cb11-62">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get points in the boundary:</span></span>
<span id="cb11-63">      roi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> alphahull<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inahull</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ahull.obj =</span> hull, xy)</span>
<span id="cb11-64">    }</span>
<span id="cb11-65">    </span>
<span id="cb11-66">  }</span>
<span id="cb11-67">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot:</span></span>
<span id="cb11-68">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (show) {</span>
<span id="cb11-69">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">points</span>(xy[inds, ], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)</span>
<span id="cb11-70">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">polygon</span>(xy[hull, ])</span>
<span id="cb11-71">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">points</span>(xy[roi, ], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alpha</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gold"</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>))</span>
<span id="cb11-72">  }</span>
<span id="cb11-73">  </span>
<span id="cb11-74">  out <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">roi =</span> roi, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">selected =</span> inds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hull =</span> hull)</span>
<span id="cb11-75">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(out)</span>
<span id="cb11-76">}</span>
<span id="cb11-77"></span>
<span id="cb11-78"></span>
<span id="cb11-79"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## example usage:</span></span>
<span id="cb11-80">clustcols  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Tumor=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#C4B7A6"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Macrophage=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#D55E00"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Fibroblast=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#009E73"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dendritic=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#CC79A7"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Necrotic cells</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#999999"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Tcell=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0072B2"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Plasma=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#56B4E9"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">neutrophil=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#E69F00"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">innate_lymphoid=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#F0E442"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Vasculature=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#800000"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nk=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#117733"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mast=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#A65628"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bcell=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#6A3D9A"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Unknown=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#666666"</span>)</span>
<span id="cb11-81"></span>
<span id="cb11-82"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mar =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb11-83"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(xy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">asp =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb11-84">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> clustcols[meta_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>celltype], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb11-85"></span>
<span id="cb11-86">roi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">defineROI</span>(xy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"direct"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) </span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/DE-guide/figures/ROI.png" class="img-fluid figure-img" style="width:170.0%"></p>
</figure>
</div>
</div>
</div>
<p>Note that the <code>identify()</code> function used by <code>defineROI()</code> above can be finnicky and surprisingly challenging to debug. If it works in your R environment, great. If not, then you can instead call the <code>defineROI()</code> function as in below code to flag cells inside a set of pre-defined xy coordinates.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># draw the tissue:</span></span>
<span id="cb12-2">clustcols  <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Tumor=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#C4B7A6"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Macrophage=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#D55E00"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Fibroblast=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#009E73"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dendritic=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#CC79A7"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Necrotic cells</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#999999"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Tcell=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0072B2"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Plasma=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#56B4E9"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">neutrophil=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#E69F00"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">innate_lymphoid=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#F0E442"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Vasculature=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#800000"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nk=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#117733"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mast=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#A65628"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bcell=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#6A3D9A"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Unknown=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#666666"</span>)</span>
<span id="cb12-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mar =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb12-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(xy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">asp =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb12-5">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> clustcols[meta_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>celltype], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb12-6"></span>
<span id="cb12-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># place a grid over it to determine where to pick boundary points:</span></span>
<span id="cb12-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pretty</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">range</span>(xy[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">v =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pretty</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">range</span>(xy[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey20"</span>)</span>
<span id="cb12-9"></span>
<span id="cb12-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># select points by hand:</span></span>
<span id="cb12-11">boundary_points <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">matrix</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb12-12">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.85</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.05</span>,</span>
<span id="cb12-13">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.1</span>,</span>
<span id="cb12-14">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.05</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.95</span>,</span>
<span id="cb12-15">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.95</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.85</span>,</span>
<span id="cb12-16">    <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.87</span>,<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">6.9</span></span>
<span id="cb12-17">), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb12-18"></span>
<span id="cb12-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># define the ROI, i.e. the points in the boundary:</span></span>
<span id="cb12-20">roi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">defineROI</span>(xy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">boundary_points =</span> boundary_points, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) </span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/DE-guide/figures/gridROI.png" class="img-fluid figure-img" style="width:170.0%"></p>
</figure>
</div>
</div>
</div>
<p>Then, you can record distance to your ROI:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Calculate macrophages' distance to nearest T-cell:</span></span>
<span id="cb13-2">inds.mac <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> meta_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>celltype <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Macrophage"</span></span>
<span id="cb13-3">inds.roi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> roi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>roi</span>
<span id="cb13-4">dist2roi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> FNN<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get.knnx</span>(</span>
<span id="cb13-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> xy[inds.roi, ], <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2-column matrix of xy locations</span></span>
<span id="cb13-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">query =</span> xy, </span>
<span id="cb13-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>nn.dist</span>
<span id="cb13-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># add to metadata:</span></span>
<span id="cb13-9">meta_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>dist2roi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dist2roi</span>
<span id="cb13-10"></span>
<span id="cb13-11"></span>
<span id="cb13-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## plot:</span></span>
<span id="cb13-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mar =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb13-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(xy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">asp =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb13-15">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wheat"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb13-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">points</span>(xy[inds.roi, ], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orange"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb13-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">points</span>(xy[inds.mac, ], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,</span>
<span id="cb13-18">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colorRampPalette</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#A6CEE3"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#1F78B4"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#081D58"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>))(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">101</span>)[</span>
<span id="cb13-19">       <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> dist2roi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(dist2roi))][inds.mac])</span>
<span id="cb13-20"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"topleft"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>,</span>
<span id="cb13-21">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#1F78B4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"orange"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"wheat"</span>),</span>
<span id="cb13-22">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Macrophages colored by distance to ROI"</span>,</span>
<span id="cb13-23">                  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cells in ROI"</span>,</span>
<span id="cb13-24">                  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Other cells"</span>))</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/DE-guide/figures/dist2roi.png" class="img-fluid figure-img" style="width:170.0%"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="considerations-for-running-de" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="considerations-for-running-de"><span class="header-section-number">3</span> Considerations for running DE</h2>
<p>Above we showed how to set up a variable to run DE against. Now we turn to the mechanics of actually running DE. We’ll discuss 2 important topics:</p>
<ul>
<li>How to handle bias arising from cell segmentation errors</li>
<li>How to account for possible spatial correlation in your data</li>
</ul>
<p>Both of these topics are discussed in great depth in <a href="https://www.biorxiv.org/content/10.1101/2024.08.02.606405v2.abstract" target="_blank">this preprint</a>, which accompanies our differential expression package smiDE (<a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/smiDE/" target="_blank">blog post</a>) (<a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/tree/Main/_code/smiDE" target="_blank">package</a>). Here we’ll merely summarize.</p>
<section id="bias-from-segmentation-errors" class="level3" data-number="3.1">
<h3 data-number="3.1" class="anchored" data-anchor-id="bias-from-segmentation-errors"><span class="header-section-number">3.1</span> Bias from segmentation errors:</h3>
<p>Until the day that cell segmentation algorithms become perfectly accurate, cells’ expression profiles will occasionally be assigned transcripts from neighboring cells. Because the gene identity of these misassigned transcripts isn’t random across space, they can act as a powerful unmodeled confounding variable. For example: if we’re comparing T-cells in the stroma to T-cells in the tumor, the stroma T-cell profiles will contain transcripts from fibroblasts, and the tumor T-cell profiles will contain transcripts from tumor cells. DE will then discover many highly significant genes: fibroblast genes will appear up-regulated in stroma T-cells, and tumor genes will appear up in tumor-residing T-cells. These spurious hits waste analyst time and compromise analysis quality.</p>
<p>We propose two countermeasures to this bias, both implemented in the smiDE package:</p>
<ol type="1">
<li><p><strong>Don’t even analyze the genes at greatest risk of this bias.</strong> If you’re running DE on T-cells, don’t include genes like EPCAM, which is highly abundant in tumor cells and nearly absent in T-cells. smiDE implements a simple filter to flag genes based on their risk of cell segmentation bias - see the function <code>overlap_ratio_metric()</code>.</p></li>
<li><p><strong>In the remaining genes, adjust for minor bias.</strong> We measure a gene’s potential to suffer misassignment into a cell using its mean expression <em>in other cell types</em> around the cell. This then becomes a term in DE models. Taking this step mitigates bias from segmentation errors, though does not fully remove it.</p></li>
</ol>
</section>
<section id="accounting-for-spatial-correlation" class="level3" data-number="3.2">
<h3 data-number="3.2" class="anchored" data-anchor-id="accounting-for-spatial-correlation"><span class="header-section-number">3.2</span> Accounting for spatial correlation</h3>
<p>Due to the large number of cells in most experiments, it’s common for DE analyses to produce infinitesimal p-values, e.g.&nbsp;10^-60. This seems intuitively wrong: how can a dataset hold such strong evidence for expression changes? Where traditional models differ from our intuition (and from common sense) is the assumption that every cell is <em>independent</em> from every other cell. This is almost never true: cells nearby each other are subject to similar environmental influences unrelated to our design variables, so so their standard errors will be dependent, or correlated. In practice, this means that p-values from models assuming independence will be profoundly over-excitable.</p>
<p>The field of spatial statistics has long grappled with inference in the presence of spatial correlation such as this, and a sizeable arsenal of methods has been developed. In Vasconcelos &amp; McGuire et al., the aforementioned preprint, we characterize the performance of many of these methods, along with some new ones we propose. We find a tradeoff between accuracy and computational efficiency, with the best methods taking unacceptably long to run in large datasets. Our key finding is that ignoring spatial correlation, i.e.&nbsp;running a traditional DE method, leads to large numbers of false positive hits, often far in excess of the presumed true positive hits whose p-values survive accounting for spatial correlation. Whichever method in the paper seems suitable for your study, you can run it using <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/tree/Main/_code/smiDE" target="_blank">our R package smiDE</a>.</p>
</section>
<section id="other-model-choice-considerations" class="level3" data-number="3.3">
<h3 data-number="3.3" class="anchored" data-anchor-id="other-model-choice-considerations"><span class="header-section-number">3.3</span> Other model choice considerations</h3>
<p>We find that negative binomial models outperform Gaussian models, but at a cost in computational time. Poisson models offer a middle ground in terms of computational time, but typically underestimate standard errors, leading to inflated Type I errors.</p>
<p>The performance of Gaussian models is generally acceptable, making them a reasonable choice when computation time is a limitation. smiDE implements all these options under a variety of spatial correlation-aware methods.</p>
</section>
</section>
<section id="approach-for-maximal-speed-simultaneous-fitting-of-all-genes-using-linear-algebra" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="approach-for-maximal-speed-simultaneous-fitting-of-all-genes-using-linear-algebra"><span class="header-section-number">4</span> Approach for maximal speed: simultaneous fitting of all genes using linear algebra</h2>
<p>Unfortunately, there’s a cost in compute time and money to many of the more theoretically optimal DE approaches (e.g.&nbsp;using a NB distribution, accounting for spatial correlation, adjusting for bias from segmentation errors). An analysis of 19k genes in hundreds of thousands of cells can take a reasonably powerful EC2 instance a day or more to complete. When computation time is a concern, or when simply pursuing exploratory analysis, we recommend using a less optimal but much faster approach. In the code below, we demonstrate how to run a basic Gaussian / “ordinary least squares” regression simultaneously across all genes at once. This code returns reasonable DE results in seconds. This approach cannot model spatial correlation, nor can it adjust for confounding from cell segmentation errors. But its speed makes it very useful for exploratory analyses. It could also be used to prioritize genes for more computationally expensive models.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">source</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/blob/Main/_code/PatchDE/DEutils.R"</span>)</span>
<span id="cb14-2"></span>
<span id="cb14-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Example usage:</span></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># run DE:</span></span>
<span id="cb14-5">inds.tumor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> meta_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>celltype <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tumor"</span></span>
<span id="cb14-6">inds.t <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> meta_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>celltype <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tcell"</span></span>
<span id="cb14-7">dist2tcell <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> FNN<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get.knnx</span>(</span>
<span id="cb14-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> xy[inds.t, ], <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2-column matrix of xy locations</span></span>
<span id="cb14-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">query =</span> xy, </span>
<span id="cb14-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>nn.dist</span>
<span id="cb14-11"></span>
<span id="cb14-12">out <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hastyDE</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> norm[inds.tumor, ], </span>
<span id="cb14-13">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">df =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dist2tcell"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> dist2tcell[inds.tumor])) </span>
<span id="cb14-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(out)</span></code></pre></div>
</details>
</div>
</section>
<section id="multi-tissue-analyses" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="multi-tissue-analyses"><span class="header-section-number">5</span> Multi-tissue analyses</h2>
<p>So far we have only discussed the case of a single-tissue analysis. When analyzing multiple tissues, we have a simple recommendation: instead of running one giant DE model across all tissues at once, run your model separately for each tissue. This approach has a few benefits. First, it’s easier to manage computationally - you don’t need to load several large datasets into memory at once. Second, it’s scientifically appealing: we’ll usually have relatively few tissues and a whole lot of cells per tissue. This means we’re powered to run DE within each tissue, and there are few enough tissues that we have the cognitive ability to understand their results individually rather than averaged together. This per-tissue approach lets you see conclusions like, “T-cells react strongly to tumor cells in these three tissues, but not in these other two.” If you want to reduce a DE relationship to a single number, you can always use metaanalysis techniques to get the average relationship across all tissues.</p>
<p>Our favorite way to display a multi-tissue DE analysis is with a heatmap of per-tissue results, coloring by effect size when results meet a p-value threshold:</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/DE-guide/figures/per_tissue_heatmap.png" class="img-fluid figure-img" style="width:170.0%"></p>
</figure>
</div>
</div>
</div>
<p>This approach lets you see which DE trends are universal and which are tissue-specific.</p>
<section id="best-practices-for-multi-tissue-de" class="level3" data-number="5.1">
<h3 data-number="5.1" class="anchored" data-anchor-id="best-practices-for-multi-tissue-de"><span class="header-section-number">5.1</span> Best practices for multi-tissue DE:</h3>
<ol type="1">
<li>Choose an appropriate single-tissue DE approach as described earlier. We recommend the smiDE library for most cases.</li>
<li>As with all DE analyses, remove genes failing smiDE’s cell overlap ratio metric.</li>
<li>Display results in a heatmap of genes x tissues. Color by effect size, and only give color to results with p &lt; 0.001 (or choose your own threshold). Show only genes that meet a strong effect size / p-value threshold in at least one tissue.</li>
<li>Summarize each gene’s total evidence with a meta-analysis. We have had luck with the metafor package.</li>
</ol>
</section>
</section>
<section id="experimental-approach-stratifying-de-across-tissue-patches" class="level2" data-number="6">
<h2 data-number="6" class="anchored" data-anchor-id="experimental-approach-stratifying-de-across-tissue-patches"><span class="header-section-number">6</span> Experimental approach: stratifying DE across tissue patches</h2>
<p>Here we describe an alternative, experimental approach to DE that we have found to be useful. We emphasize that this approach is thus far <strong>very</strong> lightly tested, but we include it here before fully developing it in hopes that it proves useful and that community feedback strengthens a later release.</p>
<p>Our motivation arises from two complaints about typical tissue-wide DE:</p>
<ol type="1">
<li><strong>Biology</strong>: we’ll often expect a DE relationship to vary across space, or to only occur locally. For example, perhaps T-cells only respond to nearby tumor cells when they’re in the nutrient-rich stroma rather than the tumor interior. When we look across the whole tissue for this relationship, we have a harder time discovering it since we model both regions where it occurs and regions where it doesn’t. In statistical terminology: unobserved variables across the span of the tissue are acting as effect modifiers.</li>
<li><strong>Convenience</strong>: because accounting for spatial correlation can be slow, running DE on a highly abundant cell type often means making a choice between extreme compute times or using sub-optimal methods that ignore spatial correlation.</li>
</ol>
<p>Our solution is to divide the tissue into small patches, then to run DE separately within each patch. This produces a matrix of DE results across genes and patches. Then, looking at patch-specific results, we can discover strong relationships that only occur in a few places. And using metaanalysis techniques across all patches, we recover our ability to discover relationships that exist broadly. In short, we get a more nuanced picture of DE behavior within a diverse tissue.</p>
<p>This approach has one other benefit: when we analyze small patches, spatial correlation becomes less important, as the spatial context within a given patch will be less variable than spatial context across a whole tissue. This lets us run the super-fast algorithm above within each patch. The speed benefit of this approach is so great that even in a large WTX dataset we obtain full DE results across all patches in minutes, while running just a single tissue-wide model for each gene might take a day.</p>
<p>To support patch-based DE. We have created an algorithm to partition a tissue into patches. This algorithm, “patchDE”, attempts to build patches that achieve a balance between the following goals:</p>
<ul>
<li>Ensure each patch has reasonable statistical power</li>
<li>Prevent overly large patches</li>
<li>Build as many patches as possible</li>
</ul>
<p>In other words, we seek to partition the tissue into reasonably-shaped districts that are all well-powered to run DE against the predictor variable.</p>
<p>The patchDE algorithm is available as an R script <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/blob/Main/_code/PatchDE/DEutils.R" target="_blank">here</a>.</p>
<p>Below is a demonstration of patchDE’s use.</p>
<p>First we use define patches:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### use Patch DE to partition the tissue into patches:</span></span>
<span id="cb15-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">source</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/blob/Main/_code/PatchDE/DEutils.R"</span>)</span>
<span id="cb15-3"></span>
<span id="cb15-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># define your design variable:</span></span>
<span id="cb15-5">inds.tumor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> meta_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>celltype <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tumor"</span></span>
<span id="cb15-6">inds.t     <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> meta_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>celltype <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tcell"</span></span>
<span id="cb15-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">stopifnot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">any</span>(inds.tumor), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">any</span>(inds.t))</span>
<span id="cb15-8">dist2tcell <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> FNN<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get.knnx</span>(</span>
<span id="cb15-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data  =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(xy[inds.t, , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">drop=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>]),</span>
<span id="cb15-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">query =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(xy),</span>
<span id="cb15-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb15-12">)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>nn.dist[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb15-13"></span>
<span id="cb15-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## derive patches:</span></span>
<span id="cb15-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Suggested tuning parameters to use: </span></span>
<span id="cb15-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  1. Control granularity: npatches.</span></span>
<span id="cb15-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  2. Control learning rate: bizesize, then possibly alpha. </span></span>
<span id="cb15-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  3. Patch size and shape: maxradius, roundness</span></span>
<span id="cb15-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  4. Patch position: initwithhotspots</span></span>
<span id="cb15-20">patches <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getPatches</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xy =</span> xy[inds.tumor, ], </span>
<span id="cb15-21">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">X =</span> dist2tcell[inds.tumor], </span>
<span id="cb15-22">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">npatches =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,</span>
<span id="cb15-23">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bitesize =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb15-24">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">maxradius =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>,</span>
<span id="cb15-25">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">roundness =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>,</span>
<span id="cb15-26">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">initwithhotspots =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,</span>
<span id="cb15-27">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_iters =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">25</span>,</span>
<span id="cb15-28">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plotprogress =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb15-29">) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># produces a vector of patch assigments, potentially including NA's for cells not given a patch</span></span>
<span id="cb15-30"></span>
<span id="cb15-31"></span>
<span id="cb15-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># to view, draw polygon boundaries around each patch:</span></span>
<span id="cb15-33">patchhulls <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getPatchHulls</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xy =</span> xy[inds.tumor, ], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">patch =</span> patches) </span>
<span id="cb15-34"></span>
<span id="cb15-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot patches:</span></span>
<span id="cb15-36"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">par</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mar =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>))</span>
<span id="cb15-37"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(xy[inds.tumor, ], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">asp =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb15-38">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">main =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tumor cells colored by distance to T-cell, with patches for stratified DE"</span>,</span>
<span id="cb15-39">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colorRampPalette</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#A6CEE3"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#1F78B4"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#081D58"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)))(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">101</span>)[</span>
<span id="cb15-40">       <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> dist2tcell <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(dist2tcell))[inds.tumor]</span>
<span id="cb15-41">     ],</span>
<span id="cb15-42">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>)</span>
<span id="cb15-43"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(patchhulls)) {</span>
<span id="cb15-44">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(patchhulls[[i]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">border =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">wpoints =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">add =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb15-45">}</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/DE-guide/figures/patches.png" class="img-fluid figure-img" style="width:120.0%"></p>
</figure>
</div>
</div>
</div>
<p>Below you can see the patches evolve over iterations. Our goal is to get a high “predictor sum of squares” (which determines statistical power) in each patch. You will notice that the per-patch power tends to improve over iterations, especially the early ones, as cells are moved from over-powered patches to under-powered ones. Also note that there algorithm does not converge to a single optimal solution; it ends up wandering around through a space of similarly satisfactory solutions.</p>
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/DE-guide/figures/patchanimation.gif" class="img-fluid"></p>
<p>With patches in hand, we can run a computationally-efficient DE test within each patch:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### run DE in each patch, using hastyDE, which computationally-efficient but ignores spatial correlation:</span></span>
<span id="cb16-2">deresults <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">patchDE</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> norm[inds.tumor, ],</span>
<span id="cb16-3">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">df =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dist2tcell"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> dist2tcell[inds.tumor]),</span>
<span id="cb16-4">                     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">patch =</span> patches)</span>
<span id="cb16-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(deresults)</span>
<span id="cb16-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># List of 1</span></span>
<span id="cb16-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#  $ dist2tcell:List of 3</span></span>
<span id="cb16-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   ..$ pvals: num [1:3, 1:12] 2.59e-01 7.85e-01 3.61e-12 5.70e-01 7.52e-02 ...</span></span>
<span id="cb16-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   .. ..- attr(*, "dimnames")=List of 2</span></span>
<span id="cb16-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   .. .. ..$ : chr [1:3] "PGC" "CXCL14" "VEGFA"</span></span>
<span id="cb16-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   .. .. ..$ : chr [1:12] "patch8" "patch3" "patch4" "patch12" ...</span></span>
<span id="cb16-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   ..$ ests : num [1:3, 1:12] 1.0276 0.0797 6.3659 -0.3679 -0.2379 ...</span></span>
<span id="cb16-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   .. ..- attr(*, "dimnames")=List of 2</span></span>
<span id="cb16-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   .. .. ..$ : chr [1:3] "PGC" "CXCL14" "VEGFA"</span></span>
<span id="cb16-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   .. .. ..$ : chr [1:12] "patch8" "patch3" "patch4" "patch12" ...</span></span>
<span id="cb16-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   ..$ ses  : num [1:3, 1:12] 0.911 0.292 0.91 0.647 0.134 ...</span></span>
<span id="cb16-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   .. ..- attr(*, "dimnames")=List of 2</span></span>
<span id="cb16-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   .. .. ..$ : chr [1:3] "PGC" "CXCL14" "VEGFA"</span></span>
<span id="cb16-19"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   .. .. ..$ : chr [1:12] "patch8" "patch3" "patch4" "patch12" ...</span></span></code></pre></div>
</details>
</div>
<p>Now we’ve got DE results for every gene x patch. Next comes the hard part: figuring our which results to prioritize. We recommend two approaches:</p>
<ol type="1">
<li>Find genes that have significant and large effect sizes in at least a few patches (strong but possibly sporadic results).</li>
<li>Find genes with strong meta-analysis p-values (consistent but less dramatic results). <strong>Warning</strong>: most meta-analyses, including the version demonstrated below, will assume each patch is independent. Under the realistic scenario where neighboring patches will have correlated results, this assumption fails, producing overly optimistic p-values.</li>
</ol>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### prep for gene prioritization:</span></span>
<span id="cb17-2"></span>
<span id="cb17-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># replace NA results - arising from all-0 expression - with 0s:</span></span>
<span id="cb17-4">ps <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replace</span>(deres[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pvals, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(deres[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pvals), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb17-5">ests <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replace</span>(deres[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ests, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(deres[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pvals), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb17-6">ses <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replace</span>(deres[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ses, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(deres[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pvals), <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e6</span>)</span>
<span id="cb17-7"></span>
<span id="cb17-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># scale ests by genes' mean expression:</span></span>
<span id="cb17-9">genefactors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pmax</span>(Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colMeans</span>(norm[inds.tumor, ]), <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb17-10">ests <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sweep</span>(ests, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, genefactors[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(ests)], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span>)</span>
<span id="cb17-11"></span>
<span id="cb17-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### identify genes with a few strong patches:</span></span>
<span id="cb17-13">est.thresh <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb17-14">p.thresh <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span></span>
<span id="cb17-15">crit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(ests) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> est.thresh) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> (ps <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> p.thresh)</span>
<span id="cb17-16">critdir <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>((ests <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> est.thresh) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> (ps <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> p.thresh)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span>((ests <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>est.thresh) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> (ps <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> p.thresh))</span>
<span id="cb17-17">topgenes1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(crit) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))</span>
<span id="cb17-18"></span>
<span id="cb17-19"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### use meta-analysis to summarize genes' trends across patches</span></span>
<span id="cb17-20">metapvals <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sapply</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(deresults[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pvals), <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(gene) {</span>
<span id="cb17-21">  fit <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> metafor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rma.uni</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">yi =</span> deresults[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ests[gene, ], </span>
<span id="cb17-22">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sei =</span> deresults[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ses[gene, ], </span>
<span id="cb17-23">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"REML"</span>)</span>
<span id="cb17-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(fit<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pval)</span>
<span id="cb17-25">})</span>
<span id="cb17-26">topgenes2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setdiff</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(metapvals)[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">order</span>(metapvals, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">decreasing =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>]], <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>)</span></code></pre></div>
</details>
</div>
<p>Once you’ve prioritized genes via the above two lists (<code>topgenes1</code> and <code>topgenes2</code>), we recommend making a heatmap of their DE results:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## now use a heatmap to plot results from either list of top genes:</span></span>
<span id="cb18-2">pheatmap<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pheatmap</span>((deresults[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ests <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (deresults[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pvals <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1e-3</span>))[topgenes1, ],</span>
<span id="cb18-3">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colorRampPalette</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkblue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkred"</span>))(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>),</span>
<span id="cb18-4">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">101</span>))</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/DE-guide/figures/deheatmap.png" class="img-fluid figure-img" style="width:170.0%"></p>
</figure>
</div>
</div>
</div>
<p>From there, it’s the usual exploration of DE results, leaning heavily on spatial plots and literature searches.</p>
<p>Finally, a note on multiplicity: when we run DE across dozens of patches, the problem of multiple testing gets even worse. So, before getting excited about a single gene in a single patch, take one of these countermeasures to multiplicity:</p>
<ul>
<li>Confirm the gene x patch has a strong adjusted p-value <em>considering all the p-values from all the genes x patches</em>.</li>
<li>Confirm the gene has a strong adjusted p-value from the metaanalysis, considering the p-values from all the genes’ metaanalysis results.</li>
</ul>
</section>
<section id="comment-on-statistical-power-and-false-discoveries" class="level2" data-number="7">
<h2 data-number="7" class="anchored" data-anchor-id="comment-on-statistical-power-and-false-discoveries"><span class="header-section-number">7</span> Comment on statistical power and false discoveries</h2>
<p>Very large numbers of cells give us very high statistical power to detect even tiny effect sizes. Paradoxically, this creates a hazard for analysts, as our high statistical power applies both to real effects <strong>and</strong> to the effects of unmeasured confounding variables. Now it’s usually a safe assumption that a given gene is being influenced by a variety of factors in a tissue, many of them unmeasured and at least lightly correlated with your design variable. In other words, any given gene is likely subject to unmeasured confounding, meaning there’s a false positive signal that we are well-powered to find significant and get fooled by.</p>
<p>The countermeasure to this phenomenon is simple: don’t get excited by p-values, but rather focus on effect sizes. The stronger a gene’s fold-change with your design variable, the more likely the change you see is driven by your design variable rather than unobserved confounders. You should still apply a reasonable p-value or FDR cutoff, but beyond that cutoff you should rank genes by effect size.</p>
</section>
<section id="the-limitations-of-de" class="level2" data-number="8">
<h2 data-number="8" class="anchored" data-anchor-id="the-limitations-of-de"><span class="header-section-number">8</span> The limitations of DE</h2>
<p>DE analyses have a tidy framework: you specify variables that you hypothesize will impact gene expression, then you look for which genes correlate with those variables. But when we look at gene expression in space, we often find variability far beyond the explanatory ability of any variables we known enough to specify. In other words, the spatial determinants of gene expression are far more complicated than the DE models we build from our limited biological knowledge. This does not mean the DE is futile - we still consider it the primary tool for wringing biology from spatial data - but it’s worth keeping some implications of this phenomenon in mind:</p>
<ol type="1">
<li>When DE identifies a gene, look at its expression in space and evaluate: how much of its variability is due to your design variable? Are there other strong spatial trends that suggest a different explanation? Taking the Moran’s I stat of a gene’s residuals could also be useful:</li>
</ol>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">inds.tumor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> meta_data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>celltype <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tumor"</span></span>
<span id="cb19-2">W <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> spdep<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dnearneigh</span>(xy[inds.tumor, ], <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(FNN<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get.knn</span>(xy[inds.tumor, ], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>nn.dist[,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], .<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">95</span>))</span>
<span id="cb19-3">Wl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> spdep<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nb2listw</span>(W, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">style=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"W"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">zero.policy =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb19-4">outcome <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> norm[inds.tumor, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"VEGFA"</span>]</span>
<span id="cb19-5">predictor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dist2tcell</span>
<span id="cb19-6">spdep<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">moran.test</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">residuals</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lm</span>(outcome <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> predictor)), Wl)</span></code></pre></div>
</details>
</div>
<ol start="2" type="1">
<li>To understand a tissue, you should also pursue approaches that are not limited by the design variables you specify. Look for spatial variable genes, or for <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/insitucor/" target="_blank">spatially correlated genes</a>, or for <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/insitudiff/" target="_blank">perturbed spatial neighborhoods</a>. These unsupervised, exploratory approaches will reveal the strongest spatial signals in your data without requiring you to know the full set of explanatory variables a priori.</li>
</ol>


</section>

 ]]></description>
  <category>differential expression</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/DE-guide/</guid>
  <pubDate>Tue, 21 Oct 2025 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/DE-guide/figures/thumbnail.png" medium="image" type="image/png" height="134" width="144"/>
</item>
<item>
  <title>Integrated RNA + protein multiomic cell typing using HieraType</title>
  <dc:creator>Dan McGuire</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/multiomics-hieratype/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>This post showcases how the <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/tree/Main/_code/HieraType">HieraType cell typing package</a> can be used for integrated same-slide multiomic (protein + rna) cell typing.</p>
<p>We use a breast cancer tissue sample with both 64-plex protein and WTx 18,935 plex RNA assayed, and demonstrate how cell typing can be performed using</p>
<ul>
<li>both RNA + protein</li>
<li>protein-only</li>
<li>RNA-only</li>
</ul>
<p>We compare cell typing performance and show that, overall, protein-only and RNA-only cell typing calls show more disagreement with each other than they do with with integrated multiomic cell type calls.</p>
<p>We also demonstrate evidence of improved coherence of cell type labels with the defining marker genes and proteins when using an integrated approach that makes use of both analytes.</p>
<p>Finally, we show a simple yet effective way to integrate unsupervised clusters with supervised immune cell type labels generated with HieraType. This can enable granular detection of novel or tissue-specific cell types along with well known immune cell types.</p>
<p>Code for this analysis end-to-end can be found by skipping ahead here.</p>
</section>
<section id="a-quick-look-at-the-tissue" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> A quick look at the tissue</h1>
<p>Here’s a quick look at this breast cancer tissue, where unsupervised clustering was performed using both the pearson residual normalized RNA + protein. Code for creating these unsupervised clusters is here. Next, we’ll compare multiomic immune cell typing performance with RNA-only or protein-only cell typing.</p>
<div class="wider-image">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/multiomics-hieratype/figures/xyp_multi_unsup.png" alt="Wide Image"></p>
</div>
</section>
<section id="evidence-multiomics-can-improve-cell-typing" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Evidence multiomics can improve cell typing</h1>
<p>We used the Adjusted Rand Index (ARI) metric to quantify the agreement between protein-only, RNA-only, and multiomic cell type labels (code). ARI is a numerical measure of similarity between two data clusterings <span class="citation" data-cites="ariref">(<strong>ariref?</strong>)</span>. We found protein-only and RNA-only cell typing calls show more disagreement with each other than they do with with integrated multiomic cell type calls, with:</p>
<ul>
<li>ARI(multiomic,RNA-only) = 0.679</li>
<li>ARI(multiomic, protein-only) = 0.589</li>
<li>ARI(protein-only, RNA-only) = 0.483</li>
</ul>
<p>We compared the agreement between celltype predictions and canonical protein markers and RNA markers, and found that the multiomic cell type labels often show stronger alignment than RNA-only or protein-only cell typing. ( Code for RNA-only, protein-only, multiomic HieraType calls.)</p>
<section id="t-cell-improvement-demonstration-via-area-under-the-roc-curves" class="level3" data-number="3.0.1">
<h3 data-number="3.0.1" class="anchored" data-anchor-id="t-cell-improvement-demonstration-via-area-under-the-roc-curves"><span class="header-section-number">3.0.1</span> T cell improvement demonstration via area under the ROC curves</h3>
<p>For example, the figure below shows ROC curves for T cell predictions along with three canonical cell type markers for T cells (one protein, and two RNA). In this context, for a given level of marker expression, ‘<em>sensitivity</em>’ refers to the frequency a cell is labeled a T-cell (for all cells above that threshold of marker expression). ‘<em>Specificity</em>’ refers to the proportion of times a cell is labeled anything other than a T-cell (for all cells below that threshold).<br>
If we treat our normalized marker expression as a gold standard for cell type calling, then we would want to see high sensitivity and specificity of the T cell calls depending on whether marker expression is high or low. In general, larger area under the ROC curve indicates better agreement between cell type calls and marker expression.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/multiomics-hieratype/figures/rocplot_tcell_lbl.png" class="img-fluid figure-img" width="6000"></p>
</figure>
</div>
</div>
</div>
<p>Above, as we might expect, we see that using <span style="color:#377EB8;">RNA-only</span> for calling T cells does not optimize agreement between CD3 protein (AUC=0.871). Unsurprisingly, agreement improves when using CD3 protein directly for celltyping (<span style="color:#4DAF4A;">protein-only</span> AUC=0.927). In this case, we actually observed the best AUC when both RNA and protein were used (<span style="color:#E41A1C;">multiomics</span> AUC=0.937).</p>
<p>A perhaps unsurprising theme that emerged from these cell typing comparisons was that we often see the worst agreement for protein markers when using RNA-only for celltyping, and the worst agreement for RNA markers when using protein-only for celltyping. Meanwhile, using both RNA and protein analytes often yields the best or nearly-best agreement for both marker types. This is further shown below in the middle-and-right panels when looking at CD3D and CD2 RNA markers. <span style="color:#E41A1C;">Multiomic</span> celltyping outperforms protein-only by the widest margin, and also slightly outperforms <span style="color:#377EB8;">RNA-only</span>.</p>
<p>One interesting point of note when comparing the shapes of the ROC curves above is the smoothness of the curve for the CD3 protein marker, compared to the CD2 and CD3D RNA markers (which show a sharper bump closer to the lower-left corner where sensitivity=0 and specificity=1). Due to the sparsity of RNA counts, we see a sharp spike in sensitivity close to an expression threshold at which cells have a single count of the marker gene. Because RNA-only cell typing uses only the RNA markers, the AUC is larger and more influenced around this local threshold of a single marker gene count, while protein and multiomic cell type labels are impacted directly by marker protein expression.</p>
</section>
<section id="improved-auc-across-immune-cell-types" class="level3" data-number="3.0.2">
<h3 data-number="3.0.2" class="anchored" data-anchor-id="improved-auc-across-immune-cell-types"><span class="header-section-number">3.0.2</span> Improved AUC across immune cell types</h3>
<p>We saw a similar trend as that demonstrated above across immune cell types.<br>
Here, for the most important ‘index markers’ of each immune cell type, we show the area under the ROC curve for RNA-only, protein-only, and multiomic celltyping results (code for this analysis can be found here in the end-to-end code section). In general, there appears to be an improvement in AUC for both RNA and protein markers compared to if one of the analytes were removed.</p>
<p>Average AUC was highest for multiomic celltyping across all markers and celltypes, with</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?%5Coverline%7BAUC%7D(%5Ctext%7Bmultiomic%7D)%20=%200.711"></li>
<li><img src="https://latex.codecogs.com/png.latex?%5Coverline%7BAUC%7D(%5Ctext%7BRNA-only%7D)%20=%200.709"></li>
<li><img src="https://latex.codecogs.com/png.latex?%5Coverline%7BAUC%7D(%5Ctext%7Bprotein-only%7D)%20=%200.701"></li>
</ul>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/multiomics-hieratype/figures/aucbarplot_wtext.png" class="img-fluid figure-img" width="6000"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="multiomic" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Running HieraType using Protein + RNA</h1>
<p>Below, we’ll step through the process of generating cell type labels with multiomic data. The code for using HieraType with protein data uses very similar syntax as a regular HieraType call, with a few exceptions worth calling out.</p>
<section id="protein-naming-convention" class="level5">
<h5 class="anchored" data-anchor-id="protein-naming-convention">Protein naming convention</h5>
<p>HieraType works from a set of pre-defined ‘markers’ which correspond to each cell type we hope to classify. For multiomic or protein-only data, protein marker names must end with the suffix “_protein” in our <code>markerslist</code> objects.<br>
For example, here is the HieraType package multiomic markerslist for CD8 T cells (<code>cd8t</code>).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_multiomic_tcellmajor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cd8t)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output cell-output-stderr">
<pre><code>$index_marker
[1] "CD8A"        "CD8B"        "CD8_protein"

$predictors
 [1] "CD8_protein"    "CD3_protein"    "CCR7_protein"   "CD45RA_protein" "CD27_protein"   "GZMA_protein"  
 [7] "GZMB_protein"   "LAG3_protein"   "TCF7_protein"   "CD3D"           "CD3E"           "CD3G"          
[13] "CD8A"           "CD8B"           "IL7R"           "CD27"           "SELL"           "CCR7"          
[19] "TCF7"           "LEF1"           "FOXP1"          "BACH2"          "KLF2"           "CD28"          
[25] "ICOS"           "STAT3"          "STAT5"          "RUNX3"          "BATF"           "EOMES"         
[31] "TBX21"          "PRDM1"          "PDCD1"          "LAG3"           "TIGIT"          "HAVCR2"        
[37] "GZMK"           "GZMA"           "GZMB"           "PRF1"           "GNLY"           "KLRG1"         
[43] "KLRD1"          "IFNG"           "CCL5"           "CX3CR1"         "NKG7"           "FAS"           
[49] "FASLG"          "IL2"            "CD244"          "CXCR3"          "KLRB1"          "TOX"           
[55] "NR4A2"          "BCL6"           "CXCL13"        

$use_offclass_markers_as_negative_predictors
[1] TRUE</code></pre>
</div>
</div>
</section>
<section id="protein-data-normalization-and-constructing-a-multiomic-adjacency_matrix" class="level5">
<h5 class="anchored" data-anchor-id="protein-data-normalization-and-constructing-a-multiomic-adjacency_matrix">Protein data normalization and constructing a multiomic adjacency_matrix</h5>
<p>Protein data should be normalized, then combined with a sparse un-normalized RNA counts matrix before passing to HieraType. Here we’ll use pearson residuals from a gamma regression model as a normalization method, although other reasonable methods might be considered and left to the user’s disgression. We then add the “_protein” suffix to the protein names, so they’ll align with the HieraType markerlists.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## normalize each protein taking pearson residuals from gamma generalized linear model.</span></span>
<span id="cb3-2">pgamm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> scPearsonPCA<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pearson_normalize_gamma_glm</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(sem_protein[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts)</span>
<span id="cb3-3">                                                   ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">upper_q_thresh =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.99</span></span>
<span id="cb3-4">                                                   ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lower_q_thresh =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span></span>
<span id="cb3-5">                                                   )</span>
<span id="cb3-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(pgamm) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(pgamm), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_protein"</span>)</span></code></pre></div>
</div>
<p>Here we conduct a principal component decomposition from combined RNA and proteins across all cells; this can be used to give us the cells x cells similarity graph we’ll pass to HieraType.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## select genes from RNA data to use for PCA analysis.</span></span>
<span id="cb4-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Take the top 2k features as well as any pre-defined celltyping markers from HieraType</span></span>
<span id="cb4-3">sem_rna <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FindVariableFeatures</span>(sem_rna, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nfeatures =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>)</span>
<span id="cb4-4">markerg <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb4-5">  HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_l1</span>
<span id="cb4-6">  ,HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_immune</span>
<span id="cb4-7">  ,HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_cd8tminor</span>
<span id="cb4-8">  ,HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_cd4tminor</span>
<span id="cb4-9">  ,HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_tcellmajor</span>
<span id="cb4-10">), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[["</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predictors"</span>))</span>
<span id="cb4-11">use_genes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(sem_rna<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>assays<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>RNA<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>var.features, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">intersect</span>(markerg, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(sem_rna))))</span>
<span id="cb4-12"></span>
<span id="cb4-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### total counts and gene frequency from RNA data computed across full dataset</span></span>
<span id="cb4-14">tc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(sem_rna[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts)</span>
<span id="cb4-15">genefreq <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> scPearsonPCA<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gene_frequency</span>(sem_rna[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts)</span>
<span id="cb4-16"></span>
<span id="cb4-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Multiomic RNA and Protein cluster analysis</span></span>
<span id="cb4-18">pcaobj_multi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> scPearsonPCA<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sparse_quasipoisson_pca_seurat_multiomic</span>(sem_rna[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts[use_genes,]</span>
<span id="cb4-19">                                                                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">totalcounts =</span> tc</span>
<span id="cb4-20">                                                                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">grate =</span> genefreq[use_genes]</span>
<span id="cb4-21">                                                                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xother =</span> pgamm <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## normalized protein</span></span>
<span id="cb4-22">                                                                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">do.scale =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb4-23">                                                                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">do.center =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb4-24">                                                                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale.max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb4-25">                                                                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncores =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb4-26">)</span>
<span id="cb4-27"></span>
<span id="cb4-28"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Make a cell-cell adjacency matrix for HieraType </span></span>
<span id="cb4-29">multi_simgrph <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> uwot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">similarity_graph</span>(pcaobj_multi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>reduction.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cell.embeddings</span>
<span id="cb4-30">                                  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_neighbors =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span></span>
<span id="cb4-31">                                  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nn_method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"annoy"</span></span>
<span id="cb4-32">                                  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metric =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cosine'</span></span>
<span id="cb4-33">                                  )</span>
<span id="cb4-34"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(multi_simgrph) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(multi_simgrph) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(pcaobj_multi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>reduction.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cell.embeddings)</span></code></pre></div>
</div>
</section>
<section id="hieratype-call" class="level5">
<h5 class="anchored" data-anchor-id="hieratype-call">HieraType call</h5>
<p>Here we construct our ‘multiomic’ expression matrix which includes our sparse RNA counts with the normalized protein expression, then we call <code>HieraType::run_pipeline</code> .</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">#### combining sparse RNA counts and normalized proteins into a single matrix 'multimat'</span></span>
<span id="cb5-2">overlapping_cells <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">intersect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(sem_protein), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(sem_rna))</span>
<span id="cb5-3">multimat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(pgamm[,overlapping_cells])</span>
<span id="cb5-4">multimat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(multimat, Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(sem_rna[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts[use_genes,overlapping_cells]))</span>
<span id="cb5-5"></span>
<span id="cb5-6"></span>
<span id="cb5-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Define pipeline, using multiomic markerslists</span></span>
<span id="cb5-8">pipeline_io_multiomics <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_pipeline</span>(</span>
<span id="cb5-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">markerslists =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb5-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l1"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_multiomic_l1</span>
<span id="cb5-11">    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l2"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_multiomic_immune</span>
<span id="cb5-12">    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_multiomic_tcellmajor</span>
<span id="cb5-13">    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt4minor"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_multiomic_cd4tminor</span>
<span id="cb5-14">    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt8minor"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_multiomic_cd8tminor</span>
<span id="cb5-15">  )</span>
<span id="cb5-16">  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">priors =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb5-17">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l2"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l1"</span></span>
<span id="cb5-18">    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l2"</span></span>
<span id="cb5-19">    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt4minor"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt"</span></span>
<span id="cb5-20">    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt8minor"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt"</span></span>
<span id="cb5-21">  )</span>
<span id="cb5-22">  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">priors_category =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb5-23">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l2"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"immune"</span></span>
<span id="cb5-24">    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tcell"</span></span>
<span id="cb5-25">    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt4minor"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd4t"</span></span>
<span id="cb5-26">    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt8minor"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd8t"</span></span>
<span id="cb5-27">  )</span>
<span id="cb5-28">)</span>
<span id="cb5-29"></span>
<span id="cb5-30"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Run the celltyping pipeline</span></span>
<span id="cb5-31">multictobj <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">run_pipeline</span>(</span>
<span id="cb5-32">   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pipeline =</span> pipeline_io_multiomics</span>
<span id="cb5-33">   ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">totalcounts=</span> tc[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(multimat)]</span>
<span id="cb5-34">   ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gene_wise_frequency =</span> genefreq</span>
<span id="cb5-35">   ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">counts_matrix =</span> multimat </span>
<span id="cb5-36">   ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">adjacency_matrix =</span> multi_simgrph[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(multimat), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(multimat)]</span>
<span id="cb5-37"> )</span></code></pre></div>
</div>
</section>
</section>
<section id="integrating-unsupervised-clusters-with-immune-cell-type-labels" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Integrating unsupervised clusters with immune cell type labels</h1>
HieraType was designed to find celltypes with known, pre-specified markers. Often, unsupervised clustering is sufficiently granular to identify very distinct tissue-specific clusters, but may not identify commune immune cell types of interest due to relative sparsity of the immune markers. We demonstrate an easy way (code) to reconcile the labels between HieraType and unsupervised clustering; keeping the HieraType label when a cell is classified as immune, and taking the unsupervised cluster label otherwise.<br>

<div class="wider-image">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/multiomics-hieratype/figures/xyp_multi_semisup.png" alt="Wide Image"></p>
</div>
</section>
<section id="conclusion" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> Conclusion</h1>
<p>The HieraType method constructs continuous celltype metagene scores, which are then probabilistically clustered to classify cell types. Because these metagene scores are continuous and the clustering uses flexible gaussian mixture models, the inputted expression can be fluidly specified in terms of RNA markers, protein markers, or some combination of both. This allows for an elegant and efficient solution for fully integrated celltyping when both protein and RNA are available.<br>
Overall, we found improved cell typing performance in the breast cancer sample analyzed in this post when both analytes were used compared to either analyte on its own.</p>
<p>While the HieraType method is fully supervised and cannot identify novel cell types not specified in a ‘<code>markerslist</code>’, we demonstrate an easy approach for integrating unsupervised clusters with HieraType immune cell typing calls, enabling high resolution cell typing for both immune cell types as well as epithelial or tissue context specific cell types which may not have a known marker profile a priori. This can help reap benefits of both unsupervised and supervised approaches - well controlled pre-specified immune cell typing combined with granular unsupervised epithelial clusters.</p>
</section>
<section id="endtoend" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> End-to-end detailed analysis code</h1>
<p>For completeness, here are a few end-to-end code blocks for each analysis step:</p>
<section id="reading-in-the-data" class="level5">
<h5 class="anchored" data-anchor-id="reading-in-the-data">Reading in the data</h5>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb6-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggrepel)</span>
<span id="cb6-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(data.table)</span>
<span id="cb6-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(scPearsonPCA)</span>
<span id="cb6-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(HieraType)</span>
<span id="cb6-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(data.table)</span>
<span id="cb6-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(pROC)</span>
<span id="cb6-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(mclust)</span>
<span id="cb6-9"></span>
<span id="cb6-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Note, using a v3-style Seurat Object below, i.e., `sem[["RNA"]]@counts`</span></span>
<span id="cb6-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## For v5-style, the syntax would be like `sem[["RNA"]]$counts`</span></span>
<span id="cb6-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Seurat.object.assay.version =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"v3"</span>)  </span>
<span id="cb6-13"></span>
<span id="cb6-14">sem_protein <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">readRDS</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Breast/sem_protein.rds"</span>)</span>
<span id="cb6-15">sem_rna <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">readRDS</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Breast/sem_rna.rds"</span>)</span>
<span id="cb6-16">sem_rna <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">subset</span>(sem_rna, nCount_RNA <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span></code></pre></div>
</div>
</section>
<section id="normalizing-protein-data" class="level5">
<h5 class="anchored" data-anchor-id="normalizing-protein-data">Normalizing protein data</h5>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## normalize each protein taking pearson residuals from gamma generalized linear model.</span></span>
<span id="cb7-2">pgamm <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> scPearsonPCA<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pearson_normalize_gamma_glm</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.matrix</span>(sem_protein[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts)</span>
<span id="cb7-3">                                                   ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">upper_q_thresh =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.99</span></span>
<span id="cb7-4">                                                   ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lower_q_thresh =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span></span>
<span id="cb7-5">                                                   )</span>
<span id="cb7-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(pgamm) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(pgamm), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_protein"</span>)</span></code></pre></div>
</div>
</section>
<section id="multiunsup" class="level5">
<h5 class="anchored" data-anchor-id="multiunsup">Multiomic pearson residual PCA analysis using the protein and RNA</h5>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## select genes from RNA data to use for PCA analysis.</span></span>
<span id="cb8-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Will take the top 2k features as well as any pre-defined immune celltyping markers from HieraType</span></span>
<span id="cb8-3">sem_rna <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FindVariableFeatures</span>(sem_rna, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nfeatures =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2000</span>)</span>
<span id="cb8-4">markerg <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb8-5">  HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_l1</span>
<span id="cb8-6">  ,HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_immune</span>
<span id="cb8-7">  ,HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_cd8tminor</span>
<span id="cb8-8">  ,HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_cd4tminor</span>
<span id="cb8-9">  ,HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_tcellmajor</span>
<span id="cb8-10">), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[["</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"predictors"</span>))</span>
<span id="cb8-11">use_genes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(sem_rna<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>assays<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>RNA<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>var.features, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">intersect</span>(markerg, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(sem_rna))))</span>
<span id="cb8-12"></span>
<span id="cb8-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### total counts and gene frequency from RNA data computed across full dataset</span></span>
<span id="cb8-14">tc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(sem_rna[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts)</span>
<span id="cb8-15">genefreq <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> scPearsonPCA<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gene_frequency</span>(sem_rna[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts)</span>
<span id="cb8-16"></span>
<span id="cb8-17"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### add a '_protein' suffix to the protein names - helps differentiate proteins and RNA's with the same name. </span></span>
<span id="cb8-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(pgamm) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(pgamm), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_protein"</span>)</span>
<span id="cb8-19"></span>
<span id="cb8-20"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Principal components derived from the combined covariance matrix of pearson residual normalized RNA and protein.</span></span>
<span id="cb8-21"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### </span></span>
<span id="cb8-22">pcaobj_multi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> scPearsonPCA<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sparse_quasipoisson_pca_seurat_multiomic</span>(sem_rna[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts[use_genes,]</span>
<span id="cb8-23">                                                                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">totalcounts =</span> tc</span>
<span id="cb8-24">                                                                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">grate =</span> genefreq[use_genes]</span>
<span id="cb8-25">                                                                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xother =</span> pgamm <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## normalized protein</span></span>
<span id="cb8-26">                                                                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">do.scale =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb8-27">                                                                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">do.center =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb8-28">                                                                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale.max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb8-29">                                                                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncores =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb8-30">)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output cell-output-stderr">
<pre><code>PC_ 1 
Positive:  CD45_protein, CD4_protein, CD39_protein, CD16_protein, Channel-CD45_protein, Fibronectin_protein, CD3_protein, Vimentin_protein, CD40_protein, CD14_protein 
       HLA-DR_protein, STING_protein, SMA_protein, ICAM1_protein, CD68_protein, CD163_protein, CD11c_protein, ICOS_protein, CD20_protein, CD8_protein 
Negative:  AZGP1, KRT7, KRT18, NAMPT, KRT8, KRT19, FASN, S100A11, DBI, SERHL2 
       MYL6, EPCAM, ASPH, PRDX2, ALDOA, WFDC2, CYB5A, GSTP1, TMBIM6, NFIX 
PC_ 2 
Positive:  VIM, SPARC, COL3A1, COL1A1, COL1A2, CD39_protein, IGFBP7, HLA-DRB1, CST3, TIMP2 
       HLA-DRA, AEBP1, CD74, LUM, COL6A2, CD40_protein, CD16_protein, BGN, CYBA, COL6A1 
Negative:  pan-RAS_protein, p53_protein, Channel-PanCK_protein, CD127_protein, EGFR_protein, NF-kB p65_protein, EpCAM_protein, CTLA4_protein, TCF7_protein, LAMP1_protein 
       Beta-catenin_protein, Ki-67_protein, CD138_protein, VISTA_protein, FOXP3_protein, Her2_protein, LAG3_protein, CD45RA_protein, DBI, SERHL2 
PC_ 3 
Positive:  H3C15, H3C2, H3-7, H4C14, H4C11, H3C10, H3C13, H4C12, H3C7, H2AC16 
       H2BC4, H1-5, H2BC9, H1-2, H2AC18, H2AC11, H2BC18, H3C8, H3C11, H1-3 
Negative:  KRT19, p53_protein, FOXP3_protein, LAG3_protein, NDRG1, TCF7_protein, Her2_protein, CTLA4_protein, IgD_protein, KRT8 
       Channel-PanCK_protein, CD56_protein, VEGFA, LDHA, CD123_protein, AFMID, GZMB_protein, PGK1, ALDOA, iNOS_protein 
PC_ 4 
Positive:  HLA-DRB1, HLA-DRA, CD74, HLA-DR_protein, APOE, Channel-CD68_protein, CD11c_protein, CD45_protein, LYZ, HLA-DQB1 
       CD68_protein, CTSD, HLA-DPA1, C1QC, IFI30, CD16_protein, APOC1, HLA-DQA1, C1QB, CD4_protein 
Negative:  CD123_protein, CD34_protein, GZMB_protein, IGFBP7, CD31_protein, COL4A1, SPARC, CD56_protein, LAG3_protein, FOXP3_protein 
       COL4A2, IgD_protein, PLVAP, Her2_protein, GITR_protein, HSPG2, 4-1BB_protein, LAMA4, p53_protein, SMA_protein 
PC_ 5 
Positive:  PLVAP, COL4A1, CD34_protein, KDR, Beta-catenin_protein, CD31_protein, EGFL7, EpCAM_protein, COL4A2, AQP1 
       FLT1, HSPG2, SHANK3, PODXL, A2M, LAMP1_protein, CD34, ECSCR, INSR, STC1 
Negative:  PD-L2_protein, FOXP3_protein, LAG3_protein, 4-1BB_protein, GITR_protein, CD56_protein, GZMB_protein, iNOS_protein, Her2_protein, IgD_protein 
       GZMA_protein, PD-1_protein, CD11b_protein, CD19_protein, TCF7_protein, CD163_protein, CD123_protein, CTLA4_protein, IL-18_protein, Bcl-2_protein </code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Make a cell-cell adjacency matrix for HieraType </span></span>
<span id="cb10-2">multi_simgrph <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> uwot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">similarity_graph</span>(pcaobj_multi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>reduction.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cell.embeddings</span>
<span id="cb10-3">                                  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_neighbors =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span></span>
<span id="cb10-4">                                  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nn_method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"annoy"</span></span>
<span id="cb10-5">                                  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metric =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cosine'</span></span>
<span id="cb10-6">                                  )</span>
<span id="cb10-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(multi_simgrph) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(multi_simgrph) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(pcaobj_multi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>reduction.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cell.embeddings)</span>
<span id="cb10-8"></span>
<span id="cb10-9"></span>
<span id="cb10-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">###  Unsupervised clusters using multiomic cell-cell adjacency graph</span></span>
<span id="cb10-11">sem_rna[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"multigrph"</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Graph</span>(multi_simgrph[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(sem_rna),<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(sem_rna)])</span>
<span id="cb10-12">sem_rna <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FindClusters</span>(sem_rna, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">graph.name=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"multigrph"</span>)</span>
<span id="cb10-13">sem_rna<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>clusters_multi_unsup <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sem_rna<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>seurat_clusters</span>
<span id="cb10-14"></span>
<span id="cb10-15">xyp_multi_unsup <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xyplot</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"clusters_multi_unsup"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metadata =</span> sem_rna<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ptsize =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>()</span>
<span id="cb10-16"></span>
<span id="cb10-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"figures/xyp_multi_unsup.png"</span></span>
<span id="cb10-18">       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot=</span>xyp_multi_unsup</span>
<span id="cb10-19">       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">device =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"png"</span></span>
<span id="cb10-20">       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1181</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb10-21">       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">689</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb10-22">       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'px'</span></span>
<span id="cb10-23">)</span></code></pre></div>
</div>
</section>
<section id="multiomic-cell-typing-code-using-hieratype" class="level5">
<h5 class="anchored" data-anchor-id="multiomic-cell-typing-code-using-hieratype">Multiomic cell typing code using HieraType</h5>
<div class="cell">
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Define the pipeline using multiomic markerlists in HieraType package</span></span>
<span id="cb11-2"></span>
<span id="cb11-3">overlapping_cells <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">intersect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(sem_protein), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(sem_rna))</span>
<span id="cb11-4">multimat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(pgamm[,overlapping_cells])</span>
<span id="cb11-5">multimat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(multimat, Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(sem_rna[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts[use_genes,overlapping_cells]))</span>
<span id="cb11-6"></span>
<span id="cb11-7"></span>
<span id="cb11-8">pipeline_io_multiomics <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_pipeline</span>(</span>
<span id="cb11-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">markerslists =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb11-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l1"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_multiomic_l1</span>
<span id="cb11-11">    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l2"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_multiomic_immune</span>
<span id="cb11-12">    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_multiomic_tcellmajor</span>
<span id="cb11-13">    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt4minor"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_multiomic_cd4tminor</span>
<span id="cb11-14">    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt8minor"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_multiomic_cd8tminor</span>
<span id="cb11-15">  )</span>
<span id="cb11-16">  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">priors =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb11-17">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l2"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l1"</span></span>
<span id="cb11-18">    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l2"</span></span>
<span id="cb11-19">    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt4minor"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt"</span></span>
<span id="cb11-20">    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt8minor"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt"</span></span>
<span id="cb11-21">  )</span>
<span id="cb11-22">  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">priors_category =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb11-23">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l2"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"immune"</span></span>
<span id="cb11-24">    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tcell"</span></span>
<span id="cb11-25">    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt4minor"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd4t"</span></span>
<span id="cb11-26">    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt8minor"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd8t"</span></span>
<span id="cb11-27">  )</span>
<span id="cb11-28">)</span>
<span id="cb11-29"></span>
<span id="cb11-30">multictobj <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">run_pipeline</span>(</span>
<span id="cb11-31">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pipeline =</span> pipeline_io_multiomics</span>
<span id="cb11-32">  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">totalcounts=</span> tc[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(multimat)]</span>
<span id="cb11-33">  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gene_wise_frequency =</span> genefreq</span>
<span id="cb11-34">  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">counts_matrix =</span> multimat</span>
<span id="cb11-35">  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">adjacency_matrix =</span> multi_simgrph[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(multimat), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(multimat)]</span>
<span id="cb11-36">)</span></code></pre></div>
</div>
</section>
<section id="rnaonly" class="level5">
<h5 class="anchored" data-anchor-id="rnaonly">RNA-only cell typing</h5>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### RNA-only PCA and similarity graph</span></span>
<span id="cb12-2">pcaobj_rna <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> scPearsonPCA<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sparse_quasipoisson_pca_seurat</span>(sem_rna[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts[use_genes,]</span>
<span id="cb12-3">                                                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">totalcounts =</span> tc</span>
<span id="cb12-4">                                                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">grate =</span> genefreq[use_genes]</span>
<span id="cb12-5">                                                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">do.scale =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb12-6">                                                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">do.center =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb12-7">                                                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale.max =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb12-8">                                                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncores =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb12-9">)</span>
<span id="cb12-10"></span>
<span id="cb12-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Make a cell-cell adjacency matrix for HieraType </span></span>
<span id="cb12-12">rna_simgrph <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> uwot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">similarity_graph</span>(pcaobj_rna<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>reduction.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cell.embeddings</span>
<span id="cb12-13">                                  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_neighbors =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span></span>
<span id="cb12-14">                                  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nn_method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"annoy"</span></span>
<span id="cb12-15">                                  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metric =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cosine'</span></span>
<span id="cb12-16">                                  )</span>
<span id="cb12-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(rna_simgrph) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(rna_simgrph) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(pcaobj_rna<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>reduction.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cell.embeddings)</span>
<span id="cb12-18"></span>
<span id="cb12-19"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## RNA-only hieratype</span></span>
<span id="cb12-20">rnactobj <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">run_pipeline</span>(</span>
<span id="cb12-21">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pipeline =</span> pipeline_io_multiomics <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## the _protein markers are automatically excluded, </span></span>
<span id="cb12-22">                                    <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## because they won't be found in the counts_matrix below</span></span>
<span id="cb12-23">  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">totalcounts=</span> tc[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(multimat)]</span>
<span id="cb12-24">  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gene_wise_frequency =</span> genefreq[use_genes]</span>
<span id="cb12-25">  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">counts_matrix =</span> multimat[,use_genes] <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## exclude proteins, only use the 'use_genes'.  </span></span>
<span id="cb12-26">  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">adjacency_matrix =</span> rna_simgrph[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(multimat), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(multimat)]</span>
<span id="cb12-27">)</span></code></pre></div>
</div>
</section>
<section id="proteinonly" class="level5">
<h5 class="anchored" data-anchor-id="proteinonly">Protein-only cell typing</h5>
<div class="cell">
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">pgamm_prot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pgamm</span>
<span id="cb13-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(pgamm_prot) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_protein$"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(pgamm_prot))</span>
<span id="cb13-3">sem_protein <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetAssayData</span>(sem_protein,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">layer =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new.data =</span> pgamm_prot)</span>
<span id="cb13-4">sem_protein <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScaleData</span>(sem_protein)</span>
<span id="cb13-5">sem_protein <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RunPCA</span>(sem_protein, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(sem_protein))</span>
<span id="cb13-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Make a cell-cell adjacency matrix for HieraType </span></span>
<span id="cb13-7">protein_simgrph <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> uwot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">similarity_graph</span>(sem_protein<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>reductions<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pca<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cell.embeddings</span>
<span id="cb13-8">                                  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_neighbors =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span></span>
<span id="cb13-9">                                  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nn_method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"annoy"</span></span>
<span id="cb13-10">                                  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metric =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cosine'</span></span>
<span id="cb13-11">                                  )</span>
<span id="cb13-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(protein_simgrph) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(protein_simgrph) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(sem_protein<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>reductions<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pca<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cell.embeddings)</span>
<span id="cb13-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">#### Make a copy of the cell typing pipeline to use for protein</span></span>
<span id="cb13-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">#### -- Remove 'mast' cells, which dont have a specific protein marker.</span></span>
<span id="cb13-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">#### -- remove the minor T8 and T4 subtypes</span></span>
<span id="cb13-16">pipeline_io_protein <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pipeline_io_multiomics</span>
<span id="cb13-17">pipeline_io_protein<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>markerslists<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>l2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>mast <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb13-18">pipeline_io_protein<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>markerslists<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lt4minor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb13-19">pipeline_io_protein<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>markerslists<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lt8minor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb13-20">pipeline_io_protein<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>priors<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lt4minor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb13-21">pipeline_io_protein<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>priors<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lt8minor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb13-22">pipeline_io_protein<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>priors_category<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lt4minor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb13-23">pipeline_io_protein<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>priors_category<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lt8minor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span></span>
<span id="cb13-24"></span>
<span id="cb13-25">proteinctobj <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">run_pipeline</span>(</span>
<span id="cb13-26">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pipeline =</span> pipeline_io_protein</span>
<span id="cb13-27">  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">counts_matrix =</span> multimat[,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_protein$"</span>,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(multimat),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)]</span>
<span id="cb13-28">  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">adjacency_matrix =</span> protein_simgrph[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(multimat), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(multimat)]</span>
<span id="cb13-29">)</span></code></pre></div>
</div>
</section>
<section id="combining-metadata" class="level5">
<h5 class="anchored" data-anchor-id="combining-metadata">Combining metadata</h5>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Combining metadata</span></span>
<span id="cb14-2"></span>
<span id="cb14-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Adding on multiomic celltype annotations</span></span>
<span id="cb14-4">ppmulti <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">copy</span>(multictobj<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>post_probs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>l1)</span>
<span id="cb14-5">ppmulti[,celltype_multi_major<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span>celltype_granular]</span>
<span id="cb14-6">ppmulti[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd4"</span>,celltype_multi_major),celltype_multi_major<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd4_tcell"</span>]</span>
<span id="cb14-7">ppmulti[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd8"</span>,celltype_multi_major),celltype_multi_major<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd8_tcell"</span>]</span>
<span id="cb14-8">ppmulti[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mono|macro"</span>,celltype_multi_major),celltype_multi_major<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"macrophage_monocyte"</span>]</span>
<span id="cb14-9">ppmulti[,.N,by<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span>.(celltype_multi_major, celltype_granular)]</span>
<span id="cb14-10"></span>
<span id="cb14-11"></span>
<span id="cb14-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Adding on RNA-only based  celltype annotations</span></span>
<span id="cb14-13">ppmulti <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">merge</span>(ppmulti, rnactobj<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>post_probs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>l1[,.(cell_ID, celltype_granular)]</span>
<span id="cb14-14">                 ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">suffixes=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_multi"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_rna"</span>))</span>
<span id="cb14-15"></span>
<span id="cb14-16">ppmulti[,celltype_rna_major<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span>celltype_granular_rna]</span>
<span id="cb14-17">ppmulti[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd4"</span>,celltype_rna_major),celltype_rna_major<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd4_tcell"</span>]</span>
<span id="cb14-18">ppmulti[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd8"</span>,celltype_rna_major),celltype_rna_major<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd8_tcell"</span>]</span>
<span id="cb14-19">ppmulti[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mono|macro"</span>,celltype_rna_major),celltype_rna_major<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"macrophage_monocyte"</span>]</span>
<span id="cb14-20">ppmulti[,.N,by<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span>.(celltype_rna_major, celltype_granular_rna)]</span>
<span id="cb14-21"></span>
<span id="cb14-22"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Adding protein-only based celltype annotations</span></span>
<span id="cb14-23">ppmulti <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">merge</span>(ppmulti, proteinctobj<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>post_probs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>l1[,.(cell_ID, celltype_granular)]</span>
<span id="cb14-24">                 ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">suffixes=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_multi"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_protein"</span>))</span>
<span id="cb14-25"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setnames</span>(ppmulti, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltype_granular"</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltype_granular_protein"</span>))</span>
<span id="cb14-26">ppmulti[,celltype_protein_major<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span>celltype_granular_protein]</span>
<span id="cb14-27">ppmulti[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd4"</span>,celltype_protein_major),celltype_protein_major<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd4_tcell"</span>]</span>
<span id="cb14-28">ppmulti[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd8"</span>,celltype_protein_major),celltype_protein_major<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd8_tcell"</span>]</span>
<span id="cb14-29">ppmulti[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mono|macro"</span>,celltype_protein_major),celltype_protein_major<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"macrophage_monocyte"</span>]</span>
<span id="cb14-30">ppmulti[,.N,by<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span>.(celltype_protein_major, celltype_granular_protein)]</span></code></pre></div>
</div>
</section>
<section id="integrateunsup" class="level5">
<h5 class="anchored" data-anchor-id="integrateunsup">Integrating unsupervised clusters with immune cell type labels</h5>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Annotating non-immune clusters with unsupervised labels, creating more granular annotations</span></span>
<span id="cb15-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### </span></span>
<span id="cb15-3">ppmulti <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">merge</span>(ppmulti, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(sem_rna<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data)[,.(cell_ID, x_slide_mm, y_slide_mm, clusters_multi_unsup)], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID"</span>)</span>
<span id="cb15-4">ppmulti[,celltype_multi_semi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span>celltype_multi_major]</span>
<span id="cb15-5">ppmulti[celltype_multi_semi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plasma"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"endothelial"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"epithelial"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fibroblast"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"smooth_muscle"</span>),celltype_multi_semi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span>clusters_multi_unsup]</span>
<span id="cb15-6">ppmulti[,.N,by<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span>.(clusters_multi_unsup, celltype_multi_major)]</span>
<span id="cb15-7">class_other <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ppmulti[,.N,by<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span>.(clusters_multi_unsup, celltype_multi_major)][,prop<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span>N<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(N),by<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span>.(clusters_multi_unsup)][<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">order</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>prop)][</span>
<span id="cb15-8">  ,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(.SD,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>),by<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span>.(clusters_multi_unsup)]</span>
<span id="cb15-9">others <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> class_other[<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span>celltype_multi_major <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plasma"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"endothelial"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"epithelial"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fibroblast"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"smooth_muscle"</span>)][[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"clusters_multi_unsup"</span>]]</span>
<span id="cb15-10">ppmulti[celltype_multi_semi <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> others, celltype_multi_semi<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"other"</span>]</span>
<span id="cb15-11"></span>
<span id="cb15-12">  </span>
<span id="cb15-13"></span>
<span id="cb15-14">xyp_multi_semisup <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xyplot</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltype_multi_semi"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metadata =</span> ppmulti, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ptsize =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>()</span>
<span id="cb15-15"></span>
<span id="cb15-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"figures/xyp_multi_semisup.png"</span></span>
<span id="cb15-17">       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot=</span>xyp_multi_semisup</span>
<span id="cb15-18">       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">device =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"png"</span></span>
<span id="cb15-19">       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1181</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb15-20">       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">689</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb15-21">       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'px'</span></span>
<span id="cb15-22">)</span></code></pre></div>
</div>
</section>
<section id="ari" class="level5">
<h5 class="anchored" data-anchor-id="ari">ARI quantifying agreement between cell type labels</h5>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## ARI</span></span>
<span id="cb16-2">mclust<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">adjustedRandIndex</span>(ppmulti<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>celltype_multi_major, ppmulti<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>celltype_protein_major)</span>
<span id="cb16-3">mclust<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">adjustedRandIndex</span>(ppmulti<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>celltype_multi_major, ppmulti<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>celltype_rna_major)</span>
<span id="cb16-4">mclust<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">adjustedRandIndex</span>(ppmulti<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>celltype_protein_major, ppmulti<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>celltype_rna_major)</span></code></pre></div>
</div>
</section>
<section id="making-roc-curves-computing-and-plotting-area-under-the-curve" class="level5">
<h5 class="anchored" data-anchor-id="making-roc-curves-computing-and-plotting-area-under-the-curve">Making ROC curves, computing and plotting area under the curve</h5>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Get the most important 'index markers' for each celltype (including proteins and RNAs)</span></span>
<span id="cb17-2">index_markers <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_multiomic_immune, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[["</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"index_marker"</span>))</span>
<span id="cb17-3">index_markers <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbindlist</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_multiomic_immune), <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(ct){</span>
<span id="cb17-4">  markerdt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">celltype =</span> ct</span>
<span id="cb17-5">                         ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">marker =</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_multiomic_immune[[ct]][[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"index_marker"</span>]]</span>
<span id="cb17-6">                         ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">typ =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rna"</span></span>
<span id="cb17-7">  )</span>
<span id="cb17-8">  markerdt[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_protein$"</span>, marker),typ<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"protein"</span>]</span>
<span id="cb17-9">  markerdt[,marker<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_protein$"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, marker)]</span>
<span id="cb17-10">  markerdt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> markerdt[(typ<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rna"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> marker <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(sem_rna)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> (typ<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"protein"</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> marker <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(sem_protein))]</span>
<span id="cb17-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(markerdt)</span>
<span id="cb17-12">}))</span>
<span id="cb17-13"></span>
<span id="cb17-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Combine macrophage and monocyte due to similarity</span></span>
<span id="cb17-15">index_markers[celltype <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"macrophage"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"monocyte"</span>),celltype<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"macrophage_monocyte"</span>]</span>
<span id="cb17-16">aucrocl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb17-17">plotdata_markerl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb17-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(pgamm) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_protein"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(pgamm))</span>
<span id="cb17-19"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span>(ii <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(index_markers)){</span>
<span id="cb17-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(ii)</span>
<span id="cb17-21">  res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> index_markers[ii]</span>
<span id="cb17-22">  typ <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> res[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"typ"</span>]]</span>
<span id="cb17-23"></span>
<span id="cb17-24"></span>
<span id="cb17-25">  marker <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> res[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"marker"</span>]]</span>
<span id="cb17-26">  celltype <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> res[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltype"</span>]] </span>
<span id="cb17-27">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span>(typ<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rna"</span>){</span>
<span id="cb17-28">    x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sem_rna[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts[marker,ppmulti[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID"</span>]]]</span>
<span id="cb17-29">    tc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(sem_rna[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts[,ppmulti[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID"</span>]]])</span>
<span id="cb17-30">    muhat <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> genefreq[marker] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> tc </span>
<span id="cb17-31">    x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> muhat) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(muhat) <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## normalized expression for marker (pearson residuals)</span></span>
<span id="cb17-32">  }  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb17-33">    x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pgamm[marker,ppmulti[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID"</span>]]]</span>
<span id="cb17-34">  }</span>
<span id="cb17-35">  </span>
<span id="cb17-36">  pdlbl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>() </span>
<span id="cb17-37">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span>(labelname <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltype_multi_major"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltype_rna_major"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltype_protein_major"</span>)){</span>
<span id="cb17-38">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(labelname)</span>
<span id="cb17-39">    labels <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ppmulti[[labelname]]</span>
<span id="cb17-40">    labels[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tcell"</span>, labels)] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tcell"</span> </span>
<span id="cb17-41">    y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.integer</span>(labels<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span>celltype)</span>
<span id="cb17-42">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(y) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>){</span>
<span id="cb17-43">      roc_obj <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">roc</span>(y, x, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quiet =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb17-44">      res[,(labelname)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">auc</span>(roc_obj))]</span>
<span id="cb17-45">    }</span>
<span id="cb17-46">    pdlbl[[labelname]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb17-47">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">spec=</span>roc_obj<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>specificities, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sens=</span>roc_obj<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>sensitivities,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">marker=</span>marker)[,label<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span>labelname][<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,.N,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>), .N))]</span>
<span id="cb17-48">  }</span>
<span id="cb17-49">  plotdata_markerl[[ii]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbindlist</span>(pdlbl)[,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">:=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">`</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">celltype =</span> celltype, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">marker=</span>marker, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">typ =</span> typ)]</span>
<span id="cb17-50">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#ggplot(rbindlist(pdlbl)[seq(1,.N,by=10)],aes(x = (1-spec), y = sens, color=label)) + geom_line()</span></span>
<span id="cb17-51">  aucrocl[[ii]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data.table<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">copy</span>(res) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#return(res)</span></span>
<span id="cb17-52">}</span></code></pre></div>
</div>
</section>
<section id="average-auc-across-markers-and-celltypes" class="level4" data-number="7.0.0.1">
<h4 data-number="7.0.0.1" class="anchored" data-anchor-id="average-auc-across-markers-and-celltypes"><span class="header-section-number">7.0.0.1</span> Average AUC across markers and celltypes</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">aucroc[celltype<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mast"</span>,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(.SD, mean),.SDcols<span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>]</span></code></pre></div>
</div>
</section>
<section id="t-cell-roc-curves" class="level4" data-number="7.0.0.2">
<h4 data-number="7.0.0.2" class="anchored" data-anchor-id="t-cell-roc-curves"><span class="header-section-number">7.0.0.2</span> T cell ROC curves</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">  shw <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbindlist</span>(plotdata_markerl)[marker <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD3D"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD2"</span>)]</span>
<span id="cb19-2">  shw[,method<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(label, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltype_multi_major"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltype_rna_major"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltype_protein_major"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"multiomic typing"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rna-only cell typing"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"protein-only cell typing"</span>))]</span>
<span id="cb19-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">merge</span>(shw, aucrocl)</span>
<span id="cb19-4">  data.table<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setnames</span>(shw, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"typ"</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"analyte"</span>))</span>
<span id="cb19-5">  shw[,marker<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(marker, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD3D"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD2"</span>))]</span>
<span id="cb19-6">  shw <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> shw[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">order</span>(marker)]</span>
<span id="cb19-7">  aucroc[marker <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> shw<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>marker]</span>
<span id="cb19-8">  rocplot_tcell <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb19-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(shw, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> (<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>spec), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> sens,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> method,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>method)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_line</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb19-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>marker <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> analyte, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labeller=</span>label_both) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb19-11">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb19-12">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_x_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"specificity"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb19-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_continuous</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,.<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sensitivity"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb19-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brewer.pal</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Set1"</span>)[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)]</span>
<span id="cb19-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#scale_color_manual(values = brewer.pal(8,"Dark2")[c(1:3)]</span></span>
<span id="cb19-16">                       , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">guide=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_legend</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">override.aes=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lwd=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)))  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb19-17">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb19-18">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottom"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>  </span>
<span id="cb19-19">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ROC curve with T cell RNA and protein markers:</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">Multimomic integrated celltyping outperforms</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">either RNA or protein alone when considering cell type markers measured on both analytes"</span>)</span>
<span id="cb19-20">  </span>
<span id="cb19-21">  lbld <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb19-22">    aucroc[marker <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> shw<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>marker]</span>
<span id="cb19-23">  lbld <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">melt</span>(lbld, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id.vars=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltype"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"marker"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"typ"</span>),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value.name=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auc"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variable.name=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"label"</span>)</span>
<span id="cb19-24">  lbld[,method<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(label</span>
<span id="cb19-25">                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltype_multi_major"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltype_rna_major"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltype_protein_major"</span>)</span>
<span id="cb19-26">                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"multiomic typing"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"rna-only cell typing"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"protein-only cell typing"</span>))]</span>
<span id="cb19-27">  lbld[,marker<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(marker, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD3D"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD2"</span>))]</span>
<span id="cb19-28">  lbld[,analyte<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span>typ]</span>
<span id="cb19-29">  lbld[,lbl<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(method, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" auc="</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">formatC</span>(auc, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>))]</span>
<span id="cb19-30">  lbld[,spec<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>]</span>
<span id="cb19-31">  lbld[,sens<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(lbld<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>method)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>]</span>
<span id="cb19-32">  rocplot_tcell_lbl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> rocplot_tcell <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data=</span>lbld, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> lbl),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">show.legend=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>)</span>
<span id="cb19-33">  </span>
<span id="cb19-34">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot=</span>rocplot_tcell_lbl</span>
<span id="cb19-35">         ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">filename =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"figures/rocplot_tcell_lbl.png"</span></span>
<span id="cb19-36">         ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1372</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)</span>
<span id="cb19-37">         ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">742</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)</span>
<span id="cb19-38">         ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'px'</span></span>
<span id="cb19-39">  )</span></code></pre></div>
</div>
</section>
<section id="auc-barplots" class="level4" data-number="7.0.0.3">
<h4 data-number="7.0.0.3" class="anchored" data-anchor-id="auc-barplots"><span class="header-section-number">7.0.0.3</span> AUC barplots</h4>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">  mroc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">melt</span>(aucroc</span>
<span id="cb20-2">               ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id.vars=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltype"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"marker"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"typ"</span>)</span>
<span id="cb20-3">               ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value.name=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"auc"</span></span>
<span id="cb20-4">               ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variable.name=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"method"</span></span>
<span id="cb20-5">               ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">variable.factor =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb20-6">  )</span>
<span id="cb20-7">  mroc[,celltype<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(celltype, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tcell"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bcell"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"macrophage_monocyte"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dendritic"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"neutrophil"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nk"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mast"</span>))]</span>
<span id="cb20-8">  mroc[,marker_label<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(marker, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" ("</span>, typ, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">")"</span>)]</span>
<span id="cb20-9">  mroc[,marker_label<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(marker_label,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">levels=</span>mroc[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">order</span>(celltype,typ, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>auc),<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(marker_label)])]</span>
<span id="cb20-10">  aucbar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb20-11">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(mroc[celltype<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mast"</span>]</span>
<span id="cb20-12">           ,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> marker_label, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> auc, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill=</span>method)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb20-13">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_bar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">stat=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'identity'</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_dodge</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb20-14">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb20-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">brewer.pal</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Set1"</span>)<span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#unname(pals::alphabet())</span></span>
<span id="cb20-16">                      , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">guide=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_legend</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reverse=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb20-17">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>celltype, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labeller=</span>label_both,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb20-18">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Agreement between celltype label and marker gene/protein as measured by area under the ROC curve"</span></span>
<span id="cb20-19">        ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"area under the ROC curve"</span>)</span>
<span id="cb20-20">  </span>
<span id="cb20-21">  </span>
<span id="cb20-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot=</span>aucbar</span>
<span id="cb20-23">         ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">filename =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"figures/aucbarplot.png"</span></span>
<span id="cb20-24">         ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1430</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)</span>
<span id="cb20-25">         ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">874</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)</span>
<span id="cb20-26">         ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'px'</span></span>
<span id="cb20-27">  )</span>
<span id="cb20-28"></span>
<span id="cb20-29">  aucbar_with_text <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  </span>
<span id="cb20-30">  aucbar <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_text</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">formatC</span>(auc, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">digits =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">position_dodge</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>))  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb20-31">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clip =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"off"</span>)</span>
<span id="cb20-32">  </span>
<span id="cb20-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot=</span>aucbar_with_text </span>
<span id="cb20-34">         ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">filename =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"figures/aucbarplot_wtext.png"</span></span>
<span id="cb20-35">         ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1430</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)</span>
<span id="cb20-36">         ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">874</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.3</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">9</span>)</span>
<span id="cb20-37">         ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'px'</span></span>
<span id="cb20-38">  )</span></code></pre></div>
</div>


<!-- -->

</section>
</section>

 ]]></description>
  <category>cell typing</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/multiomics-hieratype/</guid>
  <pubDate>Fri, 17 Oct 2025 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/multiomics-hieratype/figures/rocplot_tcell_lbl.png" medium="image" type="image/png" height="78" width="144"/>
</item>
<item>
  <title>Aligning CosMx® Same-Cell Multiomics Data</title>
  <dc:creator>Mithra Korukonda</dc:creator>
  <dc:creator>Claire Williams</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/multiomics-alignment/</link>
  <description><![CDATA[ 





<section id="cosmx-multiomics-data" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> CosMx Multiomics Data</h1>
<p>CosMx<sup>®</sup> SMI allows users to acquire protein and RNA data from the same tissue as consecutive experiments. These data are acquired as independent runs and therefore need to be aligned, post-acquisition, to combine them into a multiomic study. This alignment process brings the decoded RNA transcripts into the coordinate system of protein data. To accomplish this, we have developed a standalone alignment tool that can be used to align CosMx data exported from AtoMx<sup>®</sup> SIP. The tool has a 2-step workflow represented in Figure&nbsp;1:</p>
<p>Step 1: Align the RNA morphology fields of view (FOVs) to protein references.</p>
<p>Step 2: Assign the RNA transcripts to the protein cell segmentation labels.</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-align-workflow" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-align-workflow-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/multiomics-alignment/figures/Figure1.png" class="img-fluid figure-img" style="width:100.0%">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-align-workflow-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Multiomics alignment workflow
</figcaption>
</figure>
</div>
</div>
</div>
<div class="{callout-note}">
<p>Like other items in our <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/about.html" target="_blank">CosMx Analysis Scratch Space</a>, the multiomics alignment tool presented here is experimental so the usual <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/about.html" target="_blank">caveats</a> and <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/license.html" target="_blank">license</a> applies.</p>
</div>
</section>
<section id="export-cosmx-multiomics-data-from-atomx-sip" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Export CosMx Multiomics Data from AtoMx SIP</h1>
<p>To export data from AtoMx SIP, you will need an sFTP application such as WinSCP. Launch the AtoMx Export function to obtain the AtoMx Hostname and Username (Figure&nbsp;2, left). Use those credentials, with the AtoMx SIP user’s password, to open a WinSCP portal (Figure&nbsp;2, right).</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-data-export" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-data-export-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/multiomics-alignment/figures/Figure2.png" class="img-fluid figure-img" style="width:100.0%">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-data-export-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: Establishing export access between AtoMx SIP and WinSCP
</figcaption>
</figure>
</div>
</div>
</div>
<p>Next, export data from the protein experiment according to Figure&nbsp;3 (a). Export data from the RNA experiment according to Figure&nbsp;3 (b).</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-data-selection" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-data-selection-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/multiomics-alignment/figures/Figure3.png" class="img-fluid figure-img" style="width:100.0%">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-data-selection-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: Data selection for (a) Protein and (b) RNA export from AtoMx SIP
</figcaption>
</figure>
</div>
</div>
</div>
<p>Check the exported data to confirm the following contents:</p>
<ul>
<li><p>Protein <code>CellStatsDir</code> folder and <code>Morphology2D</code> folder within</p></li>
<li><p>RNA <code>CellStatsDir</code> folder and <code>Morphology2D</code> folder within</p></li>
<li><p>RNA <code>AnalysisResults</code> folder</p></li>
</ul>
</section>
<section id="download-and-use-alignment-tool" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Download and Use Alignment Tool</h1>
<p>Download and unzip the <code>MultiO_Alignment_Tool_OCT2025.zip</code> file available <a href="https://bruker-my.sharepoint.com/:u:/p/s_korukonda/EcSqJPZSai9GqLbGC14iTCsBvPaMhe5VVo7MOe2zQeK9rA?e=YlZRd2" target="_blank">here</a>. Once the file has been unzipped, launch the tool by double-clicking the <code>MultiOAligmentUI.bat</code> file. The executable will launch an interactive graphical user interface (GUI) as shown in Figure&nbsp;4.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>This multiomics alignment tool is actively and continuously under development in the RnD groups at Bruker Spatial Biology. Please be aware that there may be bugs and that it has not gone through the regular level of quality and testing. Our goal here is to bring the capabilities of multiomics to CosMx SMI users as fast as possible. For technical support, please contact support.spatial@bruker.com.</p>
</div>
</div>
<div class="cell">
<div class="cell-output-display">
<div id="fig-gui" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-gui-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/multiomics-alignment/figures/Figure4.png" class="img-fluid figure-img" style="width:100.0%">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-gui-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;4: Standalone multiomics alignment tool GUI
</figcaption>
</figure>
</div>
</div>
</div>
<section id="step-1-calculate-2d-shift" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="step-1-calculate-2d-shift"><span class="header-section-number">3.1</span> Step 1: Calculate 2D Shift</h2>
<p>To launch image alignment, select the <code>Morphology2D</code> folders for both the protein and RNA runs and click <code>Perform Alignment</code>. The standard search area used for the alignment is by default 500 pixels or roughly 60 microns. This range is large enough to account for shifts introduced by slide replacement. This search area is editable and can be increased to 750 if the user suspects a larger shift (though adjustment is typically not needed – the software makes an assessment of search range need prior to alignment).</p>
<p>During alignment a new folder called <code>AlignmentQC</code> is created within the RNA data folder structure and is populated with the outputs from the alignment. Occasionally, certain FOVs may be discarded from the multiomic analysis if they fail alignment. This can happen in cases of tissue peeling or significant cell loss. These FOVs, identified as outliers, are recorded in the <code>Alignment_Stats_Curated.csv</code> file and are excluded from the transcript re-assignment process. Refer to Table&nbsp;1 for a list of <code>AlignmentQC</code> folder outputs and descriptions of the individual files.</p>
<div id="tbl-alignment-qc-outputs" class="quarto-float quarto-figure quarto-figure-center anchored" data-tbl-colwidths="[40,60]">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-alignment-qc-outputs-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;1: Folder outputs and descriptions
</figcaption>
<div aria-describedby="tbl-alignment-qc-outputs-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<table class="caption-top table">
<colgroup>
<col style="width: 40%">
<col style="width: 60%">
</colgroup>
<thead>
<tr class="header">
<th>AlignmentQC Folder Outputs</th>
<th style="text-align: left;">Description of individual files</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Alignment_Stats.csv</td>
<td style="text-align: left;">List of the paired Protein and RNA FOVs along with the computed XY shift (in pixels) between them.</td>
</tr>
<tr class="even">
<td>FOV_mask.TIF</td>
<td style="text-align: left;">Binary Map of the FOV Locations.</td>
</tr>
<tr class="odd">
<td>FOV_Cluster.TIF</td>
<td style="text-align: left;">Visualization of FOV Clusters.</td>
</tr>
<tr class="even">
<td>Displacement_Vectors.png</td>
<td style="text-align: left;">Visualization of the FOV displacement with marker outliers.</td>
</tr>
<tr class="odd">
<td>Alignment_Stats_Curated.csv</td>
<td style="text-align: left;">Updated Stats file with associated cluster label and outlier flag.</td>
</tr>
<tr class="even">
<td>Stats_Report.txt</td>
<td style="text-align: left;">Reports the percentage of FOVs that were successfully aligned, along with a list of FOVs that failed alignment and were excluded from target re-assignment.</td>
</tr>
</tbody>
</table>
</div>
</figure>
</div>
</section>
<section id="step-2-shift-and-assign-transcripts" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="step-2-shift-and-assign-transcripts"><span class="header-section-number">3.2</span> Step 2: Shift and Assign Transcripts</h2>
<p>Once the alignment process has been completed for all the FOVs, the path of the final alignment will appear in the GUI Alignment box (Figure&nbsp;5 ). The user can review the computed alignment to verify accuracy of the results.</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-alignment-folders" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-alignment-folders-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/multiomics-alignment/figures/Figure5.png" class="img-fluid figure-img" style="width:100.0%">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-alignment-folders-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;5: Alignment tool generates XY registration between the protein and RNA images
</figcaption>
</figure>
</div>
</div>
</div>
<p>Once the image registration is complete, the next step is to apply the computed shifts to transcripts and re-assign them to protein segmentation labels. For this step, select the Protein <code>CellStatsDir</code> and the location of the RNA transcripts folder (Figure&nbsp;6 ). If the original folder structure of export is maintained, these folders will be automatically populated when the RNA and protein morphology folders are selected. Once the inputs have been chosen, click <code>Assign transcripts</code> as shown in Figure&nbsp;6 (a).</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-final-output" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-final-output-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/multiomics-alignment/figures/Figure6.png" class="img-fluid figure-img" style="width:100.0%">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-final-output-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;6: (a) Alignment tool shifts and re-assigns RNA transcripts to protein segmentation labels. (b) Final output fo the alignment.
</figcaption>
</figure>
</div>
</div>
</div>
<p>For every FOV, the assignment process takes as input the calculated shift and applies it to the transcript locations and then updates the cell id based on the associated protein cell label data. Once the re-assignment is complete, the final output is a folder with the updated transcripts data as shown in Figure&nbsp;6 (b).</p>
</section>
</section>
<section id="conclusions" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Conclusions</h1>
<p>After using the off-AtoMx alignment tool to apply protein cell segmentation boundaries and cell ID labels to the RNA data, you can use transcript-to-cell alignments found in the <code>*_FOV#####__complete_code_cell_target_call_coords.csv</code> per FOV files within the <code>AnalysisResults_shifted</code> folder to continue analysis with the aligned RNA dataset. These updated files can be used alongside the protein run flat files to create a new multiomic data object. It’s important to note that all transcripts in the aligned RNA data will now reference the segmentation results and metadata from the protein run.</p>
<p>If you prefer to integrate the aligned RNA data into an existing data object, you can do so by starting with the protein run object and either replacing the protein expression matrix with an aligned RNA matrix or appending the RNA data as an additional assay.</p>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>Once the protein and RNA data are exported from AtoMx and modified through alignment, the updated data cannot be re-imported into AtoMx. As of AtoMx v2.2 and earlier, the platform retains only the original, pre-aligned data.</p>
</div>
</div>


</section>

 ]]></description>
  <category>multiomics</category>
  <category>algorithms</category>
  <category>protein</category>
  <category>RNA</category>
  <category>alignment</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/multiomics-alignment/</guid>
  <pubDate>Thu, 02 Oct 2025 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/multiomics-alignment/figures/CosMx_Protein_RNA_Image.png" medium="image" type="image/png" height="46" width="144"/>
</item>
<item>
  <title>Visualizing Spatial Transcriptomics: A Guide to Effective Plotting</title>
  <dc:creator>Claire Williams</dc:creator>
  <dc:creator>Felicia New</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/</link>
  <description><![CDATA[ 





<section id="introduction" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="introduction"><span class="header-section-number">1</span> Introduction</h2>
<p>Spatial transcriptomics data provide rich opportunities for visual exploration. In this post, we demonstrate several useful visualizations for CosMx<sup>®</sup> data, particularly when working from <a href="../../posts/flat-file-exports/flat-files-compare.html">flat files</a>, and showcase a range of visualizations to highlight different aspects of CosMx data. Similar plots could be generated when working with common packages such as Seurat <span class="citation" data-cites="Hao2024">(Hao et al. 2024)</span> or Squidpy <span class="citation" data-cites="Palla2022">(Palla et al. 2022)</span>. For more plotting ideas with these tools, see the following posts:</p>
<p><a href="../../posts/seurat-cosmx-basics/index.html">Plotting with Seurat objects</a></p>
<p><a href="../../posts/squidpy-essentials/squidpy-essentials.html">Plotting and analysis with Squidpy</a></p>
<p>These plots serve as a foundation for both quality control and exploratory analysis and are meant to serve as inspiration for additional plots you could make. For every plot, we show one version made in R and another made in Python; you can view the corresponding R or Python code by expanding the dropdown tab above the figure.</p>
</section>
<section id="data-set-up" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="data-set-up"><span class="header-section-number">2</span> Data set up</h2>
<p>For demonstration in this post, we use data from a breast cancer sample that has been analyzed in AtoMx<sup>®</sup> SIP through unsupervised cell typing. Many of the below plots rely on the same data objects. For convenience, we show how each of these objects are read in here and will use them in later code blocks. We also load in libraries that will be used in later sections.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">R</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Python</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(grid)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(data.table)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(R.utils)</span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(dplyr)</span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggsci)</span>
<span id="cb1-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(pals)</span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(FNN)</span>
<span id="cb1-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(viridis)</span>
<span id="cb1-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(scales)</span>
<span id="cb1-11"></span>
<span id="cb1-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define paths</span></span>
<span id="cb1-13">raw_data_dir <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/path/to/raw/data"</span></span>
<span id="cb1-14">out_dir <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/path/to/out/dir"</span></span>
<span id="cb1-15">slide_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slideName"</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set this to your slide name, i.e. the identifier at the front of each flat file</span></span>
<span id="cb1-16"></span>
<span id="cb1-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read data</span></span>
<span id="cb1-18">cell_meta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(raw_data_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span>, slide_name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_metadata_file.csv.gz"</span>)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Note this is a small file and we read it into a data frame for convenience</span></span>
<span id="cb1-19">cell_polygons <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fread</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(raw_data_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span>, slide_name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-polygons.csv.gz"</span>))</span>
<span id="cb1-20">fov_positions <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fread</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(raw_data_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span>, slide_name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_fov_positions_file.csv.gz"</span>))</span></code></pre></div>
</details>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> pathlib <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Path</span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> gzip</span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> subprocess</span>
<span id="cb2-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> io</span>
<span id="cb2-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb2-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> np</span>
<span id="cb2-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.pyplot <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> plt</span>
<span id="cb2-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.cm <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> cm</span>
<span id="cb2-10"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.patches <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mpatches</span>
<span id="cb2-11"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> matplotlib.colors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> mcolors</span>
<span id="cb2-12"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> mpl_toolkits.axes_grid1.inset_locator <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> inset_axes</span>
<span id="cb2-13"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> sklearn.neighbors <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> NearestNeighbors</span>
<span id="cb2-14"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> string</span>
<span id="cb2-15"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> math</span>
<span id="cb2-16"></span>
<span id="cb2-17"></span>
<span id="cb2-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define paths</span></span>
<span id="cb2-19">raw_data_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/path/to/raw/data"</span>)</span>
<span id="cb2-20">out_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/path/to/out/dir"</span>)</span>
<span id="cb2-21">slide_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slideName"</span></span>
<span id="cb2-22"></span>
<span id="cb2-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read data</span></span>
<span id="cb2-24">cell_meta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(raw_data_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>slide_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_metadata_file.csv.gz"</span>)</span>
<span id="cb2-25">cell_polygons <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(raw_data_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>slide_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">-polygons.csv.gz"</span>)</span>
<span id="cb2-26">fov_positions <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(raw_data_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>slide_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_fov_positions_file.csv.gz"</span>)</span></code></pre></div>
</details>
</div>
</div>
</div>
</div>
<section id="scale-bar-function" class="level3" data-number="2.1">
<h3 data-number="2.1" class="anchored" data-anchor-id="scale-bar-function"><span class="header-section-number">2.1</span> Scale Bar Function</h3>
<p>Because the majority of these plots are spatial plots, we’ll often want to include a scale bar. Rather than showing how to make that scale bar for every plot, we write two quick general functions (<code>R</code> and <code>python</code> versions) here at the beginning to make a nice scale bar and reuse these functions throughout this post.</p>
<p>Additionally, all the code here is designed to work from positions given in pixels, as they are in default flat files. If you have positions in mm you’ll want to adjust accordingly, primarily in the scale bar function.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true">R</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false">Python</a></li></ul>
<div class="tab-content">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Set up scale bar function</span></span>
<span id="cb3-2"></span>
<span id="cb3-3">make_scale_bar_r <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x_vals, y_vals, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">microns_per_pixel =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.12028</span>) {</span>
<span id="cb3-4">  </span>
<span id="cb3-5">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adds a scale bar to a ggplot.</span></span>
<span id="cb3-6"></span>
<span id="cb3-7">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Parameters:</span></span>
<span id="cb3-8">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#x_vals: vector of x coordinates in pixels</span></span>
<span id="cb3-9">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#y_vals: vector of y coordinates in pixels</span></span>
<span id="cb3-10">      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#microns_per_pixel: conversion factor from pixels to microns. Default is conversion factor for commercial CosMx instrument</span></span>
<span id="cb3-11">   </span>
<span id="cb3-12">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example usage:</span></span>
<span id="cb3-13">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># scale_bar = make_scale-bar_r(x_vals = cell_meta$CenterX_global_px, y_vals = cell_meta$CenterY_global_px)</span></span>
<span id="cb3-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ggplot() + scale_bar$bg + scale_bar$rect + scale_bar$label</span></span>
<span id="cb3-15">  </span>
<span id="cb3-16">  </span>
<span id="cb3-17">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate x-axis range</span></span>
<span id="cb3-18">  x_range <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">range</span>(x_vals, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb3-19">  x_length <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">diff</span>(x_range)</span>
<span id="cb3-20">  x_length_um <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> x_length <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> microns_per_pixel</span>
<span id="cb3-21">  </span>
<span id="cb3-22">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Target scale length ~1/4 of the x-axis</span></span>
<span id="cb3-23">  target <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> x_length_um <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb3-24">  </span>
<span id="cb3-25">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute order of magnitude</span></span>
<span id="cb3-26">  order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">floor</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log10</span>(target))</span>
<span id="cb3-27">  mantissa <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> target <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> order</span>
<span id="cb3-28">  </span>
<span id="cb3-29">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Round mantissa to nearest 1, 2, or 5</span></span>
<span id="cb3-30">  nice_mantissa <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (mantissa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>) {</span>
<span id="cb3-31">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb3-32">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (mantissa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span>) {</span>
<span id="cb3-33">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb3-34">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (mantissa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.5</span>) {</span>
<span id="cb3-35">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb3-36">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb3-37">    <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb3-38">  }</span>
<span id="cb3-39">  </span>
<span id="cb3-40">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Final scale length in pixels</span></span>
<span id="cb3-41">  scale_length_um <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> nice_mantissa <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> order</span>
<span id="cb3-42">  scale_length_px <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> scale_length_um <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> microns_per_pixel</span>
<span id="cb3-43">  </span>
<span id="cb3-44">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Format label</span></span>
<span id="cb3-45">  scale_label <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (scale_length_um <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>) {</span>
<span id="cb3-46">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(scale_length_um <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" mm"</span>)</span>
<span id="cb3-47">  } <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb3-48">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(scale_length_um, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" µm"</span>)</span>
<span id="cb3-49">  }</span>
<span id="cb3-50">  </span>
<span id="cb3-51">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set coordinates for the scale bar </span></span>
<span id="cb3-52">  x_start <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> x_range[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> scale_length_px <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.1</span></span>
<span id="cb3-53">  x_end <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> x_range[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> scale_length_px <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb3-54">  y_pos <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">min</span>(y_vals, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> scale_length_px <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb3-55"></span>
<span id="cb3-56">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate scale bar background, scale bar and annotation to return</span></span>
<span id="cb3-57">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb3-58">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bg =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotation_custom</span>(</span>
<span id="cb3-59">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">grob =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rectGrob</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gp =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gpar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>)),</span>
<span id="cb3-60">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> x_start<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> scale_length_px<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> x_end<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> scale_length_px<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>,</span>
<span id="cb3-61">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> y_pos<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> scale_length_px<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> y_pos <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> scale_length_px<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span></span>
<span id="cb3-62">  ),</span>
<span id="cb3-63">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rect =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotation_custom</span>(</span>
<span id="cb3-64">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">grob =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rectGrob</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gp =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gpar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>)),</span>
<span id="cb3-65">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> x_start, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> x_end,</span>
<span id="cb3-66">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> y_pos, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> y_pos <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> scale_length_px <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span></span>
<span id="cb3-67">    ),</span>
<span id="cb3-68">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">annotation_custom</span>(</span>
<span id="cb3-69">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">grob =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">textGrob</span>(scale_label, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">gp =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gpar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">just =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"center"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>),</span>
<span id="cb3-70">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmin =</span> (x_start <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x_end)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xmax =</span> (x_start <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x_end)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,</span>
<span id="cb3-71">      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymin =</span> y_pos <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> scale_length_px <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ymax =</span> y_pos <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> scale_length_px <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb3-72">    )</span>
<span id="cb3-73">  )</span>
<span id="cb3-74">}</span></code></pre></div>
</details>
</div>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Set up scale bar function</span></span>
<span id="cb4-2"></span>
<span id="cb4-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> make_scale_bar_py(ax, x_coords, y_coords, microns_per_pixel<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.12028</span>):</span>
<span id="cb4-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Adds a scale bar to a matplotlib plot.</span></span>
<span id="cb4-6"></span>
<span id="cb4-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Parameters:</span></span>
<span id="cb4-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - ax: matplotlib Axes object</span></span>
<span id="cb4-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - x_coords: list or array of x coordinates</span></span>
<span id="cb4-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - y_coords: list or array of y coordinates</span></span>
<span id="cb4-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - microns_per_pixel: conversion factor from pixels to microns. Default is conversion factor for commercial CosMx instrument</span></span>
<span id="cb4-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    </span></span>
<span id="cb4-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Example usage:</span></span>
<span id="cb4-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - fig, ax = plt.subplots()</span></span>
<span id="cb4-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - ax.scatter(x, y)</span></span>
<span id="cb4-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    - make_scale_bar_py(ax, microns_per_pixel, x, y)</span></span>
<span id="cb4-17"></span>
<span id="cb4-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb4-19">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate x-axis range</span></span>
<span id="cb4-20">    x_range <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(x_coords), <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>(x_coords)]</span>
<span id="cb4-21">    x_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_range[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x_range[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb4-22">    x_length_um <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_length <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> microns_per_pixel</span>
<span id="cb4-23"></span>
<span id="cb4-24">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Target scale length ~1/4 of the x-axis</span></span>
<span id="cb4-25">    target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_length_um <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb4-26"></span>
<span id="cb4-27">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute order of magnitude</span></span>
<span id="cb4-28">    order <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span> np.floor(np.log10(target))</span>
<span id="cb4-29">    mantissa <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> target <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> order</span>
<span id="cb4-30"></span>
<span id="cb4-31">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Round mantissa to nearest 1, 2, or 5</span></span>
<span id="cb4-32">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> mantissa <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.5</span>:</span>
<span id="cb4-33">        nice_mantissa <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb4-34">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> mantissa <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3.5</span>:</span>
<span id="cb4-35">        nice_mantissa <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb4-36">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">elif</span> mantissa <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7.5</span>:</span>
<span id="cb4-37">        nice_mantissa <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span></span>
<span id="cb4-38">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb4-39">        nice_mantissa <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb4-40"></span>
<span id="cb4-41">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Final scale length in pixels</span></span>
<span id="cb4-42">    scale_length_um <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nice_mantissa <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> order</span>
<span id="cb4-43">    scale_length_px <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> scale_length_um <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> microns_per_pixel</span>
<span id="cb4-44"></span>
<span id="cb4-45">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Format label</span></span>
<span id="cb4-46">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> scale_length_um <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span>:</span>
<span id="cb4-47">        scale_label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>scale_length_um <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1000</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.1f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> mm"</span></span>
<span id="cb4-48">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb4-49">        scale_label <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>scale_length_um<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:.0f}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> µm"</span></span>
<span id="cb4-50"></span>
<span id="cb4-51">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set coordinates for the scale bar</span></span>
<span id="cb4-52">    x_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_range[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> scale_length_px <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.1</span></span>
<span id="cb4-53">    x_end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> x_range[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> scale_length_px <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb4-54">    y_pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(y_coords) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> scale_length_px <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span></span>
<span id="cb4-55">    </span>
<span id="cb4-56">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up background for scale bar</span></span>
<span id="cb4-57">    scale_bg <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mpatches.Rectangle(</span>
<span id="cb4-58">        (x_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> scale_length_px <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, y_pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> scale_length_px <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>),</span>
<span id="cb4-59">        width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(x_end <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> x_start) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> scale_length_px <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb4-60">        height<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>scale_length_px <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.4</span>,</span>
<span id="cb4-61">        color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span>,</span>
<span id="cb4-62">        zorder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span></span>
<span id="cb4-63">    )</span>
<span id="cb4-64">    </span>
<span id="cb4-65">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add background</span></span>
<span id="cb4-66">    ax.add_patch(scale_bg)</span>
<span id="cb4-67"></span>
<span id="cb4-68">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Draw scale bar</span></span>
<span id="cb4-69">    ax.plot([x_start, x_end], [y_pos, y_pos], color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">11</span>)</span>
<span id="cb4-70">    ax.text((x_start <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x_end) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, y_pos <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> scale_length_px <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, scale_label,</span>
<span id="cb4-71">            color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>, ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'center'</span>, va<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bottom'</span>, zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>)</span></code></pre></div>
</details>
</div>
</div>
</div>
</div>
</section>
</section>
<section id="plotting-data-in-space" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="plotting-data-in-space"><span class="header-section-number">3</span> Plotting Data in Space</h2>
<p>Spatial transcriptomics unlocks the ability to visualize gene expression in its native tissue context. In this section, we explore a variety of spatial plots, from full tissue views to single FOVs or smaller, and from cell outlines to transcript overlays, highlighting different ways to represent spatial data.</p>
<section id="cell-positions" class="level3" data-number="3.1">
<h3 data-number="3.1" class="anchored" data-anchor-id="cell-positions"><span class="header-section-number">3.1</span> Cell Positions</h3>
<p>Visualize cell centroids from the cell metadata file. This shows a broad overview of the tissue structure. We start with all cells colored grey.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-3-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-1" aria-controls="tabset-3-1" aria-selected="true">R</a></li><li class="nav-item"><a class="nav-link" id="tabset-3-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-2" aria-controls="tabset-3-2" aria-selected="false">Python</a></li></ul>
<div class="tab-content">
<div id="tabset-3-1" class="tab-pane active" aria-labelledby="tabset-3-1-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Set up scale bar</span></span>
<span id="cb5-2">scale_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_scale_bar_r</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x_vals =</span> cell_meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>CenterX_global_px,</span>
<span id="cb5-3">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y_vals =</span> cell_meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>CenterY_global_px)</span>
<span id="cb5-4"></span>
<span id="cb5-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Plot it</span></span>
<span id="cb5-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(cell_meta,</span>
<span id="cb5-7">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> CenterX_global_px, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> CenterY_global_px)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fix aspect ratio</span></span>
<span id="cb5-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-11">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-12">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb5-13">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>label</span>
<span id="cb5-14">  </span>
<span id="cb5-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(out_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_positions.png"</span>),</span>
<span id="cb5-16">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in"</span>)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/cell_positions.png" class="img-fluid figure-img" style="width:30.0%"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-3-2" class="tab-pane" aria-labelledby="tabset-3-2-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Create the scatter plot</span></span>
<span id="cb6-2">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb6-3">ax.scatter(</span>
<span id="cb6-4">    cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CenterX_global_px"</span>],</span>
<span id="cb6-5">    cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CenterY_global_px"</span>],</span>
<span id="cb6-6">    color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey"</span>,</span>
<span id="cb6-7">    s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb6-8">    alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span></span>
<span id="cb6-9">)</span>
<span id="cb6-10">ax.set_aspect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'equal'</span>, adjustable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'box'</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fix aspect ratio</span></span>
<span id="cb6-11">ax.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'off'</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Removes axes and grid</span></span>
<span id="cb6-12"></span>
<span id="cb6-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add scale bar</span></span>
<span id="cb6-14">make_scale_bar_py(ax, cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CenterX_global_px"</span>], cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CenterY_global_px"</span>])</span>
<span id="cb6-15"></span>
<span id="cb6-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save the figure</span></span>
<span id="cb6-17">plt.savefig(os.path.join(out_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"python_cell_positions.png"</span>), bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>, pad_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>)</span>
<span id="cb6-18">plt.close()</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_cell_positions.png" class="img-fluid figure-img" style="width:30.0%"></p>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="cell-polygons" class="level3" data-number="3.2">
<h3 data-number="3.2" class="anchored" data-anchor-id="cell-polygons"><span class="header-section-number">3.2</span> Cell Polygons</h3>
<p>To illustrate cell boundaries, we plot polygon outlines derived from the polygon flat files. These visualizations are most informative when zoomed in, so we focus on a single FOV where individual cell shapes are more discernible.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note on Polygon Flat Files
</div>
</div>
<div class="callout-body-container callout-body">
<p>The polygon flat file encodes each cell’s shape using a simplified set of vertices. As a result, some cells may appear to overlap when plotted—this is a visual artifact caused by rounding during polygon generation.</p>
<p>Importantly, the actual segmentation used for transcript assignment does <strong>not</strong> contain overlapping cell borders. The cell boundaries are sampled using a convex hull to minimize the number of points in the polygons flat file. This file is intended to provide a rough approximation of cell shapes, which is why convex hull simplification may introduce overlaps.</p>
<p>For precise cell boundaries, refer to the <code>CellLabels_F#####.TIF</code> file, which defines borders at the per-pixel level.</p>
</div>
</div>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-4-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-1" aria-controls="tabset-4-1" aria-selected="true">R</a></li><li class="nav-item"><a class="nav-link" id="tabset-4-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-4-2" aria-controls="tabset-4-2" aria-selected="false">Python</a></li></ul>
<div class="tab-content">
<div id="tabset-4-1" class="tab-pane active" aria-labelledby="tabset-4-1-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Set up scale bar</span></span>
<span id="cb7-2">scale_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_scale_bar_r</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x_vals =</span> cell_polygons <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(fov <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(x_global_px),</span>
<span id="cb7-3">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y_vals =</span>  cell_polygons <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(fov <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(y_global_px))</span>
<span id="cb7-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Plot it</span></span>
<span id="cb7-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(cell_polygons <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(fov <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Select cells in FOV 100</span></span>
<span id="cb7-6">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x_global_px, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y_global_px, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> cell)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_polygon</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-10">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-11">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb7-12">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>label</span>
<span id="cb7-13">  </span>
<span id="cb7-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(out_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_outlines_singleFOV.png"</span>),</span>
<span id="cb7-15">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in"</span>)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/cell_outlines_singleFOV.png" class="img-fluid figure-img" width="600"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-4-2" class="tab-pane" aria-labelledby="tabset-4-2-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Filter data for FOV 100</span></span>
<span id="cb8-2">filtered_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_polygons[cell_polygons[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fov"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>]</span>
<span id="cb8-3"></span>
<span id="cb8-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Create the polygon plot</span></span>
<span id="cb8-5">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb8-6"></span>
<span id="cb8-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> key, group <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> filtered_data.groupby(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell"</span>):</span>
<span id="cb8-8">  ax.plot(group[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x_global_px"</span>], group[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y_global_px"</span>], color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb8-9">    </span>
<span id="cb8-10">ax.set_aspect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'equal'</span>, adjustable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'box'</span>)</span>
<span id="cb8-11">ax.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'off'</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Removes axes and grid</span></span>
<span id="cb8-12"></span>
<span id="cb8-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add scale bar</span></span>
<span id="cb8-14">make_scale_bar_py(ax, filtered_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x_global_px"</span>], filtered_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y_global_px"</span>])</span>
<span id="cb8-15"></span>
<span id="cb8-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save the figure</span></span>
<span id="cb8-17">plt.savefig(os.path.join(out_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"python_cell_outlines_singleFOV.png"</span>), bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>, pad_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>)</span>
<span id="cb8-18">plt.close()</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_cell_outlines_singleFOV.png" class="img-fluid figure-img" width="462"></p>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="color-cells-by-metadata" class="level3" data-number="3.3">
<h3 data-number="3.3" class="anchored" data-anchor-id="color-cells-by-metadata"><span class="header-section-number">3.3</span> Color Cells by Metadata</h3>
<p>Overlay polygons with metadata such as cell type. Here, we use results from Leiden clustering. Throughout the post, we showcase a variety of color palettes. When only a few colors are needed, we aim for consistency between <code>R</code> and <code>Python</code> plots. In cases requiring many colors, we highlight diverse palette options, which may differ across the two languages.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>There are a small number of cells with no associated cell type as they got flagged in QC. These show up as <code>NA</code> in the plots.</p>
</div>
</div>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-5-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-5-1" aria-controls="tabset-5-1" aria-selected="true">R</a></li><li class="nav-item"><a class="nav-link" id="tabset-5-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-5-2" aria-controls="tabset-5-2" aria-selected="false">Python</a></li></ul>
<div class="tab-content">
<div id="tabset-5-1" class="tab-pane active" aria-labelledby="tabset-5-1-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Add cell type to polygons</span></span>
<span id="cb9-2">plot.df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cell_polygons <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(fov <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>()</span>
<span id="cb9-3">meta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(cell_meta)</span>
<span id="cb9-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(meta) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell</span>
<span id="cb9-5">plot.df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell_type <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(meta)[plot.df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"leiden_cluster"</span>]</span>
<span id="cb9-6"></span>
<span id="cb9-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Set up scale bar</span></span>
<span id="cb9-8">scale_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_scale_bar_r</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x_vals =</span> plot.df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(x_global_px),</span>
<span id="cb9-9">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y_vals =</span>  plot.df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(y_global_px))</span>
<span id="cb9-10"></span>
<span id="cb9-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Plot it</span></span>
<span id="cb9-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(plot.df,</span>
<span id="cb9-13">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x_global_px, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y_global_px, </span>
<span id="cb9-14">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> cell, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Group cells for polygons</span></span>
<span id="cb9-15">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(cell_type))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Polygon fill by cell type</span></span>
<span id="cb9-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_polygon</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_ucscgb</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Palette inspired by UCSB Genome Browser</span></span>
<span id="cb9-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cell type"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-21">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-22">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb9-23">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>label</span>
<span id="cb9-24">  </span>
<span id="cb9-25"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(out_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltype_polygons_singleFOV.png"</span>),</span>
<span id="cb9-26">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in"</span>)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/celltype_polygons_singleFOV.png" class="img-fluid figure-img" width="900"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-5-2" class="tab-pane" aria-labelledby="tabset-5-2-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Filter for FOV 100</span></span>
<span id="cb10-2">plot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_polygons[cell_polygons[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fov"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>]</span>
<span id="cb10-3"></span>
<span id="cb10-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Merge only the 'leiden_cluster' column</span></span>
<span id="cb10-5">meta_subset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_meta[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'leiden_cluster'</span>]]</span>
<span id="cb10-6">plot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_df.merge(meta_subset, on<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell'</span>, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'left'</span>)</span>
<span id="cb10-7"></span>
<span id="cb10-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a colormap</span></span>
<span id="cb10-9">clusters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"leiden_cluster"</span>].unique()</span>
<span id="cb10-10"></span>
<span id="cb10-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Filter out NA values first</span></span>
<span id="cb10-12">valid_clusters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [c <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> clusters <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> pd.notna(c)]</span>
<span id="cb10-13"></span>
<span id="cb10-14">cmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cm.get_cmap(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tab20"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(valid_clusters))</span>
<span id="cb10-15">cluster_to_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {cluster: cmap(i) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, cluster <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(valid_clusters)}</span>
<span id="cb10-16"></span>
<span id="cb10-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Add color for NA values</span></span>
<span id="cb10-18">cluster_to_color[np.nan] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span></span>
<span id="cb10-19"></span>
<span id="cb10-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Create the polygon plot</span></span>
<span id="cb10-21">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb10-22"></span>
<span id="cb10-23"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> key, group <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> plot_df.groupby(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell"</span>): <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Iterate through each cell</span></span>
<span id="cb10-24">    cluster <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> group[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"leiden_cluster"</span>].iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb10-25">    color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cluster_to_color[np.nan] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> pd.isna(cluster) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> cluster_to_color[cluster]</span>
<span id="cb10-26">    coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> group[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x_global_px"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y_global_px"</span>]].values</span>
<span id="cb10-27">    coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.vstack([coords, coords[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># close the polygon</span></span>
<span id="cb10-28">    ax.fill(coords[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], coords[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], facecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color, edgecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb10-29"></span>
<span id="cb10-30"></span>
<span id="cb10-31">ax.set_aspect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'equal'</span>, adjustable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'box'</span>)</span>
<span id="cb10-32">ax.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'off'</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Removes axes and grid</span></span>
<span id="cb10-33"></span>
<span id="cb10-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add scale bar</span></span>
<span id="cb10-35">make_scale_bar_py(ax, plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x_global_px"</span>], plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y_global_px"</span>])</span>
<span id="cb10-36"></span>
<span id="cb10-37"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create legend handles</span></span>
<span id="cb10-38">legend_handles <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb10-39">    mpatches.Patch(</span>
<span id="cb10-40">      color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color, </span>
<span id="cb10-41">      label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Cluster </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(cluster)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> pd.notna(cluster) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cluster NA"</span>)</span>
<span id="cb10-42">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> cluster, color <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> cluster_to_color.items()</span>
<span id="cb10-43">]</span>
<span id="cb10-44"></span>
<span id="cb10-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add legend to the right</span></span>
<span id="cb10-46">ax.legend(</span>
<span id="cb10-47">  handles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>legend_handles, </span>
<span id="cb10-48">  title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cell type"</span>, </span>
<span id="cb10-49">  bbox_to_anchor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.05</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), </span>
<span id="cb10-50">  loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'upper left'</span>,</span>
<span id="cb10-51">  fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,</span>
<span id="cb10-52">  title_fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb10-53"></span>
<span id="cb10-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save</span></span>
<span id="cb10-55">plt.savefig(os.path.join(out_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"python_celltype_polygons_singleFOV.png"</span>), bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>, pad_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>)</span>
<span id="cb10-56">plt.close()</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_celltype_polygons_singleFOV.png" class="img-fluid figure-img" width="602"></p>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="highlight-one-cell-type" class="level3" data-number="3.4">
<h3 data-number="3.4" class="anchored" data-anchor-id="highlight-one-cell-type"><span class="header-section-number">3.4</span> Highlight One Cell Type</h3>
<p>Here we change the color on a single cell type, designated as tumor subtype A, to highlight these cells.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-6-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-6-1" aria-controls="tabset-6-1" aria-selected="true">R</a></li><li class="nav-item"><a class="nav-link" id="tabset-6-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-6-2" aria-controls="tabset-6-2" aria-selected="false">Python</a></li></ul>
<div class="tab-content">
<div id="tabset-6-1" class="tab-pane active" aria-labelledby="tabset-6-1-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Add cell type to polygons</span></span>
<span id="cb11-2">plot.df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cell_polygons <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(fov <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>()</span>
<span id="cb11-3">meta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(cell_meta)</span>
<span id="cb11-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(meta) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell</span>
<span id="cb11-5">plot.df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell_type <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(meta)[plot.df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"leiden_cluster"</span>] </span>
<span id="cb11-6"></span>
<span id="cb11-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Select cells to highlight</span></span>
<span id="cb11-8">plot.df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>highlight <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(plot.df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell_type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Tumor A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Other"</span>)</span>
<span id="cb11-9"></span>
<span id="cb11-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Set up scale bar</span></span>
<span id="cb11-11">scale_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_scale_bar_r</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x_vals =</span> plot.df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(x_global_px),</span>
<span id="cb11-12">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y_vals =</span>  plot.df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(y_global_px))</span>
<span id="cb11-13"></span>
<span id="cb11-14"></span>
<span id="cb11-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Plot it</span></span>
<span id="cb11-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(plot.df,</span>
<span id="cb11-17">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x_global_px, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y_global_px, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> cell,</span>
<span id="cb11-18">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> highlight)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_polygon</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkgrey"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_jco</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use a color palette from JCO (Journal of Clinical Oncology)</span></span>
<span id="cb11-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cell type"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-24">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-25">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb11-26">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>label</span>
<span id="cb11-27"> </span>
<span id="cb11-28"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(out_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltypeHighlight_polygons_singleFOV.png"</span>),</span>
<span id="cb11-29">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in"</span>)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/celltypeHighlight_polygons_singleFOV.png" class="img-fluid figure-img" width="900"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-6-2" class="tab-pane" aria-labelledby="tabset-6-2-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb12-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Filter for FOV 100</span></span>
<span id="cb12-2">plot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_polygons[cell_polygons[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fov"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>]</span>
<span id="cb12-3"></span>
<span id="cb12-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Merge only the 'leiden_cluster' and 'nCount_RNA' columns</span></span>
<span id="cb12-5">meta_subset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_meta[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'leiden_cluster'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nCount_RNA'</span>]]</span>
<span id="cb12-6">plot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_df.merge(meta_subset, on<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell'</span>, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'left'</span>)</span>
<span id="cb12-7"></span>
<span id="cb12-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add highlight column</span></span>
<span id="cb12-9">plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'highlight'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.where(plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'leiden_cluster'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Tumor A'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Other'</span>)</span>
<span id="cb12-10"></span>
<span id="cb12-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Plot</span></span>
<span id="cb12-12">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb12-13"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> key, group <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> plot_df.groupby(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell"</span>):</span>
<span id="cb12-14">    highlight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> group[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"highlight"</span>].iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb12-15">    fill_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#EFC000'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> highlight <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Tumor A'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#0073C2'</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fill color logic, matching blue / yellow shown in R plot</span></span>
<span id="cb12-16">    coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> group[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x_global_px"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y_global_px"</span>]].values</span>
<span id="cb12-17">    coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.vstack([coords, coords[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># close the polygon</span></span>
<span id="cb12-18">    ax.fill(coords[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], coords[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], facecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>fill_color, edgecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'darkgrey'</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, zorder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb12-19"></span>
<span id="cb12-20">ax.set_aspect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'equal'</span>)</span>
<span id="cb12-21">ax.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'off'</span>)</span>
<span id="cb12-22"></span>
<span id="cb12-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add scale bar</span></span>
<span id="cb12-24">make_scale_bar_py(ax, plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x_global_px"</span>], plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y_global_px"</span>])</span>
<span id="cb12-25"></span>
<span id="cb12-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Legend</span></span>
<span id="cb12-27">legend_handles <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb12-28">    mpatches.Patch(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#0073C2'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Tumor A'</span>),</span>
<span id="cb12-29">    mpatches.Patch(color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#EFC000'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Other'</span>)</span>
<span id="cb12-30">]</span>
<span id="cb12-31">ax.legend(handles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>legend_handles, title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cell type"</span>, bbox_to_anchor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.05</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'upper left'</span>)</span>
<span id="cb12-32"></span>
<span id="cb12-33">plt.savefig(os.path.join(out_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"python_celltypeHighlight_polygons_singleFOV.png"</span>), bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>, pad_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>)</span>
<span id="cb12-34">plt.close()</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_celltypeHighlight_polygons_singleFOV.png" class="img-fluid figure-img" width="898"></p>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="mute-background-cells" class="level3" data-number="3.5">
<h3 data-number="3.5" class="anchored" data-anchor-id="mute-background-cells"><span class="header-section-number">3.5</span> Mute Background Cells</h3>
<p>As an alternative, we can highlight one cell type by muting the color for all others. However, keep in mind that when many colors are present, muting can reduce contrast and make distinctions harder to perceive. To improve interpretability, consider grouping cells into 5–10 major types or manually assigning similar hues to related cell types. As another option, color the cells of interest black, which may allow you to mute other colors less.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-7-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-7-1" aria-controls="tabset-7-1" aria-selected="true">R</a></li><li class="nav-item"><a class="nav-link" id="tabset-7-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-7-2" aria-controls="tabset-7-2" aria-selected="false">Python</a></li></ul>
<div class="tab-content">
<div id="tabset-7-1" class="tab-pane active" aria-labelledby="tabset-7-1-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Add cell type to polygons</span></span>
<span id="cb13-2">plot.df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cell_polygons <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(fov <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>()</span>
<span id="cb13-3">meta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(cell_meta)</span>
<span id="cb13-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(meta) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell</span>
<span id="cb13-5">plot.df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell_type <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(meta)[plot.df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"leiden_cluster"</span>] </span>
<span id="cb13-6"></span>
<span id="cb13-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Set alpha by cell type</span></span>
<span id="cb13-8">alpha_vals <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(plot.df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell_type)))</span>
<span id="cb13-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(alpha_vals) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(plot.df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell_type))</span>
<span id="cb13-10">alpha_vals[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb13-11"></span>
<span id="cb13-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Set up scale bar</span></span>
<span id="cb13-13">scale_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_scale_bar_r</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x_vals =</span> plot.df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(x_global_px),</span>
<span id="cb13-14">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y_vals =</span>  plot.df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(y_global_px))</span>
<span id="cb13-15"></span>
<span id="cb13-16"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Plot it</span></span>
<span id="cb13-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(plot.df,</span>
<span id="cb13-18">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x_global_px, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y_global_px, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> cell,</span>
<span id="cb13-19">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(cell_type), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(cell_type))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_polygon</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkgrey"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_d3</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"category20"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Inspired by colors in the D3 visualization library</span></span>
<span id="cb13-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cell type"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cell type"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_alpha_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> alpha_vals, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.value =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Adjust opacity by cell type</span></span>
<span id="cb13-26">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-27">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb13-28">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>label</span>
<span id="cb13-29">  </span>
<span id="cb13-30"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(out_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltypeAlphaHighlight_polygons_singleFOV.png"</span>),</span>
<span id="cb13-31">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in"</span>)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/celltypeAlphaHighlight_polygons_singleFOV.png" class="img-fluid figure-img" width="900"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-7-2" class="tab-pane" aria-labelledby="tabset-7-2-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Filter for FOV 100</span></span>
<span id="cb14-2">plot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_polygons[cell_polygons[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fov"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>]</span>
<span id="cb14-3"></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Merge only the 'leiden_cluster' column</span></span>
<span id="cb14-5">meta_subset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_meta[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'leiden_cluster'</span>]]</span>
<span id="cb14-6">plot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_df.merge(meta_subset, on<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell'</span>, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'left'</span>)</span>
<span id="cb14-7"></span>
<span id="cb14-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a colormap</span></span>
<span id="cb14-9">clusters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"leiden_cluster"</span>].unique()</span>
<span id="cb14-10"></span>
<span id="cb14-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Filter out NA values first</span></span>
<span id="cb14-12">valid_clusters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [c <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> c <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> clusters <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> pd.notna(c)]</span>
<span id="cb14-13"></span>
<span id="cb14-14">cmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cm.get_cmap(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Set3"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(valid_clusters)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Use matplotlib's Set3 palette</span></span>
<span id="cb14-15">cluster_to_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {cluster: cmap(i) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, cluster <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(valid_clusters)}</span>
<span id="cb14-16"></span>
<span id="cb14-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Add color for NA values</span></span>
<span id="cb14-18">cluster_to_color[np.nan] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span></span>
<span id="cb14-19"></span>
<span id="cb14-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add alpha column</span></span>
<span id="cb14-21">plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alpha'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.where(plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'leiden_cluster'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb14-22"></span>
<span id="cb14-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Plot</span></span>
<span id="cb14-24">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb14-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> key, group <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> plot_df.groupby(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell"</span>):</span>
<span id="cb14-26">    cell_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> group[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"leiden_cluster"</span>].iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb14-27">    alpha <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> group[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"alpha"</span>].iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb14-28">    fill_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cluster_to_color[np.nan] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> pd.isna(cell_type) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> cluster_to_color[cell_type]</span>
<span id="cb14-29">    coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> group[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x_global_px"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y_global_px"</span>]].values</span>
<span id="cb14-30">    coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.vstack([coords, coords[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># close the polygon</span></span>
<span id="cb14-31">    ax.fill(coords[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], coords[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], facecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>fill_color, edgecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'darkgrey'</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>alpha, zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb14-32"></span>
<span id="cb14-33">ax.set_aspect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'equal'</span>)</span>
<span id="cb14-34">ax.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'off'</span>)</span>
<span id="cb14-35"></span>
<span id="cb14-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add scale bar</span></span>
<span id="cb14-37">make_scale_bar_py(ax, plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x_global_px"</span>], plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y_global_px"</span>])</span>
<span id="cb14-38"></span>
<span id="cb14-39"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Legend for fill colors</span></span>
<span id="cb14-40">unique_clusters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"leiden_cluster"</span>].unique()</span>
<span id="cb14-41">legend_handles <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb14-42">    mpatches.Patch(</span>
<span id="cb14-43">      color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color, </span>
<span id="cb14-44">      label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Cluster </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(cluster)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> pd.notna(cluster) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cluster NA"</span>,</span>
<span id="cb14-45">      alpha <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> cluster <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb14-46">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> cluster, color <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> cluster_to_color.items()</span>
<span id="cb14-47">]</span>
<span id="cb14-48">ax.legend(</span>
<span id="cb14-49">  handles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>legend_handles, </span>
<span id="cb14-50">  title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cell type"</span>, </span>
<span id="cb14-51">  bbox_to_anchor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.05</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.95</span>), </span>
<span id="cb14-52">  loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'upper left'</span>,</span>
<span id="cb14-53">  fontsize <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,</span>
<span id="cb14-54">  title_fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb14-55"></span>
<span id="cb14-56">plt.savefig(os.path.join(out_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"python_celltypeAlphaHighlight_polygons_singleFOV.png"</span>), bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>, pad_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>)</span>
<span id="cb14-57">plt.close()</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_celltypeAlphaHighlight_polygons_singleFOV.png" class="img-fluid figure-img" width="845"></p>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="dynamically-color-one-cell-type" class="level3" data-number="3.6">
<h3 data-number="3.6" class="anchored" data-anchor-id="dynamically-color-one-cell-type"><span class="header-section-number">3.6</span> Dynamically Color One Cell Type</h3>
<p>Sometimes we want to highlight metadata about a single cell type, such as counts per cell specifically for tumor cells. To do this, we can set all other cells to a background color such as light grey and then dynamically color the cells of interest.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-8-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-8-1" aria-controls="tabset-8-1" aria-selected="true">R</a></li><li class="nav-item"><a class="nav-link" id="tabset-8-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-8-2" aria-controls="tabset-8-2" aria-selected="false">Python</a></li></ul>
<div class="tab-content">
<div id="tabset-8-1" class="tab-pane active" aria-labelledby="tabset-8-1-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Add cell type and counts to polygons</span></span>
<span id="cb15-2">plot.df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cell_polygons <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(fov <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>()</span>
<span id="cb15-3">meta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(cell_meta)</span>
<span id="cb15-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(meta) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell</span>
<span id="cb15-5">plot.df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell_type <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(meta)[plot.df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"leiden_cluster"</span>]</span>
<span id="cb15-6">plot.df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>nCount_RNA <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(meta)[plot.df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nCount_RNA"</span>]</span>
<span id="cb15-7"></span>
<span id="cb15-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Set up scale bar</span></span>
<span id="cb15-9">scale_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_scale_bar_r</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x_vals =</span> plot.df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(x_global_px),</span>
<span id="cb15-10">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y_vals =</span>  plot.df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(y_global_px))</span>
<span id="cb15-11"></span>
<span id="cb15-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Plot it</span></span>
<span id="cb15-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(plot.df,</span>
<span id="cb15-14">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x_global_px, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y_global_px, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> cell,</span>
<span id="cb15-15">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(cell_type <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"5"</span>, nCount_RNA, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Logic to color only cells of one type by total counts</span></span>
<span id="cb15-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_polygon</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkgrey"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_viridis</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">option =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"magma"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">trans =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"log10"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.value =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use viridis color palette</span></span>
<span id="cb15-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Transcripts per cell"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-21">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-22">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb15-23">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>label</span>
<span id="cb15-24">  </span>
<span id="cb15-25"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(out_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltypeHighlightTxperCell_polygons_singleFOV.png"</span>),</span>
<span id="cb15-26">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in"</span>)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/celltypeHighlightTxperCell_polygons_singleFOV.png" class="img-fluid figure-img" width="900"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-8-2" class="tab-pane" aria-labelledby="tabset-8-2-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Filter for FOV 100</span></span>
<span id="cb16-2">plot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_polygons[cell_polygons[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fov"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>]</span>
<span id="cb16-3"></span>
<span id="cb16-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Merge only the 'leiden_cluster' and 'nCount_RNA' columns</span></span>
<span id="cb16-5">meta_subset <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_meta[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'leiden_cluster'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nCount_RNA'</span>]]</span>
<span id="cb16-6">plot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_df.merge(meta_subset, on<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell'</span>, how<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'left'</span>)</span>
<span id="cb16-7"></span>
<span id="cb16-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Prepare log10-transformed values for cluster 5</span></span>
<span id="cb16-9">highlight_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_df[plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'leiden_cluster'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>].copy()</span>
<span id="cb16-10">highlight_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'log_nCount_RNA'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.log10(highlight_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nCount_RNA'</span>].replace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, np.nan)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Log10 transform</span></span>
<span id="cb16-11">vmin, vmax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> highlight_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'log_nCount_RNA'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">min</span>(), highlight_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'log_nCount_RNA'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">max</span>()</span>
<span id="cb16-12">norm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mcolors.Normalize(vmin<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>vmin, vmax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>vmax) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Normalize to 0 - 1 range as expected by matplotlib colormap</span></span>
<span id="cb16-13">cmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cm.get_cmap(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"magma"</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use the magma palette</span></span>
<span id="cb16-14"></span>
<span id="cb16-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Assign colors dynamically</span></span>
<span id="cb16-16">cell_to_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {}</span>
<span id="cb16-17"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _, row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> plot_df.iterrows():</span>
<span id="cb16-18">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'leiden_cluster'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> pd.notna(row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nCount_RNA'</span>]) <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">and</span> row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nCount_RNA'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>:</span>
<span id="cb16-19">        log_val <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.log10(row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nCount_RNA'</span>])</span>
<span id="cb16-20">        scaled_val <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> norm(log_val)</span>
<span id="cb16-21">        cell_to_color[row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell'</span>]] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cmap(scaled_val)</span>
<span id="cb16-22">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span>:</span>
<span id="cb16-23">        cell_to_color[row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell'</span>]] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span></span>
<span id="cb16-24"></span>
<span id="cb16-25"></span>
<span id="cb16-26"></span>
<span id="cb16-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Plot</span></span>
<span id="cb16-28">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb16-29"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> key, group <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> plot_df.groupby(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell"</span>):</span>
<span id="cb16-30">    fill_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_to_color[key]</span>
<span id="cb16-31">    coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> group[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x_global_px"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y_global_px"</span>]].values</span>
<span id="cb16-32">    coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.vstack([coords, coords[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># close the polygon</span></span>
<span id="cb16-33">    ax.fill(coords[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], coords[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], facecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>fill_color, edgecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'darkgrey'</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb16-34"></span>
<span id="cb16-35">ax.set_aspect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'equal'</span>)</span>
<span id="cb16-36">ax.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'off'</span>)</span>
<span id="cb16-37"></span>
<span id="cb16-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add scale bar</span></span>
<span id="cb16-39">make_scale_bar_py(ax, plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x_global_px"</span>], plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y_global_px"</span>])</span>
<span id="cb16-40"></span>
<span id="cb16-41"></span>
<span id="cb16-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add colorbar with original transcript counts</span></span>
<span id="cb16-43">sm <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cm.ScalarMappable(cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cmap, norm<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>norm)</span>
<span id="cb16-44">sm.set_array([])</span>
<span id="cb16-45">cbar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.colorbar(sm, ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax)</span>
<span id="cb16-46">tick_vals <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(vmin, vmax, num<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb16-47">cbar.set_ticks(tick_vals)</span>
<span id="cb16-48">cbar.set_ticklabels([<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">**</span>val)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:,}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> val <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> tick_vals])</span>
<span id="cb16-49">cbar.set_label(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Transcripts per cell"</span>, fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>)</span>
<span id="cb16-50"></span>
<span id="cb16-51"></span>
<span id="cb16-52">plt.savefig(os.path.join(out_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"python_celltypeHighlightTxperCell_polygons_singleFOV.png"</span>), bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>, pad_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>)</span>
<span id="cb16-53">plt.close()</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_celltypeHighlightTxperCell_polygons_singleFOV.png" class="img-fluid figure-img" width="726"></p>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="gallery-of-single-cell-type-highlighting" class="level3" data-number="3.7">
<h3 data-number="3.7" class="anchored" data-anchor-id="gallery-of-single-cell-type-highlighting"><span class="header-section-number">3.7</span> Gallery of single cell type highlighting</h3>
<p>Similar to above, here we highlight one cell type at a time. However, we now do this for each cell type separately and show a tiled gallery of all cell types. For this example, we show the whole tissue to give the broader context of where each cell type appears.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>In making this gallery, plotting all cells in every facet causes many cells to be plotted if you’re looking at a large slide. Here, we instead show 5% of cells in our background to give a tissue overview and all 100% of cells of the type of interest in the foreground.</p>
</div>
</div>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-9-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-9-1" aria-controls="tabset-9-1" aria-selected="true">R</a></li><li class="nav-item"><a class="nav-link" id="tabset-9-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-9-2" aria-controls="tabset-9-2" aria-selected="false">Python</a></li></ul>
<div class="tab-content">
<div id="tabset-9-1" class="tab-pane active" aria-labelledby="tabset-9-1-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Set up scale bar</span></span>
<span id="cb17-2">scale_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_scale_bar_r</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x_vals =</span> cell_meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>CenterX_global_px,</span>
<span id="cb17-3">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y_vals =</span> cell_meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>CenterY_global_px)</span>
<span id="cb17-4"></span>
<span id="cb17-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Make a copy of metadata that lacks the cell type</span></span>
<span id="cb17-6">df2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(cell_meta, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>leiden_cluster)</span>
<span id="cb17-7"></span>
<span id="cb17-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sample 5% of cells for background</span></span>
<span id="cb17-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2025</span>)</span>
<span id="cb17-10">df2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df2[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(df2), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(df2)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>),]</span>
<span id="cb17-11"></span>
<span id="cb17-12"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Plot it</span></span>
<span id="cb17-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(cell_meta,</span>
<span id="cb17-14">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> CenterX_global_px, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> CenterY_global_px)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> df2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey80"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Background cells</span></span>
<span id="cb17-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Foreground highlighted cells</span></span>
<span id="cb17-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-19">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-20">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-21">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>label <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb17-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>leiden_cluster)</span>
<span id="cb17-23">  </span>
<span id="cb17-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(out_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"gallery_celltype_positions.png"</span>),</span>
<span id="cb17-25">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in"</span>)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/gallery_celltype_positions.png" class="img-fluid figure-img" width="1200"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-9-2" class="tab-pane" aria-labelledby="tabset-9-2-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a 5% random sample for background</span></span>
<span id="cb18-2">df2 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_meta.drop(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'leiden_cluster'</span>).sample(frac<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, random_state<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2025</span>)</span>
<span id="cb18-3"></span>
<span id="cb18-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create faceted plots by leiden_cluster</span></span>
<span id="cb18-5">unique_clusters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'leiden_cluster'</span>].unique()</span>
<span id="cb18-6">unique_clusters.sort()</span>
<span id="cb18-7">n_clusters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(unique_clusters)</span>
<span id="cb18-8">n_cols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> math.ceil(math.sqrt(n_clusters))</span>
<span id="cb18-9">n_rows <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(np.ceil(n_clusters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> n_cols))</span>
<span id="cb18-10"></span>
<span id="cb18-11">fig, axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(n_rows, n_cols, figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>), squeeze<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)</span>
<span id="cb18-12"></span>
<span id="cb18-13"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ax, cluster <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(axes.flat, unique_clusters):</span>
<span id="cb18-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Background layer</span></span>
<span id="cb18-15">    ax.scatter(df2[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CenterX_global_px'</span>], df2[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CenterY_global_px'</span>],</span>
<span id="cb18-16">               color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'grey'</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>)</span>
<span id="cb18-17"></span>
<span id="cb18-18">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Foreground red points for this cluster</span></span>
<span id="cb18-19">    cluster_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_meta[cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'leiden_cluster'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> cluster]</span>
<span id="cb18-20">    ax.scatter(cluster_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CenterX_global_px'</span>], cluster_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CenterY_global_px'</span>],</span>
<span id="cb18-21">               color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>)</span>
<span id="cb18-22"></span>
<span id="cb18-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add scale bar</span></span>
<span id="cb18-24">    make_scale_bar_py(ax, cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CenterX_global_px'</span>], cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CenterY_global_px'</span>])</span>
<span id="cb18-25">    </span>
<span id="cb18-26">    ax.set_title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Cluster </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>cluster<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb18-27">    ax.set_aspect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'equal'</span>)</span>
<span id="cb18-28">    ax.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'off'</span>)</span>
<span id="cb18-29"></span>
<span id="cb18-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Hide any unused subplots</span></span>
<span id="cb18-31"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ax <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> axes.flat[n_clusters:]:</span>
<span id="cb18-32">    ax.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'off'</span>)</span>
<span id="cb18-33"></span>
<span id="cb18-34">plt.tight_layout()</span>
<span id="cb18-35">plt.savefig(os.path.join(out_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"python_gallery_celltype_positions.png"</span>), dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>)</span>
<span id="cb18-36">plt.close()</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_gallery_celltype_positions.png" class="img-fluid figure-img" width="1200"></p>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="plot-one-cell-and-its-20-nearest-neighbors" class="level3" data-number="3.8">
<h3 data-number="3.8" class="anchored" data-anchor-id="plot-one-cell-and-its-20-nearest-neighbors"><span class="header-section-number">3.8</span> Plot One Cell and Its 20 Nearest Neighbors</h3>
<p>For this plot, we select one cell of interest and plot it along with its 20 nearest neighbors, based on the cell centroids.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-10-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-10-1" aria-controls="tabset-10-1" aria-selected="true">R</a></li><li class="nav-item"><a class="nav-link" id="tabset-10-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-10-2" aria-controls="tabset-10-2" aria-selected="false">Python</a></li></ul>
<div class="tab-content">
<div id="tabset-10-1" class="tab-pane active" aria-labelledby="tabset-10-1-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Get cells to plot</span></span>
<span id="cb19-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract cell centroids</span></span>
<span id="cb19-3">xy <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cell_meta[,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CenterX_global_px"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CenterY_global_px"</span>)]</span>
<span id="cb19-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(xy) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cell_meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell_id</span>
<span id="cb19-5"></span>
<span id="cb19-6">neighbors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> FNN<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get.knnx</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> xy, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2-column matrix of xy locations</span></span>
<span id="cb19-7">                           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">query =</span> xy, </span>
<span id="cb19-8">                           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set to one more than target. Value chosen includes the cell itself.</span></span>
<span id="cb19-9"></span>
<span id="cb19-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(neighbors<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>nn.index) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(xy)</span>
<span id="cb19-11"></span>
<span id="cb19-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Select cell of interest</span></span>
<span id="cb19-13">coi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c_1_100_555"</span></span>
<span id="cb19-14"></span>
<span id="cb19-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract neighboring cells</span></span>
<span id="cb19-16">neighboring_cells <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(neighbors<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>nn.index)[neighbors<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>nn.index[coi,]]</span>
<span id="cb19-17"></span>
<span id="cb19-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add cell type to polygons</span></span>
<span id="cb19-19">plot.df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cell_polygons <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(cell <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(neighboring_cells, coi)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>()</span>
<span id="cb19-20">meta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(cell_meta)</span>
<span id="cb19-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(meta) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell</span>
<span id="cb19-22">plot.df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell_type <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(meta)[plot.df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"leiden_cluster"</span>] </span>
<span id="cb19-23"></span>
<span id="cb19-24"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Set up scale bar</span></span>
<span id="cb19-25">scale_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_scale_bar_r</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x_vals =</span> plot.df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(x_global_px),</span>
<span id="cb19-26">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y_vals =</span>  plot.df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(y_global_px))</span>
<span id="cb19-27"></span>
<span id="cb19-28"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Plot it</span></span>
<span id="cb19-29"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(plot.df,</span>
<span id="cb19-30">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x_global_px, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y_global_px, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> cell,</span>
<span id="cb19-31">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(cell_type), </span>
<span id="cb19-32">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> (cell <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> coi), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Emphasize cell of interest</span></span>
<span id="cb19-33">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> (cell <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> coi))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Emphasize cell of interest</span></span>
<span id="cb19-34">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_polygon</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-35">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_alpha_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TRUE"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FALSE"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-36">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TRUE"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FALSE"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkgrey"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-37">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_npg</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use palette inspired by nature publishing group</span></span>
<span id="cb19-38">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-39">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-40">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cell type"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-41">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-42">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>)  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-43">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-44">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb19-45">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>label</span>
<span id="cb19-46"></span>
<span id="cb19-47"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(out_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltype_polygons_cell20neighbors.png"</span>),</span>
<span id="cb19-48">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in"</span>)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/celltype_polygons_cell20neighbors.png" class="img-fluid figure-img" width="600"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-10-2" class="tab-pane" aria-labelledby="tabset-10-2-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract cell centroids</span></span>
<span id="cb20-2">xy <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_meta[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CenterX_global_px'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CenterY_global_px'</span>]].values</span>
<span id="cb20-3"></span>
<span id="cb20-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find nearest neighbors</span></span>
<span id="cb20-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#nbrs = sklearn.neighbors.NearestNeighbors(n_neighbors=21).fit(xy)</span></span>
<span id="cb20-6">nbrs <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NearestNeighbors(n_neighbors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">21</span>).fit(xy)</span>
<span id="cb20-7">distances, indices <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nbrs.kneighbors(xy)</span>
<span id="cb20-8"></span>
<span id="cb20-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Select cell of interest</span></span>
<span id="cb20-10">coi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'c_1_100_555'</span></span>
<span id="cb20-11">coi_index <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_meta[cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell_id'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> coi].index[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb20-12"></span>
<span id="cb20-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract neighboring cells</span></span>
<span id="cb20-14">neighboring_cells <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_meta.iloc[indices[coi_index]].cell_id.values</span>
<span id="cb20-15"></span>
<span id="cb20-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add cell type to polygons</span></span>
<span id="cb20-17">plot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_polygons[cell_polygons[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell'</span>].isin(neighboring_cells)]</span>
<span id="cb20-18">plot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_df.merge(cell_meta[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell_id'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'leiden_cluster'</span>]], left_on<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell'</span>, right_on<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell_id'</span>)</span>
<span id="cb20-19">plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'alpha'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.where(plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> coi, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>)</span>
<span id="cb20-20"></span>
<span id="cb20-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up color mapping</span></span>
<span id="cb20-22">unique_clusters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"leiden_cluster"</span>].dropna().unique())</span>
<span id="cb20-23">cmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.cm.get_cmap(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Accent"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(unique_clusters)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Matplotlib's accent color palette</span></span>
<span id="cb20-24">cluster_to_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {cluster: cmap(i) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, cluster <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(unique_clusters)}</span>
<span id="cb20-25"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"leiden_cluster"</span>].isna().<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">any</span>():</span>
<span id="cb20-26">  cluster_to_color[np.nan] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span></span>
<span id="cb20-27"></span>
<span id="cb20-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Plot</span></span>
<span id="cb20-29">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb20-30"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> key, group <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> plot_df.groupby(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell"</span>):</span>
<span id="cb20-31">    cell_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> group[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"leiden_cluster"</span>].iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb20-32">    alpha <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> group[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"alpha"</span>].iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb20-33">    edge_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> group[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell"</span>].iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> coi <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'darkgrey'</span></span>
<span id="cb20-34">    fill_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cluster_to_color[np.nan] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> pd.isna(cell_type) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> cluster_to_color[cell_type]</span>
<span id="cb20-35">    coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> group[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x_global_px"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y_global_px"</span>]].values</span>
<span id="cb20-36">    coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.vstack([coords, coords[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># close the polygon</span></span>
<span id="cb20-37">    ax.fill(coords[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], coords[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], facecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>fill_color, edgecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>edge_color, alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>alpha, zorder <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb20-38"></span>
<span id="cb20-39">ax.set_aspect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'equal'</span>)</span>
<span id="cb20-40">ax.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'off'</span>)</span>
<span id="cb20-41"></span>
<span id="cb20-42"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add scale bar</span></span>
<span id="cb20-43">make_scale_bar_py(ax, plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x_global_px"</span>], plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y_global_px"</span>])</span>
<span id="cb20-44"></span>
<span id="cb20-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Legend for fill colors</span></span>
<span id="cb20-46">legend_handles <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb20-47">    mpatches.Patch(</span>
<span id="cb20-48">      color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color, </span>
<span id="cb20-49">      label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Cluster </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(cluster)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> pd.notna(cluster) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cluster NA"</span>)</span>
<span id="cb20-50">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> cluster, color <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> cluster_to_color.items()</span>
<span id="cb20-51">]</span>
<span id="cb20-52"></span>
<span id="cb20-53">ax.legend(handles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>legend_handles, title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cell type"</span>, bbox_to_anchor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.05</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'upper left'</span>)</span>
<span id="cb20-54"></span>
<span id="cb20-55">plt.tight_layout()</span>
<span id="cb20-56">plt.savefig(os.path.join(out_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"python_celltype_polygons_cell20neighbors.png"</span>), bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>, pad_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>)</span>
<span id="cb20-57">plt.close()</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_celltype_polygons_cell20neighbors.png" class="img-fluid figure-img" width="852"></p>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="plot-one-cell-in-its-neighborhood" class="level3" data-number="3.9">
<h3 data-number="3.9" class="anchored" data-anchor-id="plot-one-cell-in-its-neighborhood"><span class="header-section-number">3.9</span> Plot one cell in its neighborhood</h3>
<p>Sometimes, plotting a single cell alongside its x nearest neighbors can give a misleading impression, making it seem like the cells are isolated, even when they’re actually part of a densely packed region. A more spatially accurate alternative is to visualize a square section of tissue centered on a cell of interest.</p>
<p>To do this, we first select all cells within a broader radius to ensure complete polygon shapes are captured. Then, we trim the plot to display only a smaller, focused square around the target cell. This approach preserves spatial context while highlighting the local environment.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-11-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-11-1" aria-controls="tabset-11-1" aria-selected="true">R</a></li><li class="nav-item"><a class="nav-link" id="tabset-11-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-11-2" aria-controls="tabset-11-2" aria-selected="false">Python</a></li></ul>
<div class="tab-content">
<div id="tabset-11-1" class="tab-pane active" aria-labelledby="tabset-11-1-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Get cells to plot</span></span>
<span id="cb21-2"></span>
<span id="cb21-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Conversion factor for commercial CosMx instrument.</span></span>
<span id="cb21-4">microns_per_pixel <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.12028</span></span>
<span id="cb21-5"></span>
<span id="cb21-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Select cell of interest</span></span>
<span id="cb21-7">coi <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c_1_100_555"</span></span>
<span id="cb21-8"></span>
<span id="cb21-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set square edge size in microns and pixels</span></span>
<span id="cb21-10">square_edge_um <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb21-11">square_edge_px <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> square_edge_um <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> microns_per_pixel</span>
<span id="cb21-12"></span>
<span id="cb21-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract large square boundaries, double the width and height of target, centered on coi</span></span>
<span id="cb21-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Ensures that we're not cutting through a cell</span></span>
<span id="cb21-15">coi_x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cell_polygons <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(cell <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> coi) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(x_global_px) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>()</span>
<span id="cb21-16">coi_y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cell_polygons <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(cell <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> coi) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(y_global_px) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">median</span>()</span>
<span id="cb21-17">plot.df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cell_polygons <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(</span>
<span id="cb21-18">  x_global_px <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> (coi_x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> square_edge_px),</span>
<span id="cb21-19">   x_global_px <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> (coi_x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> square_edge_px),</span>
<span id="cb21-20">   y_global_px <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> (coi_y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> square_edge_px),</span>
<span id="cb21-21">   y_global_px <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> (coi_y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> square_edge_px)</span>
<span id="cb21-22">)</span>
<span id="cb21-23"></span>
<span id="cb21-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add cell type to polygons</span></span>
<span id="cb21-25">meta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(cell_meta)</span>
<span id="cb21-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(meta) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell</span>
<span id="cb21-27">plot.df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell_type <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(meta)[plot.df<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"leiden_cluster"</span>] </span>
<span id="cb21-28"></span>
<span id="cb21-29"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Set up scale bar, adding min / max values directly because we'll be showing a subset of the data</span></span>
<span id="cb21-30">scale_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_scale_bar_r</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x_vals =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(coi_x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> square_edge_px<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, coi_x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> square_edge_px<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>),</span>
<span id="cb21-31">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y_vals =</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(coi_y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> square_edge_px<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, coi_y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> square_edge_px<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))</span>
<span id="cb21-32"></span>
<span id="cb21-33"></span>
<span id="cb21-34"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Plot it</span></span>
<span id="cb21-35"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(plot.df,</span>
<span id="cb21-36">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x_global_px, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y_global_px, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> cell,</span>
<span id="cb21-37">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(cell_type), </span>
<span id="cb21-38">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> (cell <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> coi), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Emphasize cell of interest</span></span>
<span id="cb21-39">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> (cell <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> coi))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Emphasize cell of interest</span></span>
<span id="cb21-40">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_polygon</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-41">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_alpha_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TRUE"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FALSE"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-42">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TRUE"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"black"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FALSE"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkgrey"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-43">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_d3</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">palette =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"category20c"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Inspired by colors in the D3 visualization library</span></span>
<span id="cb21-44">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-45">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cell type"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-46">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-47">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>)  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-48">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set reduced coordinates</span></span>
<span id="cb21-49">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ratio =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb21-50">              <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(coi_x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> square_edge_px<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, coi_x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> square_edge_px<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>), </span>
<span id="cb21-51">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylim=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(coi_y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> square_edge_px<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, coi_y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> square_edge_px<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-52">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-53">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-54">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>label</span>
<span id="cb21-55"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(out_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltype_polygons_cell100umsquare.png"</span>),</span>
<span id="cb21-56">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in"</span>)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/celltype_polygons_cell100umsquare.png" class="img-fluid figure-img" width="900"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-11-2" class="tab-pane" aria-labelledby="tabset-11-2-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb22-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Constants</span></span>
<span id="cb22-2">microns_per_pixel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.12028</span></span>
<span id="cb22-3">coi <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"c_1_100_555"</span></span>
<span id="cb22-4">square_edge_um <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb22-5">square_edge_px <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> square_edge_um <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> microns_per_pixel</span>
<span id="cb22-6"></span>
<span id="cb22-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Compute centroid of cell of interest</span></span>
<span id="cb22-8">coi_data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_polygons[cell_polygons[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> coi]</span>
<span id="cb22-9">coi_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> coi_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x_global_px'</span>].median()</span>
<span id="cb22-10">coi_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> coi_data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y_global_px'</span>].median()</span>
<span id="cb22-11"></span>
<span id="cb22-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Filter polygons within square region</span></span>
<span id="cb22-13">plot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_polygons[</span>
<span id="cb22-14">    (cell_polygons[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x_global_px'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> (coi_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> square_edge_px)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb22-15">    (cell_polygons[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x_global_px'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> (coi_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> square_edge_px)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb22-16">    (cell_polygons[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y_global_px'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> (coi_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> square_edge_px)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb22-17">    (cell_polygons[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y_global_px'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> (coi_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> square_edge_px))</span>
<span id="cb22-18">].copy()</span>
<span id="cb22-19"></span>
<span id="cb22-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add cell type</span></span>
<span id="cb22-21">meta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_meta.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell'</span>)</span>
<span id="cb22-22">plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell_type'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'leiden_cluster'</span>])</span>
<span id="cb22-23"></span>
<span id="cb22-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up color mapping</span></span>
<span id="cb22-25">unique_clusters <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_type"</span>].dropna().unique())</span>
<span id="cb22-26">cmap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.cm.get_cmap(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tab20b"</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(unique_clusters)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Matplotlib's tab20b palette</span></span>
<span id="cb22-27">cluster_to_color <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {cluster: cmap(i) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, cluster <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(unique_clusters)}</span>
<span id="cb22-28"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_type"</span>].isna().<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">any</span>():</span>
<span id="cb22-29">  cluster_to_color[np.nan] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span></span>
<span id="cb22-30"></span>
<span id="cb22-31"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plotting</span></span>
<span id="cb22-32">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb22-33"></span>
<span id="cb22-34"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Group by cell to draw polygons</span></span>
<span id="cb22-35"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> cell_id, group <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> plot_df.groupby(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell'</span>):</span>
<span id="cb22-36">    cell_type <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> group[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_type"</span>].iloc[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb22-37">    coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> group[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x_global_px'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y_global_px'</span>]].values</span>
<span id="cb22-38">    polygon <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mpatches.Polygon(coords, closed<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>,</span>
<span id="cb22-39">                      facecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cluster_to_color[np.nan] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> pd.isna(cell_type) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> cluster_to_color[cell_type],</span>
<span id="cb22-40">                      edgecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> cell_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> coi <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'darkgrey'</span>,</span>
<span id="cb22-41">                      alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.0</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> cell_id <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> coi <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>)</span>
<span id="cb22-42">    ax.add_patch(polygon)</span>
<span id="cb22-43">    </span>
<span id="cb22-44"></span>
<span id="cb22-45"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add scale bar, setting up arrays that are the axis limits since we'll be reducing the plotting window</span></span>
<span id="cb22-46">make_scale_bar_py(ax, np.array([coi_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> square_edge_px <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, coi_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> square_edge_px <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]), np.array([coi_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> square_edge_px <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, coi_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> square_edge_px <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]))  </span>
<span id="cb22-47"></span>
<span id="cb22-48"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set plot limits and aspect</span></span>
<span id="cb22-49">ax.set_xlim(coi_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> square_edge_px <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, coi_x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> square_edge_px <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb22-50">ax.set_ylim(coi_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> square_edge_px <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, coi_y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> square_edge_px <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb22-51">ax.set_aspect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'equal'</span>)</span>
<span id="cb22-52">ax.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'off'</span>)</span>
<span id="cb22-53"></span>
<span id="cb22-54"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Legend for fill colors with only colors in the visible region</span></span>
<span id="cb22-55"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get current axis limits</span></span>
<span id="cb22-56">xlim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.get_xlim()</span>
<span id="cb22-57">ylim <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.get_ylim()</span>
<span id="cb22-58"></span>
<span id="cb22-59"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Identify cells whose polygons fall within the visible region</span></span>
<span id="cb22-60">visible_cells <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plot_df[</span>
<span id="cb22-61">    (plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x_global_px'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> xlim[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> (plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x_global_px'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> xlim[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span></span>
<span id="cb22-62">    (plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y_global_px'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;=</span> ylim[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> (plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y_global_px'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;=</span> ylim[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb22-63">]</span>
<span id="cb22-64"></span>
<span id="cb22-65"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get unique visible cell types</span></span>
<span id="cb22-66">visible_cell_types <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> visible_cells[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell_type'</span>].dropna().unique().tolist()</span>
<span id="cb22-67"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> visible_cells[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell_type'</span>].isna().<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">any</span>():</span>
<span id="cb22-68">    visible_cell_types.append(np.nan)</span>
<span id="cb22-69"></span>
<span id="cb22-70"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Filter legend handles to only include visible cell types</span></span>
<span id="cb22-71">legend_handles <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb22-72">    mpatches.Patch(</span>
<span id="cb22-73">        color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color,</span>
<span id="cb22-74">        label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Cluster </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(cluster)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> pd.notna(cluster) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cluster NA"</span></span>
<span id="cb22-75">    )</span>
<span id="cb22-76">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> cluster, color <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> cluster_to_color.items()</span>
<span id="cb22-77">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> cluster <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> visible_cell_types</span>
<span id="cb22-78">]</span>
<span id="cb22-79"></span>
<span id="cb22-80"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add the filtered legend</span></span>
<span id="cb22-81">ax.legend(handles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>legend_handles, title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cell type"</span>, bbox_to_anchor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.05</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>), loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'upper left'</span>)</span>
<span id="cb22-82"></span>
<span id="cb22-83"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save figure</span></span>
<span id="cb22-84">plt.tight_layout()</span>
<span id="cb22-85">plt.savefig(os.path.join(out_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"python_celltype_polygons_cell100umsquare.png"</span>), dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>)</span>
<span id="cb22-86">plt.close()</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_celltype_polygons_cell100umsquare.png" class="img-fluid figure-img" width="884"></p>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="overlay-specific-transcripts" class="level3" data-number="3.10">
<h3 data-number="3.10" class="anchored" data-anchor-id="overlay-specific-transcripts"><span class="header-section-number">3.10</span> Overlay Specific Transcripts</h3>
<p>Add transcripts of interest (e.g., <code>KRT8</code>) as points.</p>
<div class="callout callout-style-default callout-warning callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Transcript File Performance Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>Reading the full transcript file into memory can be computationally intensive, especially if you’re only interested in a subset of transcripts for plotting.</p>
<p>Instead of loading the entire file, here we filter the relevant lines using a shell command before importing them into R with <code>fread()</code> or into Python. This can significantly reduce load time although with a large dataset it still may take a few minutes.</p>
<p>For even better performance in future workflows, you might convert the transcript file to a more efficient format like <strong>Parquet</strong>, which supports faster reads and selective column access.</p>
</div>
</div>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-12-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-12-1" aria-controls="tabset-12-1" aria-selected="true">R</a></li><li class="nav-item"><a class="nav-link" id="tabset-12-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-12-2" aria-controls="tabset-12-2" aria-selected="false">Python</a></li></ul>
<div class="tab-content">
<div id="tabset-12-1" class="tab-pane active" aria-labelledby="tabset-12-1-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Read in transcripts</span></span>
<span id="cb23-2"></span>
<span id="cb23-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define your file name as a variable</span></span>
<span id="cb23-4">file_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(raw_data_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/"</span>, slide_name, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_tx_file.csv.gz"</span>)</span>
<span id="cb23-5"></span>
<span id="cb23-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Construct the shell command using sprintf</span></span>
<span id="cb23-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fov is in column 1 and target is in column 9</span></span>
<span id="cb23-8">cmd <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sprintf</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"zcat %s | awk -F',' 'NR==1 || ($1==</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">100</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;"> &amp;&amp; $9==</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">KRT8</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\"</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">)'"</span>, file_name)</span>
<span id="cb23-9"></span>
<span id="cb23-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read the filtered tx data</span></span>
<span id="cb23-11">filtered_tx <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fread</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cmd =</span> cmd)</span>
<span id="cb23-12"></span>
<span id="cb23-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Set up scale bar</span></span>
<span id="cb23-14">scale_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_scale_bar_r</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x_vals =</span> cell_polygons <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(fov <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(x_global_px),</span>
<span id="cb23-15">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y_vals =</span>  cell_polygons <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(fov <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(y_global_px))</span>
<span id="cb23-16"></span>
<span id="cb23-17"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Plot it</span></span>
<span id="cb23-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(cell_polygons <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(fov <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>),</span>
<span id="cb23-19">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x_global_px, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y_global_px, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">group =</span> cell)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_polygon</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkgrey"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">linewidth =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> filtered_tx, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x_global_px, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y_global_px), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Overlay transcript points</span></span>
<span id="cb23-22">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-23">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>()  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-25">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-26">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb23-27">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>label</span>
<span id="cb23-28">  </span>
<span id="cb23-29"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(out_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"polygons_singleFOV_singleTx.png"</span>),</span>
<span id="cb23-30">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in"</span>)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/polygons_singleFOV_singleTx.png" class="img-fluid figure-img" width="900"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-12-2" class="tab-pane" aria-labelledby="tabset-12-2-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define your file name as a variable</span></span>
<span id="cb24-2">file_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Path(raw_data_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>slide_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">_tx_file.csv.gz"</span>)</span>
<span id="cb24-3"></span>
<span id="cb24-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Construct the shell command using sprintf</span></span>
<span id="cb24-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># fov is in column 1 and target is in column 9</span></span>
<span id="cb24-6">cmd <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"zcat </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>file_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> | awk -F',' 'NR==1 || ($1==</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\"</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">100</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\"</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> &amp;&amp; $9==</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\"</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">KRT8</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\"</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">)'"</span></span>
<span id="cb24-7"></span>
<span id="cb24-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run the command and capture output</span></span>
<span id="cb24-9">result <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> subprocess.run(cmd, shell<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, stdout<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>subprocess.PIPE, text<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb24-10"></span>
<span id="cb24-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read the filtered result into a DataFrame</span></span>
<span id="cb24-12">filtered_tx <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(io.StringIO(result.stdout))</span>
<span id="cb24-13"></span>
<span id="cb24-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Filter cell polygons to focus on one fov</span></span>
<span id="cb24-15">plot_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_polygons[cell_polygons[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fov"</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>]</span>
<span id="cb24-16"></span>
<span id="cb24-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot</span></span>
<span id="cb24-18">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>))</span>
<span id="cb24-19"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> _, group <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> plot_df.groupby(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell"</span>):</span>
<span id="cb24-20">    coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> group[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x_global_px"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y_global_px"</span>]].values</span>
<span id="cb24-21">    coords <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.vstack([coords, coords[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># close the polygon</span></span>
<span id="cb24-22">    ax.fill(coords[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], coords[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>], facecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lightgrey"</span>, edgecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkgrey"</span>, linewidth<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb24-23"></span>
<span id="cb24-24"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Overlay transcript dots</span></span>
<span id="cb24-25">ax.scatter(filtered_tx[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x_global_px"</span>], filtered_tx[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y_global_px"</span>], color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb24-26"></span>
<span id="cb24-27">ax.set_aspect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'equal'</span>, adjustable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'box'</span>)</span>
<span id="cb24-28">ax.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'off'</span>)</span>
<span id="cb24-29"></span>
<span id="cb24-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add scale bar</span></span>
<span id="cb24-31">make_scale_bar_py(ax, plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x_global_px"</span>], plot_df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y_global_px"</span>])</span>
<span id="cb24-32"></span>
<span id="cb24-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save</span></span>
<span id="cb24-34">plt.savefig(os.path.join(out_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"python_polygons_singleFOV_singleTx.png"</span>), bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>, pad_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>)</span>
<span id="cb24-35">plt.close()</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_polygons_singleFOV_singleTx.png" class="img-fluid figure-img" width="462"></p>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
</section>
<section id="qc-module-visualizations" class="level2" data-number="4">
<h2 data-number="4" class="anchored" data-anchor-id="qc-module-visualizations"><span class="header-section-number">4</span> QC Module Visualizations</h2>
<p>Here we generate plots to visualize many of the metrics output by the <a href="https://github.com/Nanostring-Biostats/CosMxDACustomModules/tree/main/RNAQCPlots" target="_blank">RNAQC plots module</a> for AtoMx SIP.</p>
<p>We start by reading in the outputs of this module for use in multiple of the plots in this section. We also add one more column, SNR, which we calculate as mean transcripts per plex / mean negative probes per plex.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-13-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-13-1" aria-controls="tabset-13-1" aria-selected="true">R</a></li><li class="nav-item"><a class="nav-link" id="tabset-13-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-13-2" aria-controls="tabset-13-2" aria-selected="false">Python</a></li></ul>
<div class="tab-content">
<div id="tabset-13-1" class="tab-pane active" aria-labelledby="tabset-13-1-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1">qc <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">read.csv</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(raw_data_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Per_FOV_data_quality_metrics.csv"</span>), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For convenience, we assume this is stored in the same directory as the flat files.</span></span>
<span id="cb25-2">               <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb25-3"></span>
<span id="cb25-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up plex for this dataset</span></span>
<span id="cb25-5">dataset_plex <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18935</span></span>
<span id="cb25-6"></span>
<span id="cb25-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add per FOV SNR</span></span>
<span id="cb25-8">qc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>SNR_Per_FOV <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (qc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Mean_Transcripts_Per_Cell_Per_FOV <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> dataset_plex) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> qc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>Mean_Negative_Probe_Per_Plex_Per_Cell_Per_FOV</span></code></pre></div>
</details>
</div>
</div>
<div id="tabset-13-2" class="tab-pane" aria-labelledby="tabset-13-2-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb26-1">qc <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.read_csv(Path(raw_data_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Per_FOV_data_quality_metrics.csv"</span>), index_col<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># For convenience, we assume this is stored in the same directory as the flat files.</span></span>
<span id="cb26-2"></span>
<span id="cb26-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up plex for this dataset</span></span>
<span id="cb26-4">dataset_plex <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18935</span></span>
<span id="cb26-5"></span>
<span id="cb26-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add per FOV SNR</span></span>
<span id="cb26-7">qc[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'SNR_Per_FOV'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (qc[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mean_Transcripts_Per_Cell_Per_FOV'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> dataset_plex) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> qc[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Mean_Negative_Probe_Per_Plex_Per_Cell_Per_FOV'</span>]</span></code></pre></div>
</details>
</div>
</div>
</div>
</div>
<section id="distribution-of-qc-metrics" class="level3" data-number="4.1">
<h3 data-number="4.1" class="anchored" data-anchor-id="distribution-of-qc-metrics"><span class="header-section-number">4.1</span> Distribution of QC Metrics</h3>
<p>Histograms showing the distribution for each per FOV metric.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-16-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-16-1" aria-controls="tabset-16-1" aria-selected="true">R</a></li><li class="nav-item"><a class="nav-link" id="tabset-16-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-16-2" aria-controls="tabset-16-2" aria-selected="false">Python</a></li></ul>
<div class="tab-content">
<div id="tabset-16-1" class="tab-pane active" aria-labelledby="tabset-16-1-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb27" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb27-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract fov metric columns to plot</span></span>
<span id="cb27-2">fov_metrics <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Per_FOV"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(qc), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb27-3"></span>
<span id="cb27-4"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span>(fov_metric <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> fov_metrics){</span>
<span id="cb27-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(qc, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get</span>(fov_metric))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-6">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_histogram</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">bins =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"steelblue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"white"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-7">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-8">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>, fov_metric)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-9">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.x=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb27-10">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Number of FOVs"</span>)</span>
<span id="cb27-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(out_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/Histogram_qc_"</span>, fov_metric, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".png"</span>),</span>
<span id="cb27-12">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in"</span>)</span>
<span id="cb27-13">}</span></code></pre></div>
</details>
</div>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-14-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-14-1" aria-controls="tabset-14-1" aria-selected="true">Mean_Negative_Probe_Per_Plex_Per_Cell_Per_FOV</a></li><li class="nav-item"><a class="nav-link" id="tabset-14-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-14-2" aria-controls="tabset-14-2" aria-selected="false">Mean_SystemControl_Per_Plex_Per_Cell_Per_FOV</a></li><li class="nav-item"><a class="nav-link" id="tabset-14-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-14-3" aria-controls="tabset-14-3" aria-selected="false">Mean_Transcripts_Per_Cell_Per_FOV</a></li><li class="nav-item"><a class="nav-link" id="tabset-14-4-tab" data-bs-toggle="tab" data-bs-target="#tabset-14-4" aria-controls="tabset-14-4" aria-selected="false">Mean_Unique_Transcripts_Per_Cell_Per_FOV</a></li><li class="nav-item"><a class="nav-link" id="tabset-14-5-tab" data-bs-toggle="tab" data-bs-target="#tabset-14-5" aria-controls="tabset-14-5" aria-selected="false">Number_Cells_Per_FOV</a></li><li class="nav-item"><a class="nav-link" id="tabset-14-6-tab" data-bs-toggle="tab" data-bs-target="#tabset-14-6" aria-controls="tabset-14-6" aria-selected="false">SNR_Per_FOV</a></li><li class="nav-item"><a class="nav-link" id="tabset-14-7-tab" data-bs-toggle="tab" data-bs-target="#tabset-14-7" aria-controls="tabset-14-7" aria-selected="false">Total_Transcripts_Per_FOV</a></li></ul>
<div class="tab-content">
<div id="tabset-14-1" class="tab-pane active" aria-labelledby="tabset-14-1-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/Histogram_qc_Mean_Negative_Probe_Per_Plex_Per_Cell_Per_FOV.png" class="img-fluid figure-img" width="1200"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-14-2" class="tab-pane" aria-labelledby="tabset-14-2-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/Histogram_qc_Mean_SystemControl_Per_Plex_Per_Cell_Per_FOV.png" class="img-fluid figure-img" width="1200"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-14-3" class="tab-pane" aria-labelledby="tabset-14-3-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/Histogram_qc_Mean_Transcripts_Per_Cell_Per_FOV.png" class="img-fluid figure-img" width="1200"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-14-4" class="tab-pane" aria-labelledby="tabset-14-4-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/Histogram_qc_Mean_Unique_Transcripts_Per_Cell_Per_FOV.png" class="img-fluid figure-img" width="1200"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-14-5" class="tab-pane" aria-labelledby="tabset-14-5-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/Histogram_qc_Number_Cells_Per_FOV.png" class="img-fluid figure-img" width="1200"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-14-6" class="tab-pane" aria-labelledby="tabset-14-6-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/Histogram_qc_SNR_Per_FOV.png" class="img-fluid figure-img" width="1200"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-14-7" class="tab-pane" aria-labelledby="tabset-14-7-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/Histogram_qc_Total_Transcripts_Per_FOV.png" class="img-fluid figure-img" width="1200"></p>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div id="tabset-16-2" class="tab-pane" aria-labelledby="tabset-16-2-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb28-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract FOV metric columns</span></span>
<span id="cb28-2">fov_metrics <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [col <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> col <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> qc.columns <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Per_FOV'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> col]</span>
<span id="cb28-3"></span>
<span id="cb28-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Generate histograms</span></span>
<span id="cb28-5"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> fov_metric <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> fov_metrics:</span>
<span id="cb28-6">    plt.figure(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb28-7">    plt.hist(qc[fov_metric].dropna(), bins<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'steelblue'</span>, edgecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>)</span>
<span id="cb28-8">    plt.title(fov_metric.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>))</span>
<span id="cb28-9">    plt.xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>)</span>
<span id="cb28-10">    plt.ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Number of FOVs'</span>)</span>
<span id="cb28-11">    plt.tight_layout()</span>
<span id="cb28-12">    plt.savefig(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>out_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/python_Histogram_qc_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>fov_metric<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.png"</span>, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>)</span>
<span id="cb28-13">    plt.close()</span></code></pre></div>
</details>
</div>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-15-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-15-1" aria-controls="tabset-15-1" aria-selected="true">Mean_Negative_Probe_Per_Plex_Per_Cell_Per_FOV</a></li><li class="nav-item"><a class="nav-link" id="tabset-15-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-15-2" aria-controls="tabset-15-2" aria-selected="false">Mean_SystemControl_Per_Plex_Per_Cell_Per_FOV</a></li><li class="nav-item"><a class="nav-link" id="tabset-15-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-15-3" aria-controls="tabset-15-3" aria-selected="false">Mean_Transcripts_Per_Cell_Per_FOV</a></li><li class="nav-item"><a class="nav-link" id="tabset-15-4-tab" data-bs-toggle="tab" data-bs-target="#tabset-15-4" aria-controls="tabset-15-4" aria-selected="false">Mean_Unique_Transcripts_Per_Cell_Per_FOV</a></li><li class="nav-item"><a class="nav-link" id="tabset-15-5-tab" data-bs-toggle="tab" data-bs-target="#tabset-15-5" aria-controls="tabset-15-5" aria-selected="false">Number_Cells_Per_FOV</a></li><li class="nav-item"><a class="nav-link" id="tabset-15-6-tab" data-bs-toggle="tab" data-bs-target="#tabset-15-6" aria-controls="tabset-15-6" aria-selected="false">SNR_Per_FOV</a></li><li class="nav-item"><a class="nav-link" id="tabset-15-7-tab" data-bs-toggle="tab" data-bs-target="#tabset-15-7" aria-controls="tabset-15-7" aria-selected="false">Total_Transcripts_Per_FOV</a></li></ul>
<div class="tab-content">
<div id="tabset-15-1" class="tab-pane active" aria-labelledby="tabset-15-1-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_Histogram_qc_Mean_Negative_Probe_Per_Plex_Per_Cell_Per_FOV.png" class="img-fluid figure-img" width="1500"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-15-2" class="tab-pane" aria-labelledby="tabset-15-2-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_Histogram_qc_Mean_SystemControl_Per_Plex_Per_Cell_Per_FOV.png" class="img-fluid figure-img" width="1500"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-15-3" class="tab-pane" aria-labelledby="tabset-15-3-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_Histogram_qc_Mean_Transcripts_Per_Cell_Per_FOV.png" class="img-fluid figure-img" width="1500"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-15-4" class="tab-pane" aria-labelledby="tabset-15-4-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_Histogram_qc_Mean_Unique_Transcripts_Per_Cell_Per_FOV.png" class="img-fluid figure-img" width="1500"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-15-5" class="tab-pane" aria-labelledby="tabset-15-5-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_Histogram_qc_Number_Cells_Per_FOV.png" class="img-fluid figure-img" width="1500"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-15-6" class="tab-pane" aria-labelledby="tabset-15-6-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_Histogram_qc_SNR_Per_FOV.png" class="img-fluid figure-img" width="1500"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-15-7" class="tab-pane" aria-labelledby="tabset-15-7-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_Histogram_qc_Total_Transcripts_Per_FOV.png" class="img-fluid figure-img" width="1500"></p>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="spatial-visualization-of-per-fov-metrics" class="level3" data-number="4.2">
<h3 data-number="4.2" class="anchored" data-anchor-id="spatial-visualization-of-per-fov-metrics"><span class="header-section-number">4.2</span> Spatial visualization of per FOV metrics</h3>
<p>To help identify spatial patterns in quality control metrics, we generate a spatial plot for each FOV. Each plot includes the FOV number overlaid for easy reference and comparison across the tissue.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-19-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-19-1" aria-controls="tabset-19-1" aria-selected="true">R</a></li><li class="nav-item"><a class="nav-link" id="tabset-19-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-19-2" aria-controls="tabset-19-2" aria-selected="false">Python</a></li></ul>
<div class="tab-content">
<div id="tabset-19-1" class="tab-pane active" aria-labelledby="tabset-19-1-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb29" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb29-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract fov metric columns to plot</span></span>
<span id="cb29-2">fov_metrics <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grep</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Per_FOV"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(qc), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb29-3"></span>
<span id="cb29-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add xy positions for each FOV to qc dataframe</span></span>
<span id="cb29-5">fov_positions <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.data.frame</span>(fov_positions)</span>
<span id="cb29-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">row.names</span>(fov_positions) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(fov_positions<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>FOV)</span>
<span id="cb29-7">qc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x_global_px <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> fov_positions[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(qc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>fov), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x_global_px"</span>]</span>
<span id="cb29-8">qc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>y_global_px <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> fov_positions[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(qc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>fov), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y_global_px"</span>]</span>
<span id="cb29-9"></span>
<span id="cb29-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Set up scale bar for all plots</span></span>
<span id="cb29-11">scale_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_scale_bar_r</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x_vals =</span> qc <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(x_global_px),</span>
<span id="cb29-12">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y_vals =</span>  qc <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pull</span>(y_global_px))</span>
<span id="cb29-13"></span>
<span id="cb29-14"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Plot each per FOV metric in space</span></span>
<span id="cb29-15"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span>(fov_metric <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> fov_metrics){</span>
<span id="cb29-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(qc, </span>
<span id="cb29-17">         <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> x_global_px, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> y_global_px, </span>
<span id="cb29-18">             <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get</span>(fov_metric))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb29-19">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_tile</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4254</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4254</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#CosMx FOVs are 4254x4254 pixels</span></span>
<span id="cb29-20">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_gradient</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">low =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">high =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"magenta"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb29-21">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_label</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">label =</span> fov)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Label each FOV in space</span></span>
<span id="cb29-22">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb29-23">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>, fov_metric),</span>
<span id="cb29-24">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gsub</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" "</span>, fov_metric)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb29-25">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>(),</span>
<span id="cb29-26">          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.title.y =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb29-27">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb29-28">    scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb29-29">    scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb29-30">    scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>label</span>
<span id="cb29-31">    </span>
<span id="cb29-32">  </span>
<span id="cb29-33">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(out_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/XY_qc_"</span>, fov_metric, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">".png"</span>),</span>
<span id="cb29-34">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in"</span>)</span>
<span id="cb29-35">}</span></code></pre></div>
</details>
</div>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-17-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-17-1" aria-controls="tabset-17-1" aria-selected="true">Mean_Negative_Probe_Per_Plex_Per_Cell_Per_FOV</a></li><li class="nav-item"><a class="nav-link" id="tabset-17-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-17-2" aria-controls="tabset-17-2" aria-selected="false">Mean_SystemControl_Per_Plex_Per_Cell_Per_FOV</a></li><li class="nav-item"><a class="nav-link" id="tabset-17-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-17-3" aria-controls="tabset-17-3" aria-selected="false">Mean_Transcripts_Per_Cell_Per_FOV</a></li><li class="nav-item"><a class="nav-link" id="tabset-17-4-tab" data-bs-toggle="tab" data-bs-target="#tabset-17-4" aria-controls="tabset-17-4" aria-selected="false">Mean_Unique_Transcripts_Per_Cell_Per_FOV</a></li><li class="nav-item"><a class="nav-link" id="tabset-17-5-tab" data-bs-toggle="tab" data-bs-target="#tabset-17-5" aria-controls="tabset-17-5" aria-selected="false">Number_Cells_Per_FOV</a></li><li class="nav-item"><a class="nav-link" id="tabset-17-6-tab" data-bs-toggle="tab" data-bs-target="#tabset-17-6" aria-controls="tabset-17-6" aria-selected="false">SNR_Per_FOV</a></li><li class="nav-item"><a class="nav-link" id="tabset-17-7-tab" data-bs-toggle="tab" data-bs-target="#tabset-17-7" aria-controls="tabset-17-7" aria-selected="false">Total_Transcripts_Per_FOV</a></li></ul>
<div class="tab-content">
<div id="tabset-17-1" class="tab-pane active" aria-labelledby="tabset-17-1-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/XY_qc_Mean_Negative_Probe_Per_Plex_Per_Cell_Per_FOV.png" class="img-fluid figure-img" width="1800"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-17-2" class="tab-pane" aria-labelledby="tabset-17-2-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/XY_qc_Mean_SystemControl_Per_Plex_Per_Cell_Per_FOV.png" class="img-fluid figure-img" width="1800"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-17-3" class="tab-pane" aria-labelledby="tabset-17-3-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/XY_qc_Mean_Transcripts_Per_Cell_Per_FOV.png" class="img-fluid figure-img" width="1800"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-17-4" class="tab-pane" aria-labelledby="tabset-17-4-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/XY_qc_Mean_Unique_Transcripts_Per_Cell_Per_FOV.png" class="img-fluid figure-img" width="1800"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-17-5" class="tab-pane" aria-labelledby="tabset-17-5-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/XY_qc_Number_Cells_Per_FOV.png" class="img-fluid figure-img" width="1800"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-17-6" class="tab-pane" aria-labelledby="tabset-17-6-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/XY_qc_SNR_Per_FOV.png" class="img-fluid figure-img" width="1800"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-17-7" class="tab-pane" aria-labelledby="tabset-17-7-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/XY_qc_Total_Transcripts_Per_FOV.png" class="img-fluid figure-img" width="1800"></p>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
<div id="tabset-19-2" class="tab-pane" aria-labelledby="tabset-19-2-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb30-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract FOV metric columns</span></span>
<span id="cb30-2">fov_metrics <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [col <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> col <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> qc.columns <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Per_FOV'</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> col]</span>
<span id="cb30-3"></span>
<span id="cb30-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add xy positions for each FOV to qc dataframe</span></span>
<span id="cb30-5">fov_positions.set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'FOV'</span>, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb30-6">qc[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x_global_px'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> qc[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fov'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(fov_positions[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x_global_px'</span>])</span>
<span id="cb30-7">qc[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y_global_px'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> qc[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fov'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(fov_positions[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y_global_px'</span>])</span>
<span id="cb30-8"></span>
<span id="cb30-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Set up a color scale to use</span></span>
<span id="cb30-10">blue_magenta <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> mcolors.LinearSegmentedColormap.from_list(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue_magenta"</span>, [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"magenta"</span>])</span>
<span id="cb30-11"></span>
<span id="cb30-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot each per FOV metric in space</span></span>
<span id="cb30-13"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> fov_metric <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> fov_metrics:</span>
<span id="cb30-14">    fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>))</span>
<span id="cb30-15">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The 's' parameter indicates the point size and was empirically determined for this dataset.</span></span>
<span id="cb30-16">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># You may need to increase or decrease it to get the boxes to fill the space in other datasets.</span></span>
<span id="cb30-17">    ax.scatter(qc[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x_global_px'</span>], qc[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y_global_px'</span>], c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>qc[fov_metric], cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'coolwarm'</span>, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">700</span>, marker <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"s"</span>)</span>
<span id="cb30-18">    scatter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.scatter(qc[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x_global_px'</span>], qc[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y_global_px'</span>], c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>qc[fov_metric], cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>blue_magenta, s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">700</span>, marker <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"s"</span>)</span>
<span id="cb30-19">    cbar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.colorbar(scatter, ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax)</span>
<span id="cb30-20">    cbar.set_label(fov_metric.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>))</span>
<span id="cb30-21">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> qc.iterrows():</span>
<span id="cb30-22">        ax.text(row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x_global_px'</span>], row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y_global_px'</span>], <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(row[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fov'</span>]), fontsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'center'</span>, va<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'center'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>)</span>
<span id="cb30-23">    ax.set_title(fov_metric.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'_'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">' '</span>))</span>
<span id="cb30-24">    ax.set_aspect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'equal'</span>, adjustable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'box'</span>)</span>
<span id="cb30-25">    ax.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'off'</span>)</span>
<span id="cb30-26">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add scale bar</span></span>
<span id="cb30-27">    make_scale_bar_py(ax, qc[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x_global_px"</span>], qc[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y_global_px"</span>])</span>
<span id="cb30-28">    </span>
<span id="cb30-29">    plt.savefig(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>out_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/python_XY_qc_</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>fov_metric<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">.png"</span>, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>)</span>
<span id="cb30-30">    plt.close()</span></code></pre></div>
</details>
</div>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-18-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-18-1" aria-controls="tabset-18-1" aria-selected="true">Mean_Negative_Probe_Per_Plex_Per_Cell_Per_FOV</a></li><li class="nav-item"><a class="nav-link" id="tabset-18-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-18-2" aria-controls="tabset-18-2" aria-selected="false">Mean_SystemControl_Per_Plex_Per_Cell_Per_FOV</a></li><li class="nav-item"><a class="nav-link" id="tabset-18-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-18-3" aria-controls="tabset-18-3" aria-selected="false">Mean_Transcripts_Per_Cell_Per_FOV</a></li><li class="nav-item"><a class="nav-link" id="tabset-18-4-tab" data-bs-toggle="tab" data-bs-target="#tabset-18-4" aria-controls="tabset-18-4" aria-selected="false">Mean_Unique_Transcripts_Per_Cell_Per_FOV</a></li><li class="nav-item"><a class="nav-link" id="tabset-18-5-tab" data-bs-toggle="tab" data-bs-target="#tabset-18-5" aria-controls="tabset-18-5" aria-selected="false">Number_Cells_Per_FOV</a></li><li class="nav-item"><a class="nav-link" id="tabset-18-6-tab" data-bs-toggle="tab" data-bs-target="#tabset-18-6" aria-controls="tabset-18-6" aria-selected="false">SNR_Per_FOV</a></li><li class="nav-item"><a class="nav-link" id="tabset-18-7-tab" data-bs-toggle="tab" data-bs-target="#tabset-18-7" aria-controls="tabset-18-7" aria-selected="false">Total_Transcripts_Per_FOV</a></li></ul>
<div class="tab-content">
<div id="tabset-18-1" class="tab-pane active" aria-labelledby="tabset-18-1-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_XY_qc_Mean_Negative_Probe_Per_Plex_Per_Cell_Per_FOV.png" class="img-fluid figure-img" width="1800"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-18-2" class="tab-pane" aria-labelledby="tabset-18-2-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_XY_qc_Mean_SystemControl_Per_Plex_Per_Cell_Per_FOV.png" class="img-fluid figure-img" width="1800"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-18-3" class="tab-pane" aria-labelledby="tabset-18-3-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_XY_qc_Mean_Transcripts_Per_Cell_Per_FOV.png" class="img-fluid figure-img" width="1800"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-18-4" class="tab-pane" aria-labelledby="tabset-18-4-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_XY_qc_Mean_Unique_Transcripts_Per_Cell_Per_FOV.png" class="img-fluid figure-img" width="1800"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-18-5" class="tab-pane" aria-labelledby="tabset-18-5-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_XY_qc_Number_Cells_Per_FOV.png" class="img-fluid figure-img" width="1800"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-18-6" class="tab-pane" aria-labelledby="tabset-18-6-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_XY_qc_SNR_Per_FOV.png" class="img-fluid figure-img" width="1800"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-18-7" class="tab-pane" aria-labelledby="tabset-18-7-tab">
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_XY_qc_Total_Transcripts_Per_FOV.png" class="img-fluid figure-img" width="1800"></p>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="qc-metric-by-cell-type" class="level3" data-number="4.3">
<h3 data-number="4.3" class="anchored" data-anchor-id="qc-metric-by-cell-type"><span class="header-section-number">4.3</span> QC Metric by Cell Type</h3>
<p>In addition to the outputs of the QC module, there are a number of QC metrics that can be extracted from the meta data and plotted by cell type. As an example here, we show transcripts per cell separated by cell type.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-20-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-20-1" aria-controls="tabset-20-1" aria-selected="true">R</a></li><li class="nav-item"><a class="nav-link" id="tabset-20-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-20-2" aria-controls="tabset-20-2" aria-selected="false">Python</a></li></ul>
<div class="tab-content">
<div id="tabset-20-1" class="tab-pane active" aria-labelledby="tabset-20-1-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1">cell_meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell_type <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(cell_meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>leiden_cluster)</span>
<span id="cb31-2"></span>
<span id="cb31-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use alphabet palette</span></span>
<span id="cb31-4">my_pal <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pals<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alphabet</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(cell_meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell_type)))</span>
<span id="cb31-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(my_pal) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(cell_meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell_type)</span>
<span id="cb31-6"></span>
<span id="cb31-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(cell_meta, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> cell_type, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> nCount_RNA, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> cell_type)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb31-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_boxplot</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb31-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> my_pal) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb31-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb31-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cell type"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb31-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Transcript counts per cell"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb31-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Transcript Count by Cell Type"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb31-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_y_log10</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb31-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">axis.text.x =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">angle =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">hjust =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb31-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>)</span>
<span id="cb31-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(out_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/BarPlot_qc_txPerCell_cellType.png"</span>),</span>
<span id="cb31-18">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in"</span>)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/BarPlot_qc_txPerCell_cellType.png" class="img-fluid figure-img" width="900"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-20-2" class="tab-pane" aria-labelledby="tabset-20-2-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb32-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert leiden_cluster to string and assign to cell_type</span></span>
<span id="cb32-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fill NaNs with a placeholder (e.g., -1) before converting</span></span>
<span id="cb32-3">cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'leiden_cluster'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'leiden_cluster'</span>].fillna(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb32-4">cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell_type'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'leiden_cluster'</span>].astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>).astype(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>)</span>
<span id="cb32-5"></span>
<span id="cb32-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert NA values back</span></span>
<span id="cb32-7">cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'leiden_cluster'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'leiden_cluster'</span>].replace(<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, np.nan)</span>
<span id="cb32-8">cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell_type'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell_type'</span>].replace({<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'-1'</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Not assigned'</span>})</span>
<span id="cb32-9"></span>
<span id="cb32-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get unique cell types and assign colors</span></span>
<span id="cb32-11">unique_cell_types <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell_type'</span>].unique(), key<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(x) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> x.isdigit() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'inf'</span>))</span>
<span id="cb32-12">colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.cm.get_cmap(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tab20c'</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(unique_cell_types)) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Use tab20c palette</span></span>
<span id="cb32-13">color_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {cell_type: colors(i) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, cell_type <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(unique_cell_types)}</span>
<span id="cb32-14"></span>
<span id="cb32-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Prepare data for boxplot</span></span>
<span id="cb32-16">data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [cell_meta[cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell_type'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> ct][<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nCount_RNA'</span>] <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ct <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> unique_cell_types]</span>
<span id="cb32-17"></span>
<span id="cb32-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the boxplot</span></span>
<span id="cb32-19">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>))</span>
<span id="cb32-20">box <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.boxplot(data, patch_artist<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>, labels<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>unique_cell_types)</span>
<span id="cb32-21"></span>
<span id="cb32-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Apply colors to boxes</span></span>
<span id="cb32-23"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> patch, ct <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(box[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'boxes'</span>], unique_cell_types):</span>
<span id="cb32-24">    patch.set_facecolor(color_dict[ct])</span>
<span id="cb32-25"></span>
<span id="cb32-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Customize plot</span></span>
<span id="cb32-27">ax.set_yscale(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'log'</span>)</span>
<span id="cb32-28">ax.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Cell type'</span>)</span>
<span id="cb32-29">ax.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Transcript counts per cell'</span>)</span>
<span id="cb32-30">ax.set_title(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Transcript Count by Cell Type'</span>)</span>
<span id="cb32-31">plt.xticks(rotation<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">45</span>, ha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'right'</span>)</span>
<span id="cb32-32">plt.legend([], [], frameon<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Remove legend</span></span>
<span id="cb32-33">plt.tight_layout()</span>
<span id="cb32-34"></span>
<span id="cb32-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save the plot</span></span>
<span id="cb32-36">plt.savefig(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>out_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/python_BarPlot_qc_txPerCell_cellType.png"</span>, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>)</span>
<span id="cb32-37">plt.close()</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_BarPlot_qc_txPerCell_cellType.png" class="img-fluid figure-img" width="1800"></p>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="per-cell-qc-metrics-in-space" class="level3" data-number="4.4">
<h3 data-number="4.4" class="anchored" data-anchor-id="per-cell-qc-metrics-in-space"><span class="header-section-number">4.4</span> Per cell QC metrics in space</h3>
<p>Another QC metric in the meta data is whether a cell has been ‘flagged’ by any of the QC steps in AtoMx. We can plot each cell’s ‘qcCellsFlagged’ status in space to look for spatial patterns in the cells get flagged. Keep an eye out for overplotting here, which can lead to the incorrect conclusion that all cells in a region have been lost. We reduce the opacity to counter this impression.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-21-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-21-1" aria-controls="tabset-21-1" aria-selected="true">R</a></li><li class="nav-item"><a class="nav-link" id="tabset-21-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-21-2" aria-controls="tabset-21-2" aria-selected="false">Python</a></li></ul>
<div class="tab-content">
<div id="tabset-21-1" class="tab-pane active" aria-labelledby="tabset-21-1-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Set up scale bar</span></span>
<span id="cb33-2">scale_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_scale_bar_r</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x_vals =</span> cell_meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>CenterX_global_px,</span>
<span id="cb33-3">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y_vals =</span>  cell_meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>CenterY_global_px)</span>
<span id="cb33-4"></span>
<span id="cb33-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Plot it</span></span>
<span id="cb33-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(cell_meta[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">order</span>(cell_meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>qcCellsFlagged),], <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#Ordering plots 'false' cells first</span></span>
<span id="cb33-7">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(CenterX_global_px, CenterY_global_px)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb33-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> qcCellsFlagged), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb33-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#D6DBDF"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#D86769"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb33-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_legend</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">override.aes =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb33-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Flagged"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb33-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb33-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>()  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-14">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-15">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb33-16">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>label</span>
<span id="cb33-17">  </span>
<span id="cb33-18"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(out_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/qc_flaggedCells.png"</span>),</span>
<span id="cb33-19">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in"</span>)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/qc_flaggedCells.png" class="img-fluid figure-img" width="600"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-21-2" class="tab-pane" aria-labelledby="tabset-21-2-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb34-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define color mapping for flagged status</span></span>
<span id="cb34-2">color_map <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#D86769"</span>, <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#D6DBDF"</span>}</span>
<span id="cb34-3"></span>
<span id="cb34-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># To increase the visibility of the flagged cells, we split the data frame and plot the flagged cells second</span></span>
<span id="cb34-5">false_cells <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_meta[cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'qcCellsFlagged'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>]</span>
<span id="cb34-6">true_cells <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_meta[cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'qcCellsFlagged'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>]</span>
<span id="cb34-7"></span>
<span id="cb34-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create the plot</span></span>
<span id="cb34-9">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb34-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cells not flagged</span></span>
<span id="cb34-11">ax.scatter(</span>
<span id="cb34-12">    false_cells[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CenterX_global_px'</span>],</span>
<span id="cb34-13">    false_cells[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CenterY_global_px'</span>],</span>
<span id="cb34-14">    c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>false_cells[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'qcCellsFlagged'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(color_map),</span>
<span id="cb34-15">    s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>,</span>
<span id="cb34-16">    alpha <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb34-17">    zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb34-18">)</span>
<span id="cb34-19"></span>
<span id="cb34-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cells flagged</span></span>
<span id="cb34-21">ax.scatter(</span>
<span id="cb34-22">    true_cells[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CenterX_global_px'</span>],</span>
<span id="cb34-23">    true_cells[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CenterY_global_px'</span>],</span>
<span id="cb34-24">    c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>true_cells[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'qcCellsFlagged'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">map</span>(color_map),</span>
<span id="cb34-25">    s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>,</span>
<span id="cb34-26">    alpha <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>,</span>
<span id="cb34-27">    zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb34-28">)</span>
<span id="cb34-29"></span>
<span id="cb34-30"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add scale bar</span></span>
<span id="cb34-31">make_scale_bar_py(ax, cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CenterX_global_px"</span>], cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CenterY_global_px"</span>])</span>
<span id="cb34-32"></span>
<span id="cb34-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add a legend with larger marker size</span></span>
<span id="cb34-34"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> matplotlib.lines <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Line2D</span>
<span id="cb34-35">legend_elements <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [</span>
<span id="cb34-36">    Line2D([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'w'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'False'</span>,</span>
<span id="cb34-37">           markerfacecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color_map[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span>], markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>),</span>
<span id="cb34-38">    Line2D([<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], [<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>], marker<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'o'</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'w'</span>, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'True'</span>,</span>
<span id="cb34-39">           markerfacecolor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color_map[<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>], markersize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>)</span>
<span id="cb34-40">]</span>
<span id="cb34-41">ax.legend(handles<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>legend_elements, title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Flagged"</span>)</span>
<span id="cb34-42"></span>
<span id="cb34-43"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fix aspect ratio and remove axes</span></span>
<span id="cb34-44">ax.set_aspect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'equal'</span>, adjustable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'box'</span>)</span>
<span id="cb34-45">ax.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'off'</span>)</span>
<span id="cb34-46"></span>
<span id="cb34-47"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Save the plot</span></span>
<span id="cb34-48">plt.savefig(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>out_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/python_qc_flaggedCells.png"</span>, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>)</span>
<span id="cb34-49">plt.close()</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_qc_flaggedCells.png" class="img-fluid figure-img" width="406"></p>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
</section>
<section id="neighborhood-visualizations" class="level2" data-number="5">
<h2 data-number="5" class="anchored" data-anchor-id="neighborhood-visualizations"><span class="header-section-number">5</span> Neighborhood Visualizations</h2>
<p>We cover more extensive cell neighborhood analysis in a <a href="../../posts/cellular-neighborhoods/cellular-neighborhoods.html">dedicated post</a>, but include some summary visualizations here.</p>
<section id="distance-to-nearest-cell-of-type-a" class="level3" data-number="5.1">
<h3 data-number="5.1" class="anchored" data-anchor-id="distance-to-nearest-cell-of-type-a"><span class="header-section-number">5.1</span> Distance to Nearest Cell of Type A</h3>
<p>We find that often we’re interested in examining how close a given cell is to a cell of a certain type, for example how close every cell is to the nearest macrophage. Here we make a spatial plot to show the distance to the nearest macrophage. Based on the marker genes and spatial distribution here we’ll designate unsupervised cell type 3 as macrophage.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-22-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-22-1" aria-controls="tabset-22-1" aria-selected="true">R</a></li><li class="nav-item"><a class="nav-link" id="tabset-22-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-22-2" aria-controls="tabset-22-2" aria-selected="false">Python</a></li></ul>
<div class="tab-content">
<div id="tabset-22-1" class="tab-pane active" aria-labelledby="tabset-22-1-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb35" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb35-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Separate macrophages and other cells</span></span>
<span id="cb35-2">macrophages <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cell_meta <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(leiden_cluster <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(CenterX_global_px, CenterY_global_px)</span>
<span id="cb35-3">all_cells <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cell_meta <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(CenterX_global_px, CenterY_global_px)</span>
<span id="cb35-4"></span>
<span id="cb35-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find nearest macrophage for each cell</span></span>
<span id="cb35-6">nn <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> FNN<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get.knnx</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> macrophages, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">query =</span> all_cells, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb35-7"></span>
<span id="cb35-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract distances</span></span>
<span id="cb35-9">distances <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> nn<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>nn.dist[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]</span>
<span id="cb35-10"></span>
<span id="cb35-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add to original data</span></span>
<span id="cb35-12">cell_meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>nearest_macrophage_distance <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> distances</span>
<span id="cb35-13"></span>
<span id="cb35-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert to distance in microns</span></span>
<span id="cb35-15">microns_per_pixel <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.12028</span></span>
<span id="cb35-16">cell_meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>nearest_macrophage_distance_um <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cell_meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>nearest_macrophage_distance <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> microns_per_pixel</span>
<span id="cb35-17"></span>
<span id="cb35-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># There are a few outliers in distance, so we cap the distance plotted</span></span>
<span id="cb35-19"></span>
<span id="cb35-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Calculate the 90th percentile cap</span></span>
<span id="cb35-21">cap_value <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">quantile</span>(cell_meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>nearest_macrophage_distance_um, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb35-22"></span>
<span id="cb35-23"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cap the values</span></span>
<span id="cb35-24">cell_meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>distance_capped <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pmin</span>(cell_meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>nearest_macrophage_distance_um, cap_value)</span>
<span id="cb35-25"></span>
<span id="cb35-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define breaks and labels</span></span>
<span id="cb35-27">breaks <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pretty</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, cap_value), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb35-28">breaks[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(breaks)] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cap_value</span>
<span id="cb35-29">labels <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(breaks)</span>
<span id="cb35-30">labels[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(labels)] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"&gt; "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">round</span>(cap_value))</span>
<span id="cb35-31"></span>
<span id="cb35-32"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Set up scale bar</span></span>
<span id="cb35-33">scale_bar <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_scale_bar_r</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x_vals =</span> cell_meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>CenterX_global_px,</span>
<span id="cb35-34">                            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y_vals =</span>  cell_meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>CenterY_global_px)</span>
<span id="cb35-35"></span>
<span id="cb35-36"></span>
<span id="cb35-37"></span>
<span id="cb35-38"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Plot it</span></span>
<span id="cb35-39"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(cell_meta,</span>
<span id="cb35-40">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> CenterX_global_px, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> CenterY_global_px,</span>
<span id="cb35-41">           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> distance_capped)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb35-42">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb35-43">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_viridis</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Distance to</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">nearest mac.</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">(µm)"</span>,</span>
<span id="cb35-44">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> breaks,</span>
<span id="cb35-45">                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">labels =</span> labels) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb35-46">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb35-47">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_void</span>()  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb35-48">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>bg <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb35-49">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>rect <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb35-50">  scale_bar<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>label</span>
<span id="cb35-51"></span>
<span id="cb35-52"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(out_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nearest_cell.png"</span>),</span>
<span id="cb35-53">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in"</span>)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/nearest_cell.png" class="img-fluid figure-img" style="width:30.0%"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-22-2" class="tab-pane" aria-labelledby="tabset-22-2-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb36-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Separate macrophages and all cells</span></span>
<span id="cb36-2">macrophages <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_meta[cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'leiden_cluster'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>][[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CenterX_global_px'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CenterY_global_px'</span>]]</span>
<span id="cb36-3">all_cells <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_meta[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CenterX_global_px'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CenterY_global_px'</span>]]</span>
<span id="cb36-4"></span>
<span id="cb36-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find nearest macrophage for each cell</span></span>
<span id="cb36-6">nn_model <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> NearestNeighbors(n_neighbors<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb36-7">nn_model.fit(macrophages)</span>
<span id="cb36-8">distances, _ <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> nn_model.kneighbors(all_cells)</span>
<span id="cb36-9"></span>
<span id="cb36-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add distances to the original DataFrame</span></span>
<span id="cb36-11">cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nearest_macrophage_distance'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> distances[:, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>]</span>
<span id="cb36-12"></span>
<span id="cb36-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Convert to microns</span></span>
<span id="cb36-14">microns_per_pixel <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.12028</span></span>
<span id="cb36-15">cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nearest_macrophage_distance_um'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nearest_macrophage_distance'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> microns_per_pixel</span>
<span id="cb36-16"></span>
<span id="cb36-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Cap the 'nearest_macrophage_distance' at the 90th percentile</span></span>
<span id="cb36-18">cap_value <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nearest_macrophage_distance_um'</span>].quantile(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>)</span>
<span id="cb36-19">cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'distance_capped'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.minimum(cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'nearest_macrophage_distance_um'</span>], cap_value)</span>
<span id="cb36-20"></span>
<span id="cb36-21"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Define breaks and labels similar to R's pretty function</span></span>
<span id="cb36-22">breaks <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> np.linspace(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, cap_value, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb36-23">labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(b)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> b <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> breaks]</span>
<span id="cb36-24">labels[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"&gt; </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(cap_value)<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb36-25"></span>
<span id="cb36-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Plot</span></span>
<span id="cb36-27">fig, ax <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>))</span>
<span id="cb36-28">scatter <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> ax.scatter(</span>
<span id="cb36-29">    cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CenterX_global_px'</span>],</span>
<span id="cb36-30">    cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CenterY_global_px'</span>],</span>
<span id="cb36-31">    c<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'distance_capped'</span>],</span>
<span id="cb36-32">    cmap<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'viridis'</span>,</span>
<span id="cb36-33">    s<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb36-34">    alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>,</span>
<span id="cb36-35">    zorder<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb36-36">)</span>
<span id="cb36-37">cbar <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> fig.colorbar(scatter, ax<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ax, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Distance to</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">nearest mac.</span><span class="ch" style="color: #20794D;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">(µm)'</span>)</span>
<span id="cb36-38">cbar.set_ticks(breaks)</span>
<span id="cb36-39">cbar.set_ticklabels(labels)</span>
<span id="cb36-40">cbar.solids.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">set</span>(alpha<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb36-41">ax.set_aspect(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'equal'</span>, adjustable<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'box'</span>)</span>
<span id="cb36-42">ax.axis(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'off'</span>)</span>
<span id="cb36-43"></span>
<span id="cb36-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add scale bar</span></span>
<span id="cb36-45">make_scale_bar_py(ax, cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CenterX_global_px"</span>], cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CenterY_global_px"</span>])</span>
<span id="cb36-46"></span>
<span id="cb36-47">plt.savefig(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>out_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/python_nearest_cell.png"</span>, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>, bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>)</span>
<span id="cb36-48">plt.close()</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_nearest_cell.png" class="img-fluid figure-img" style="width:30.0%"></p>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="cell-type-composition-by-annotation" class="level3" data-number="5.2">
<h3 data-number="5.2" class="anchored" data-anchor-id="cell-type-composition-by-annotation"><span class="header-section-number">5.2</span> Cell type composition by annotation</h3>
<p>We often want to show the cell type composition within a specific region or across patients. We don’t have multiple patients or slides in this dataset, so instead here we show the cell type composition by groups of FOVs, after splitting the sample into an upper and lower lobe. A more common use might be to show cell type composition by niche, but we have not calculated niches on this dataset.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-23-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-23-1" aria-controls="tabset-23-1" aria-selected="true">R</a></li><li class="nav-item"><a class="nav-link" id="tabset-23-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-23-2" aria-controls="tabset-23-2" aria-selected="false">Python</a></li></ul>
<div class="tab-content">
<div id="tabset-23-1" class="tab-pane active" aria-labelledby="tabset-23-1-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb37" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb37-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add a basic lobe designation for demonstration purposes</span></span>
<span id="cb37-2">cell_meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>lobe <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(cell_meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>CenterY_global_px <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50000</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"upper"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lower"</span>)</span>
<span id="cb37-3"></span>
<span id="cb37-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add FOV group for demonstration similar to niche</span></span>
<span id="cb37-5">cell_meta <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cell_meta <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb37-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fov_group =</span> letters[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ceiling</span>(fov <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)])</span>
<span id="cb37-7"></span>
<span id="cb37-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Use polychrome palette</span></span>
<span id="cb37-9">my_pal <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> pals<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">polychrome</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(cell_meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>leiden_cluster)))</span>
<span id="cb37-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(my_pal) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(cell_meta<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>leiden_cluster)</span>
<span id="cb37-11"></span>
<span id="cb37-12"></span>
<span id="cb37-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot cell composition by niche, split by lobe</span></span>
<span id="cb37-14"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(cell_meta,</span>
<span id="cb37-15">       <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> fov_group, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.factor</span>(leiden_cluster))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb37-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_bar</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fill"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb37-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> my_pal, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cell type"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb37-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>lobe, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"free_x"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb37-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ylab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fraction of cells"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb37-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xlab</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FOV group (niche)"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb37-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_classic</span>()</span>
<span id="cb37-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggsave</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(out_dir, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"/barPlot_cellTypes_annotations.png"</span>),</span>
<span id="cb37-23">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">width =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">8</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">height =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">units =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"in"</span>)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/barPlot_cellTypes_annotations.png" class="img-fluid figure-img" width="1200"></p>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-23-2" class="tab-pane" aria-labelledby="tabset-23-2-tab">
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb38-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add a basic lobe designation for demonstration purposes</span></span>
<span id="cb38-2">cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lobe'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CenterY_global_px'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> y: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'upper'</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> y <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">50000</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lower'</span>)</span>
<span id="cb38-3"></span>
<span id="cb38-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Add FOV group for demonstration similar to niche</span></span>
<span id="cb38-5">cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fov_group'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fov'</span>].<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">apply</span>(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: string.ascii_lowercase[<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(np.ceil(x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb38-6"></span>
<span id="cb38-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get unique cell types and assign colors</span></span>
<span id="cb38-8">unique_cell_types <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_meta[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'leiden_cluster'</span>].unique()</span>
<span id="cb38-9">colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.cm.get_cmap(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tab20'</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(unique_cell_types))</span>
<span id="cb38-10">color_dict <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {cell_type: colors(i) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i, cell_type <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">enumerate</span>(unique_cell_types)}</span>
<span id="cb38-11"></span>
<span id="cb38-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Prepare data</span></span>
<span id="cb38-13">grouped <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> cell_meta.groupby([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lobe'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fov_group'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'leiden_cluster'</span>]).size().reset_index(name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'count'</span>)</span>
<span id="cb38-14">grouped[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fraction'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grouped.groupby([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lobe'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fov_group'</span>])[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'count'</span>].transform(<span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">lambda</span> x: x <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> x.<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sum</span>())</span>
<span id="cb38-15"></span>
<span id="cb38-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Plot</span></span>
<span id="cb38-17">lobes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grouped[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lobe'</span>].unique()</span>
<span id="cb38-18">niches <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grouped[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fov_group'</span>].unique()</span>
<span id="cb38-19">cell_types <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grouped[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'leiden_cluster'</span>].unique()</span>
<span id="cb38-20"></span>
<span id="cb38-21">fig, axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> plt.subplots(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(lobes), figsize<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(lobes), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>), sharey<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb38-22"></span>
<span id="cb38-23"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(lobes) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb38-24">    axes <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [axes]</span>
<span id="cb38-25"></span>
<span id="cb38-26"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ax, lobe <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">zip</span>(axes, lobes):</span>
<span id="cb38-27">    data <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> grouped[grouped[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'lobe'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> lobe]</span>
<span id="cb38-28">    lobe_niches <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">sorted</span>(data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fov_group'</span>].unique())</span>
<span id="cb38-29">    bottom <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> pd.Series(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, index<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>lobe_niches, dtype<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'float64'</span>)</span>
<span id="cb38-30">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> ct <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> cell_types:</span>
<span id="cb38-31">        values <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> data[data[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'leiden_cluster'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> ct].set_index(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fov_group'</span>)[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'fraction'</span>].reindex(lobe_niches, fill_value<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb38-32">        ax.bar(lobe_niches, values.values, bottom<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>bottom[lobe_niches].values, label<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>ct, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>color_dict.get(ct, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#333333'</span>))</span>
<span id="cb38-33">        bottom[lobe_niches] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+=</span> values</span>
<span id="cb38-34">    ax.set_title(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Lobe: </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>lobe<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb38-35">    ax.set_xlabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FOV group (niche)"</span>)</span>
<span id="cb38-36">    ax.set_ylabel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Fraction of cells"</span>)</span>
<span id="cb38-37"></span>
<span id="cb38-38">handles, labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> axes[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>].get_legend_handles_labels()</span>
<span id="cb38-39">labels <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">float</span>(label))) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> label.replace(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'.'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>).isdigit() <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> label <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> label <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> labels]</span>
<span id="cb38-40">fig.legend(handles, labels, title<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Cell type"</span>, bbox_to_anchor<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.02</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>), loc<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'center left'</span>)</span>
<span id="cb38-41"></span>
<span id="cb38-42">plt.tight_layout()</span>
<span id="cb38-43">plt.savefig(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>out_dir<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">/python_barPlot_cellTypes_annotations.png"</span>, bbox_inches<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'tight'</span>, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">300</span>)</span>
<span id="cb38-44">plt.close()</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_barPlot_cellTypes_annotations.png" class="img-fluid figure-img" width="1962"></p>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
</section>
<section id="summary" class="level2" data-number="6">
<h2 data-number="6" class="anchored" data-anchor-id="summary"><span class="header-section-number">6</span> Summary</h2>
<p>This post introduced a suite of visualization techniques for CosMx spatial transcriptomics data starting from flat file inputs. Whether you’re assessing data quality, visualizing spatial structure, or exploring cell interactions, these plots can provide a powerful first look.</p>



</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-Hao2024" class="csl-entry">
Hao, Yuhan, Tim Stuart, Madeline H. Kowalski, Saket Choudhary, Paul Hoffman, Austin Hartman, Avi Srivastava, et al. 2024. <span>“Dictionary Learning for Integrative, Multimodal and Scalable Single-Cell Analysis.”</span> <em>Nature Biotechnology</em> 42 (February): 293–304. <a href="https://doi.org/10.1038/s41587-023-01767-y">https://doi.org/10.1038/s41587-023-01767-y</a>.
</div>
<div id="ref-Palla2022" class="csl-entry">
Palla, Giovanni, Hannah Spitzer, Michal Klein, David Fischer, Anna Christina Schaar, Louis Benedikt Kuemmerle, Sergei Rybakov, et al. 2022. <span>“Squidpy: A Scalable Framework for Spatial Omics Analysis.”</span> <em>Nature Methods</em> 19 (February): 171–78. <a href="https://doi.org/10.1038/s41592-021-01358-2">https://doi.org/10.1038/s41592-021-01358-2</a>.
</div>
</div></section></div> ]]></description>
  <category>visualization</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/</guid>
  <pubDate>Wed, 20 Aug 2025 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/spatial-plotting/figures/python_celltype_polygons_singleFOV.png" medium="image" type="image/png" height="110" width="144"/>
</item>
<item>
  <title>Aligning H&amp;E and CosMx Images in napari</title>
  <dc:creator>Yi Cui</dc:creator>
  <dc:creator>Lidan Wu</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-alignment-tools/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Aligning Hematoxylin and Eosin (H&amp;E) histology with CosMx<sup>®</sup> Spatial Molecular Imager (SMI) data is more than a cosmetic step: it’s turning two complementary modalities into a single, interpretable picture. H&amp;E provides the spatial scaffold which includes tissue boundaries, cell shapes, and histopathology cues, while CosMx adds the multiplexed molecular profile for each cell. When accurately aligned, these layers reinforce each other: structure informs expression, and expression validates structure. However, it’s a common challenge to align these two kinds of images as they often differ in scale, orientation, or position due to variations in acquisition methods.</p>
<p>In this tutorial, we’ll walk through how to effectively align H&amp;E and CosMx images in <a href="https://napari.org/stable/" target="_blank"><code>napari</code></a> with a two-part workflow:</p>
<ol type="1">
<li>first do a quick landmark-based alignment with <a href="https://github.com/jni/affinder/tree/main" target="_blank"><code>affinder</code></a> plugin,</li>
<li>then fine tune with custom transformation widgets <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/tree/Main/_code/napari-alignment-tools" target="_blank"><code>napari_alignment_tools</code></a> for controlled micro-nudges.</li>
</ol>
<p>By the end, you’ll be able to:</p>
<ul>
<li>Load stitched CosMx data and matching H&amp;E images in napari.</li>
<li>Perform coarse alignment with <code>affinder</code> (affine/similarity/euclidean models).</li>
<li>Fine-tune transforms with intuitive widgets <code>napari_alignment_tools</code> for pixel-level adjustments.</li>
<li>Verify results visually and save an aligned H&amp;E ready for analysis.</li>
</ul>
<p>Like other items in our <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/about.html" target="_blank">CosMx Analysis Scratch Space</a>, the usual <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/about.html" target="_blank">caveats</a> and <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/license.html" target="_blank">license</a> applies.</p>
</section>
<section id="environment-installation" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Environment &amp; Installation</h1>
<section id="set-up-general-environment" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="set-up-general-environment"><span class="header-section-number">2.1</span> Set up general environment</h2>
<p>It’s recommended to create a dedicated environment for <code>napari</code> applications. If you already have an environment with <code>napari</code> and <code>napari-cosmx</code> plugin installed, you could just activate that environment directly and proceed to Section&nbsp;2.2.</p>
<p>Below is the example command line to create virtual environment <code>napariEnv</code>.</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>setup napari environment</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create environment</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> venv /path/to/my/napariEnv</span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># activate environment</span></span>
<span id="cb1-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> /path/to/my/napariEnv/bin/activate   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Windows: /path/to/my/napariEnv/Scripts/activate</span></span>
<span id="cb1-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--upgrade</span> pip</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install napari viewer</span></span>
<span id="cb1-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"napari[all]"</span></span></code></pre></div>
</div>
</div>
<p>Following the instructions in earlier <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-cosmx-intro/#part-2-installing-napari-cosmx" target="_blank">post</a>, one should next install the <code>napari-cosmx</code> plugin from the latest <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/tree/Main/assets/napari-cosmx%20releases" target="_blank">wheel file</a> for interacting with CosMx data.</p>
<p>With <code>napari-cosmx</code> plugin installed, one could start to prepare CosMx napari dataset and overlaying single-cell and transcriptional analysis results on top of morphological images. Please refer to earlier <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/#category=napari" target="_blank"><code>napari</code> post series</a> for more details.</p>
</section>
<section id="sec-plugins" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="sec-plugins"><span class="header-section-number">2.2</span> Install alignment-required plugins</h2>
<p>Two plugins are required for this tutorial:</p>
<ul>
<li><a href="https://github.com/jni/affinder/tree/main" target="_blank"><code>affinder</code></a> and</li>
<li>custom transformation widgets <code>napari_alignment_tools</code>, whose wheel file <code>.whl</code> needs to be downloaded from <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/tree/Main/_code/napari-alignment-tools" target="_blank">here</a>.</li>
</ul>
<p>You can either install them via command line or in <code>napari</code> GUI.</p>
<p><strong>Option 1</strong>: install via command line.</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>install alignment plugins</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install affinder</span>
<span id="cb2-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install /path/to/wheel/file/napari_alignment_tools-<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>version<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>-py3-none-any.whl</span></code></pre></div>
</div>
</div>
<p><strong>Option 2</strong>: install via <code>napari</code> GUI.</p>
<p>First launch <code>napari</code> GUI by typing <code>napari</code> in command line, and then go to <code>Plugins</code> menu and follow the steps below.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true"><code>affinder</code></a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">custom <code>napari-alignment-tools</code></a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-alignment-tools/figures/Fig2p1-plugin-install01.png" class="img-fluid figure-img" width="1262"></p>
<figcaption>(A) Launch plugin manager; (B) Locate <code>affinder</code> in search box and install (red arrows). (C) The installed plugin would show up under <code>Plugins</code> menu when launching napari next time.</figcaption>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-alignment-tools/figures/Fig2p1-plugin-install02.png" class="img-fluid figure-img" width="1316"></p>
<figcaption>For cutom plugin, (A) launch plugin manger under <code>Plugins</code> menu; (B) Drag the downloaded wheel file to the bottom field and click <code>install</code> (yellow arrows) and watch <code>Show Status</code> (C) for the installation progress.</figcaption>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
</section>
<section id="data-prerequisites" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Data prerequisites</h1>
<ul>
<li><p><strong>CosMx (stitched) dataset</strong>: See the <code>napari</code> <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-stitching/napari-cosmx-stitching.html" target="_blank">stitching tutorial</a> on how to create it for your dataset. Example file path at <code>~/data/cosmx/Napari</code>.</p></li>
<li><p><strong>H&amp;E image</strong>: Example file path at <code>~/data/cosmx/WTx_Exp-25_Colon_HE.png</code>.</p>
<ul>
<li>Napari supports various other image formats, including <code>TIFF</code>and <code>Zarr</code>.</li>
<li>If your file format is not supported, you could convert it to the supported formats with other tools like <code>QuPath</code> (see <a href="https://qupath.readthedocs.io/en/stable/docs/advanced/exporting_images.html" target="_blank">here</a>).</li>
</ul></li>
</ul>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>For H&amp;E of large file size, prefer Zarr-backed images and avoid loading every layer at full resolution. Use the minimum layers you need for alignment.</p>
</div>
</div>
</section>
<section id="alignment-workflow" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Alignment workflow</h1>
<section id="load-data" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="load-data"><span class="header-section-number">4.1</span> Load data</h2>
<ol type="1">
<li>Start <code>napari</code>.</li>
<li>Load H&amp;E: Drag the H&amp;E file into <code>napari</code> GUI (it will be a 2D image layer), choose <code>napari builtins</code> reader if prompted.</li>
<li>Load CosMx dataset: Drag the pre-stitched cosmx data folder (which contents morphology image, cell segmentation, cell‑type metadata, etc.) into <code>napari</code> GUI, choose <code>napari CosMx</code> reader if prompted.</li>
</ol>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-alignment-tools/figures/Fig3p1_load_HnE.png" class="img-fluid figure-img" width="328"></p>
<figcaption>Choose reader based on image/data type.</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="coarse-alignment-with-affinder-landmarks" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="coarse-alignment-with-affinder-landmarks"><span class="header-section-number">4.2</span> Coarse alignment with <code>affinder</code> (landmarks)</h2>
<p>Goal: Compute a transform that maps the <strong>Moving</strong> H&amp;E layer onto the <strong>Reference</strong> CosMx layer by clicking corresponding landmarks.</p>
<ol type="1">
<li><p>Open <code>affinder</code>: <strong>Plugins → affinder → Start affinder</strong>. A right‑dock widget appears with drop-downs listing your layers.</p>
<ul>
<li><p>You can further click on the <code>Select file</code> field next to <code>Save transformation as</code> line of the widget to export the transformation matrix for future usage.</p></li>
<li><p>The widget allows 3 different transform models:</p>
<ul>
<li><strong>affine</strong> <em>(default)</em>: translation, rotation, scale, shear, reflection (most flexible).</li>
<li><strong>similarity</strong>: translation, rotation, uniform scale (shape‑preserving).</li>
<li><strong>euclidean</strong>: translation + rotation only (most rigid).</li>
</ul></li>
</ul></li>
<li><p>Select layers:</p>
<ul>
<li><strong>Reference Layer</strong> = your CosMx image (e.g., morphology or <code>cell_type</code> metadata image that has clear features).</li>
<li><strong>Moving Layer</strong> = your H&amp;E image.</li>
</ul></li>
<li><p>Start point selection: Click <strong>Start</strong> in the <code>affinder</code> widget.</p>
<ul>
<li><code>affinder</code> adds two <code>Points</code> layers—one for the reference, one for the moving image.</li>
<li>The viewer would focuse you on the <strong>Reference</strong> layer first. Click at least <strong>three</strong> distinct, clearly identifiable landmarks (features visible in both images) in the <strong>Reference</strong> layer.</li>
<li>The viewer would then switch focus to the <strong>Moving</strong> (H&amp;E) layer. Click the <strong>corresponding</strong> points in the <strong>same order</strong>.</li>
</ul></li>
<li><p>Transform application: After the third pair is placed, <code>affinder</code> computes and applies the transform so the <strong>H&amp;E (Moving)</strong> aligns onto the <strong>CosMx (Reference)</strong>. Continue adding additional pairs (alternating layers) to refine the alignment iteratively. The more points you add, the more accurate the alignment.</p></li>
<li><p>Click <strong>Finish</strong> when the coarse alignment looks good. The transformation matrix used would be saved to the file defined in step (1).</p></li>
</ol>
<div class="callout callout-style-default callout-important callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important
</div>
</div>
<div class="callout-body-container callout-body">
<p>Order matters! Always click correspondence points in the same order across <strong>Reference</strong> and <strong>Moving</strong> images.</p>
</div>
</div>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true">load data and launch <code>affinder</code></a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false">point selection</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-3" aria-controls="tabset-2-3" aria-selected="false">aligned image</a></li></ul>
<div class="tab-content">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-alignment-tools/figures/Fig3p2_affinder01.png" class="img-fluid figure-img" width="1808"></p>
<figcaption>The <code>napari</code> viewer has both kinds of image data loaded before starting the <code>affinder</code>. CosMx data layer <code>cell_type</code> is choosen as <code>reference</code> layer, while H&amp;E image <code>WTx_Exp-25_Colon_HE</code> is chosen as <code>moving layer</code>.</figcaption>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-alignment-tools/figures/Fig3p2_affinder02.png" class="img-fluid figure-img" width="1072"></p>
<figcaption>Pairs of points are selected in the 2 layers before applying the transformation.</figcaption>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-2-3" class="tab-pane" aria-labelledby="tabset-2-3-tab">
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-alignment-tools/figures/Fig1-cosmx-he-align.png" class="img-fluid figure-img" width="297"></p>
<figcaption>Upon clicking <code>Finish</code>, the <strong>Moving</strong> layer (H&amp;E) is now displayed in a way aligned to the <strong>Reference</strong> layer (CosMx cell_type metadata) based on the anchor points selected.</figcaption>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="finetuning-with-custom-transform-widgets" class="level2" data-number="4.3">
<h2 data-number="4.3" class="anchored" data-anchor-id="finetuning-with-custom-transform-widgets"><span class="header-section-number">4.3</span> Fine‑tuning with custom transform widgets</h2>
<p>Use the widgets from <code>napari_alignment_tools</code> to make controlled adjustments after <code>affinder</code>’s coarse alignment.</p>
<p>As shown in figure below, there are 2 ways to open the <code>napari_alignment_tools</code> widgets (B):</p>
<ul>
<li>Option 1 (A): Go to <code>napari</code> menu, <strong>Plugins → Alignment Tools → Alignment Tool</strong> and <strong>Fine Nudge</strong>.</li>
<li>Option 2 (C): Go to the the console <code>&gt;</code> at bottom left corner of the dataset-loaded <code>napari</code> viewer and run:</li>
</ul>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>add custom widgets in napari console</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">from</span> napari_alignment_tools.widgets import add_widgets_to_viewer</span>
<span id="cb3-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">add_widgets_to_viewer</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">(</span><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">viewer</span><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">)</span></span></code></pre></div>
</div>
</div>
<p>This adds two dock widgets to the right dock: <strong>Alignment Tool</strong> (for coarse parameters) and <strong>Fine Nudge</strong> (for small increments). Both widgets allow you to put in defined numbers (instead of adding points) for transformation and thus allow the alignment occur in a more controlled way.</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-alignment-tools/figures/Fig2p1-plugin-install03.png" class="img-fluid figure-img" width="1316"></p>
<figcaption>After loading a pre-stitched cosmx dataset in <code>napari</code>, one could add the custm widgets (B, to the right dock) either (A) via <strong>Plugins</strong> menu or by (C) running short python command in <code>napari</code> console.</figcaption>
</figure>
</div>
</div>
</div>
<section id="use-the-alignment-tool-top-panel" class="level3" data-number="4.3.1">
<h3 data-number="4.3.1" class="anchored" data-anchor-id="use-the-alignment-tool-top-panel"><span class="header-section-number">4.3.1</span> Use the Alignment Tool (top panel)</h3>
<ol type="1">
<li><p>Layer selection: In <em>Alignment Tool</em>, choose your <strong>H&amp;E</strong> image layer (the <strong>Moving</strong> layer you want to adjust).</p></li>
<li><p>Adjust as needed:</p>
<ul>
<li><strong>Rotation</strong> (−180 to 180°)</li>
<li><strong>Scale Verti/Horiz</strong> (0.0001 to 1000)</li>
<li><strong>Shift Verti/Horiz</strong> (−1000 to 1000 px)</li>
<li><strong>Flip Horiz/Verti</strong> (checkboxes)</li>
</ul></li>
<li><p>Apply: Click <strong>Apply Alignment</strong>. Inspect by toggling visibility and using opacity sliders.</p></li>
</ol>
</section>
<section id="use-the-fine-nudge-tool-micro-adjustments-bottom-panel" class="level3" data-number="4.3.2">
<h3 data-number="4.3.2" class="anchored" data-anchor-id="use-the-fine-nudge-tool-micro-adjustments-bottom-panel"><span class="header-section-number">4.3.2</span> Use the Fine Nudge Tool (micro adjustments, bottom panel)</h3>
<ol type="1">
<li>Layer selection: Choose the <strong>H&amp;E</strong> layer.</li>
<li>Direction &amp; step size:</li>
</ol>
<ul>
<li>Pick a direction—left (Y−), right (Y+), up (X−), down (X+), rotate counter‑clockwise (Rotate−), rotate clockwise (Rotate+).</li>
<li>Set the <strong>Step</strong> (e.g., 1 px for translation; 0.5–1° for rotation).</li>
</ul>
<ol start="3" type="1">
<li>Apply <strong>Nudge</strong>, repeat this until alignment is precise.</li>
</ol>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-alignment-tools/figures/Fig4_custom.png" class="img-fluid figure-img" width="1466"></p>
<figcaption>(A) Custom widgets from <code>napari_alignment_tools</code>; (B) Overlay of cell_type metadata on top of H&amp;E image before vs.&nbsp;after fine-tuning; (C) Side-by-side view of the post-fine-tuned images.</figcaption>
</figure>
</div>
</div>
</div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<ul>
<li>Use <strong>opacity</strong> on the H&amp;E layer to blend with the CosMx background.</li>
<li>Toggle layer visibility (<code>V</code>) to quickly inspect.</li>
<li>Link pan/zoom across layers by multi‑selecting layers and enabling <strong>Link Layers</strong> (chain icon) in the layer controls.</li>
</ul>
</div>
</div>
</section>
<section id="verify-save" class="level3" data-number="4.3.3">
<h3 data-number="4.3.3" class="anchored" data-anchor-id="verify-save"><span class="header-section-number">4.3.3</span> Verify &amp; save</h3>
<ol type="1">
<li><strong>Visual checks</strong>: Zoom into salient structures (tissue boundaries, lumen edges, sharp features) and ensure edges coincide across layers.</li>
<li><strong>Save</strong>: There are a few options to save the alignment results:</li>
</ol>
<ul>
<li>To save high-resolution aligned H&amp;E-CosMx images: In the napari menu, choose <strong>File -&gt; Save Screenshot</strong> or type the following command in the napari console: <code>viewer.screenshot("Aligned image [file name].png", scale = 7)</code>. Larger scale values help with generating higher resolution images.</li>
<li>To save applied alignment adjustments for reuse: right-click the H&amp;E image layer, select <strong>Copy scale and transforms -&gt; Copy all to clipboard</strong></li>
</ul>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-alignment-tools/figures/Fig_saveTransform.png" class="img-fluid figure-img" style="width:100.0%"></p>
<figcaption>Screenshot of the dropdown menu showing how to save image transformations.</figcaption>
</figure>
</div>
</div>
</div>
<p>Save the information from the clipboard, which is a Python dictionary. It will have a format similar to below:</p>
<p><code>{"affine": [[1.04153992599718, -0.006080890992258121, -6.3775880232906275], [0.004057876599801822, 1.0290241905428268, -26.61572787836182], [0.0, 0.0, 1.0]], "rotate": [[1.0, -0.0], [0.0, 1.0]], "scale": [0.0017, 0.0017], "shear": [0.0], "translate": [0.0, 0.0]}</code></p>
<p>Next time, after reloading the same H&amp;E image, copy the saved transformation dictionary values and right-click the image layer to select <strong>Apply scale/transforms from clipboard</strong>. The exact same adjustment will be re-applied.</p>
</section>
</section>
</section>
<section id="practical-tips" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Practical Tips</h1>
<ul>
<li>Either <code>affinder</code> or the custom transformation widgets can be <strong>used independently</strong> to achieve the same alignment outcome. The former uses point inputs, while the later uses the numeric inputs.</li>
<li><strong>Pre‑stitch CosMx FOVs</strong> before alignment so both widgets sees a continuous reference image (see <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-stitching/napari-cosmx-stitching.html" target="_blank">stitching tutorial</a>).</li>
<li><strong>Mind the scale.</strong> If CosMx and H&amp;E pixel sizes differ greatly, start with <code>Affine</code> model in <code>affinder</code>, then refine scale with the custom Alignment Tool.</li>
<li><strong>Avoid overfitting.</strong> Don’t spam too many landmarks at once; add a few, check, then add more if needed.</li>
<li><strong>Work on downsampled data</strong> to prove the transform, then apply at full resolution if your workflow supports it.</li>
</ul>
</section>
<section id="gallery-of-he-aligned-cosmx-datasets" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> Gallery of H&amp;E-aligned CosMx datasets</h1>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-3-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-1" aria-controls="tabset-3-1" aria-selected="true">Colon</a></li><li class="nav-item"><a class="nav-link" id="tabset-3-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-2" aria-controls="tabset-3-2" aria-selected="false">Pancreas</a></li><li class="nav-item"><a class="nav-link" id="tabset-3-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-3-3" aria-controls="tabset-3-3" aria-selected="false">Brain</a></li></ul>
<div class="tab-content">
<div id="tabset-3-1" class="tab-pane active" aria-labelledby="tabset-3-1-tab">
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-alignment-tools/figures/FIgure5p1_Colon_ADC.png" class="img-fluid figure-img" width="715"></p>
<figcaption>Human Colon Adenocarcinoma.</figcaption>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-3-2" class="tab-pane" aria-labelledby="tabset-3-2-tab">
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-alignment-tools/figures/FIgure5p2_Pancreas.png" class="img-fluid figure-img" width="715"></p>
<figcaption>Human Pancreas.</figcaption>
</figure>
</div>
</div>
</div>
</div>
<div id="tabset-3-3" class="tab-pane" aria-labelledby="tabset-3-3-tab">
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-alignment-tools/figures/FIgure5p3_Hippocampus.png" class="img-fluid figure-img" width="715"></p>
<figcaption>Human Hippocampus.</figcaption>
</figure>
</div>
</div>
</div>
</div>
</div>
</div>
</section>
<section id="resources" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> Resources</h1>
<ul>
<li><a href="https://github.com/jni/affinder/tree/main?tab=readme-ov-file#how-to-guide" target="_blank"><code>affinder</code> usage</a></li>
<li>The<code>.whl</code> file for custom widgets in <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/tree/Main/_code/napari-alignment-tools" target="_blank"><code>napari_alignment_tools</code></a></li>
<li><code>napari‑cosmx</code>: <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-cosmx-intro/" target="_blank">Getting started</a></li>
<li><code>napari‑cosmx</code> <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-cosmx-basics/using-napari-cosmx.html" target="_blank">essentials</a></li>
<li>CosMx napari <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-stitching/napari-cosmx-stitching.html" target="_blank">stitching tutorial</a></li>
</ul>


</section>

 ]]></description>
  <category>napari</category>
  <category>visualization</category>
  <category>python</category>
  <category>how-tos</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-alignment-tools/</guid>
  <pubDate>Mon, 11 Aug 2025 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-alignment-tools/figures/Fig1-cosmx-he-align.png" medium="image" type="image/png" height="145" width="144"/>
</item>
<item>
  <title>Analyzing genes’ subcellular localization</title>
  <dc:creator>Patrick Danaher</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/subcellular/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>RNA transcript locations are a standard output of CosMx experiments, but it’s uncommon for data analysis to make use of them. We speculate that the localization of transcripts within cells might reveal some undiscovered biological gems to those willing to go searching. Here we present a small demonstration of how this information might be explored. We use a cell pellet array constructed by printing 37 cell lines onto a single slide:</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/subcellular/figures/CPA.png" class="img-fluid figure-img" width="376"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="setup" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Setup</h1>
<p>We ran the CosMx Human Whole Transcriptome Panel, and collected a single FOV from each cell line. This produced 18935-plex data with between 600-3400 cells per cell line. Typical for a cell line experiments, this study produced great data, with the average cell returning &gt;4000 counts.</p>
<p>Standard CosMx output includes each transcript’s cellular compartment: nucleus, cytoplasm, or membrane. For this simple demonstration, we focus on the nucleus and cytoplasm, where most transcripts are found. Our analysis was straightforward: for each cell line, we simply took the log2 ratio of each gene’s expression in the nucleus vs.&nbsp;in the cytoplasm. This allowed us to identify genes with bias towards either compartment, and to study how cell lines differ in regard to subcellular localization.</p>
</section>
<section id="results" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Results</h1>
<p>Nuclear and cytoplasmic expression tended to track each other for most genes, with a small subset of genes showing strong enrichment in the nucleus. For example, see the results from the 22RV1 cell line:</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/subcellular/figures/nucleus vs. cyto one line.png" class="img-fluid figure-img" width="1000"></p>
</figure>
</div>
</div>
</div>
<p>To create a census of nucleus-enriched genes, we recorded all genes attaining 4-fold enrichment in the nucleus vs.&nbsp;the cytoplasm in at least one cell line:</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/subcellular/figures/heatmap of top nuc-cyto ratios.png" class="img-fluid figure-img" width="1400"></p>
</figure>
</div>
</div>
</div>
<p>Finally, we looked for genes whose nuclear/cytoplasmic ratio changed across cell lines. One top hit was RPLP2:</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/subcellular/figures/single gene results.png" class="img-fluid figure-img" width="1600"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="discussion" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Discussion</h1>
<p>This post demonstrates the possibility of studying genes’ subcellular locations within and across cell types. Other, more complicated approaches are of course possible. RNA velocity can be estimated from the nuclear/cytoplasmic ratio, using subcellular location as a proxy for how recently an mRNA molecule was transcribed, e.g.&nbsp;with <a href="https://scvelo.readthedocs.io/en/stable/">scVelo</a>. It should also be possible to look for genes whose transcripts tend to cluster near each other in intracellular space, or for pairs of genes that cluster. Recent packages offer a few approaches on this theme, including <a href="http://github.com/bhavaygg/CellSP?tab=readme-ov-file#readme">CellSP</a>, <a href="https://genomebiology.biomedcentral.com/articles/10.1186/s13059-024-03217-7">BENTO</a>, <a href="https://pubmed.ncbi.nlm.nih.gov/39386706/">ELLA</a> and <a href="https://www.nature.com/articles/s41467-024-49457-w" target="&quot;_blank">INSTANT</a>.</p>
<p>Multiomics data will open new questions as well, for example allowing us to study whether any genes tend to fall atop the signal from any proteins. Or, even without multiomics data, we can use our morphology markers to ask questions of intracellular locations, for example, in the below image, what genes have been captured in the vesicles?</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/subcellular/figures/vesicles with transcripts.png" class="img-fluid figure-img" width="598"></p>
</figure>
</div>
</div>
</div>


</section>

 ]]></description>
  <category>overview</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/subcellular/</guid>
  <pubDate>Mon, 11 Aug 2025 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/subcellular/figures/CPA.png" medium="image" type="image/png" height="86" width="144"/>
</item>
<item>
  <title>Advancing cell segmentation in spatial omics: new models for diverse morphologies</title>
  <dc:creator>Lidan Wu</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/image-segmentation-models/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Cell segmentation is a foundational step in spatial omics analysis. Inaccurate boundaries can lead to the misassignment of transcripts or proteins, ultimately distorting cellular profiles and downstream interpretations. To address this, we developed a robust image-based segmentation pipeline that leverages deep learning to generate accurate and biologically meaningful cell masks across a wide range of tissue types and imaging conditions.</p>
<p>In this post, we introduce our full segmentation pipeline and describe the three custom-trained models that power it. These models improve segmentation fidelity by tailoring input channels, training data composition, and post-processing workflows to specific biological challenges.</p>
<p>Like other items in our <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/about.html" target="_blank">CosMx Analysis Scratch Space</a>, the usual <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/about.html" target="_blank">caveats</a> and <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/license.html" target="_blank">license</a> applies.</p>
<p>You can cite this post as electronic materials in various formats shown below.</p>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">APA</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">MLA</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-3-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-3" aria-controls="tabset-1-3" aria-selected="false">BibTeX</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-4-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-4" aria-controls="tabset-1-4" aria-selected="false">RIS</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-5-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-5" aria-controls="tabset-1-5" aria-selected="false">EndNote</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<p>Wu, L., Wardhani, A., &amp; Phan, J. (2025). Advancing cell segmentation in spatial omics: new models for diverse morphologies. Retrieved from https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/image-segmentation-models/</p>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<p>Wu, Lidan, Aster Wardhani, and Joseph-Tin Phan. Advancing cell segmentation in spatial omics: new models for diverse morphologies. 16 Jul 2025, https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/image-segmentation-models/</p>
</div>
<div id="tabset-1-3" class="tab-pane" aria-labelledby="tabset-1-3-tab">
<pre><code>@misc{Wu2025CosMxCellSeg
  title = {Advancing cell segmentation in spatial omics: new models for diverse morphologies},
  author = {Lidan Wu and Aster Wardhani and Joseph-Tin Phan},
  year = {2025},
  url = {https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/image-segmentation-models/},
  note = {Accessed: 2025-10-28}
}</code></pre>
</div>
<div id="tabset-1-4" class="tab-pane" aria-labelledby="tabset-1-4-tab">
<pre><code>TY  - ELEC
TI  - Advancing cell segmentation in spatial omics: new models for diverse morphologies
AU  - Lidan Wu
AU  - Aster Wardhani
AU  - Joseph-Tin Phan
PY  - 2025
UR  - https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/image-segmentation-models/
ER  -</code></pre>
</div>
<div id="tabset-1-5" class="tab-pane" aria-labelledby="tabset-1-5-tab">
<pre><code>%0 Electronic Article
%T Advancing cell segmentation in spatial omics: new models for diverse morphologies
%A Lidan Wu
%A Aster Wardhani
%A Joseph-Tin Phan
%D 2025
%U https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/image-segmentation-models/</code></pre>
</div>
</div>
</div>
</section>
<section id="compartment-aware-segmentation-pipeline" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Compartment-Aware Segmentation Pipeline</h1>
<p>Our pipeline integrates two complementary segmentation models to produce both <strong>cell-level</strong> and <strong>subcellular</strong> compartment labels for each sample:</p>
<ol type="1">
<li>A <strong>nuclear segmentation model</strong> detects nuclei with high precision.</li>
<li>A <strong>whole-cell segmentation model</strong>, which is either a generic <strong>cyto model</strong> or a specific <strong>neural model</strong>, depending on tissue context, identifies the full cell boundaries including cytoplasmic regions.</li>
<li>These two masks are then <strong>reconciled and merged</strong> to assign:
<ul>
<li>A unique cell ID to each detected cell</li>
<li>Labels for subcellular compartments (nucleus vs.&nbsp;cytoplasm)</li>
</ul></li>
</ol>
<p>This two-model architecture ensures redundancy and resilience: when one compartment is weakly stained or difficult to model, the other can often compensate. The resulting merged masks are more complete and biologically accurate, especially for complex tissues such as brain.</p>
<div id="fig-seg-pipeline" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-seg-pipeline-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/image-segmentation-models/figures/Fig1-seg-pipeline.png" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-seg-pipeline-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Schematic of full cell segmentation pipeline. Input morphology images feed into two parallel models: nuclear and whole-cell segmentation. Their outputs are merged into a final, compartment-labeled cell mask based on the overlapping behavior.
</figcaption>
</figure>
</div>
</section>
<section id="segmentation-models" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Segmentation Models</h1>
<p>All three models in our pipeline are based on the Cellpose-style architecture <span class="citation" data-cites="stringer2021cellpose">(Stringer et al. 2021)</span>, a widely adopted framework for generalist cell segmentation using spatial gradient flows and vector fields. Following the approach described in Cellpose 2.0 <span class="citation" data-cites="pachitariu2022cellpose">(Pachitariu and Stringer 2022)</span>, we trained separate models from scratch to specialize in nuclear, generic, and neural segmentation, respectively. The training datasets and input configurations were tailored to each segmentation task.</p>
<section id="nuclear-segmentation-model" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="nuclear-segmentation-model"><span class="header-section-number">3.1</span> Nuclear Segmentation Model</h2>
<p>Designed to work across many tissue types, this model takes a <strong>single-channel nuclear stain</strong> (e.g., DAPI, Histone stain) as input. It prioritizes accuracy in nucleus identification, even in densely packed or noisy imaging conditions. This model forms the backbone for subcellular compartment labeling.</p>
</section>
<section id="generic-segmentation-model" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="generic-segmentation-model"><span class="header-section-number">3.2</span> Generic Segmentation Model</h2>
<p>This model segments complete cell boundaries using <strong>two imaging channels</strong>: a required channel for general cytoplasmic or membrane staining, and an optional channel for nuclear staining. It is optimized for tissues with relatively uniform morphology and minimal extended protrusions, such as non-neural samples.</p>
</section>
<section id="neural-segmentation-model" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="neural-segmentation-model"><span class="header-section-number">3.3</span> Neural Segmentation Model</h2>
<p>To address the unique challenges of brain tissue, including highly irregular cell shapes, long processes, and closely apposed glial and neuronal cells, we developed a neural-specific model that uses <strong>three channels</strong>: nuclear, neuronal, and glial stains. This model more accurately segments astrocytes, neurons with elongated axons, and densely packed cerebellum regions.</p>
<div id="fig-3ch-model" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-3ch-model-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/image-segmentation-models/figures/Fig2-3ch-model.png" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-3ch-model-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: Neural cell segmentation model: input and output overview. Morphological stains from brain tissue—nuclear (green), neuronal (red), and glial (blue) markers—are combined into 3-channel inputs to the neural segmentation model (top panel). The Cellpose-style model processes these inputs to produce cell probability maps and spatial gradients (bottom panel), which are used to reconstruct accurate cell masks, even for complex neural morphologies.
</figcaption>
</figure>
</div>
</section>
</section>
<section id="diverse-and-context-relevant-training-datasets" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Diverse and Context-Relevant Training Datasets</h1>
<p>To ensure the segmentation models perform robustly on the types of tissues most relevant to spatial omics, we curated a large and diverse set of training data. A cornerstone of our approach was the generation of high-quality ground-truth annotations from CosMx<sup>®</sup> immunofluorescence images, covering a wide range of FFPE and fresh frozen tissue samples. These internal datasets include various tissue types and staining conditions, and are tailored to the real-world complexities encountered in spatial transcriptomic assays. They were essential in enabling the models to achieve high accuracy on primary tissue samples, which are the central use case for spatial omics.</p>
<p>To complement these internal datasets and further expand morphological and technical diversity, we incorporated a variety of publicly available datasets (Appendix) that span:</p>
<ul>
<li><p>Sample types: including 2D cell cultures, organoids, and whole-organism samples</p></li>
<li><p>Cell types and disease contexts: such as neurons, immune cells, and tumor cells</p></li>
<li><p>Imaging modalities: beyond immunofluorescence, including H&amp;E, brightfield, and differential interference contrast (DIC) imaging</p></li>
</ul>
<p>This hybrid training strategy, anchored in spatial omics–specific imaging and augmented by public data, ensures that the models generalize well across tissue types, imaging conditions, and biological contexts.</p>
<div id="fig-trainData" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-trainData-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/image-segmentation-models/figures/Fig3-bsb-trainData.png" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-trainData-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;3: Composition of training datasets used for model development. (A–C) Sunburst charts summarize the distribution of sample sources, image modalities, and staining types used to train the nuclear segmentation model (A), generic cytoplasm segmentation model (B), and neural segmentation model (C). Data were drawn from both internal CosMx assays and diverse public sources. (D) Representative immunofluorescence images from the neural training dataset highlight the complexity of brain tissue morphology, including neurons and glia labeled with various markers.
</figcaption>
</figure>
</div>
</section>
<section id="the-impact-of-training-dataset-composition-on-segmentation-performance" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> The Impact of Training Dataset Composition on Segmentation Performance</h1>
<p>Beyond architecture and stain configuration, the composition of training data had a profound effect on segmentation outcomes, particularly for complex tissues like brain. We explored this by training multiple versions of each model type (nuclear, generic whole-cell, and neural), using datasets that varied in their coverage of morphology, staining quality, and tissue types.</p>
<p>For each model type, we compared:</p>
<ul>
<li>A <strong>maximally large dataset</strong> (<code>Model #1</code>), including all available training images regardless of cell type balance.</li>
<li>One or more <strong>intermediate models</strong> (<code>Model #2</code>).</li>
<li>A <strong>balanced dataset model</strong> (<code>Model #3</code> for generic whole-cell and neural; <code>Model #2</code> for nuclei), where we carefully selected training samples to represent a diverse spectrum of cell morphologies and tissue structures.</li>
</ul>
<p>As shown in Figure&nbsp;4, masks predicted by the different models on neural tissue vary considerably in structure and completeness. Pre-trained models like <code>Cyto2</code> often undersegment neurons or fail to recover glial processes. In contrast, the morphology-balanced models produced more realistic masks, retaining fine structures and reducing erroneous fusions.</p>
<div id="fig-composition-impact" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-composition-impact-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/image-segmentation-models/figures/Fig4-composition-impact.png" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-composition-impact-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;4: Segmentation comparison on neural samples. Rows show: (1) input immunofluorescence images, (2) ground-truth labels, (3) Cyto2 predictions, and (4–6) outputs from custom-trained models. Morphology-balanced models (e.g., Model #3) better capture fine structures and generalize across diverse inputs.
</figcaption>
</figure>
</div>
<p>To quantify these differences, we measured sensitivity and precision across a range of IoU (Intersection over Union) thresholds for each model on held-out validation datasets, as shown in Figure&nbsp;5. The morphology-balanced models consistently outperformed others across all segmentation types: nuclei, generic cytoplasm, and neural.</p>
<ul>
<li>In nuclear segmentation (Panel A), <code>NucModel#2</code> (balanced) outperformed both the pretrained models (<code>nuclei</code>, <code>CP</code>, <code>Cyto2</code> and <code>Cyto3</code>) and <code>NucModel#1</code> (large, unbalanced set).</li>
<li>In generic cytoplasm segmentation (Panel B), <code>CytoModel#3</code> (balanced) showed the best trade-off between sensitivity and precision.</li>
<li>In neural segmentation (Panel C), <code>NeuModel#3</code> demonstrated the clearest performance gain, accurately detecting both large neuronal bodies and thin astrocytic projections (Figure&nbsp;4).</li>
</ul>
<p>These results highlight that <strong>more data is not always better</strong>—especially when morphological diversity is limited. Carefully curating a balanced training set allows models to generalize more robustly, particularly on tissue samples with heterogeneous or complex cellular structures.</p>
<div id="fig-performance-curves" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-performance-curves-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/image-segmentation-models/figures/Fig5-performance-curves.png" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-performance-curves-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;5: Quantitative performance of segmentation models across IoU thresholds. (A) Nuclear segmentation models. (B) Generic whole-cell segmentation models. (C) Neural segmentation models. Each curve shows sensitivity or precision on held-out test sets. Morphology-balanced models (Model #2 or #3) consistently outperform both pretrained baselines <span class="citation" data-cites="stringer2021cellpose pachitariu2022cellpose stringer2025cellpose">(Stringer et al. 2021; Pachitariu and Stringer 2022; Stringer and Pachitariu 2025)</span> and unbalanced large-set models.
</figcaption>
</figure>
</div>
</section>
<section id="post-processing-for-high-fidelity-cell-recovery" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> Post-Processing for High-Fidelity Cell Recovery</h1>
<p>While Cellpose-style models output rich information, including cell probability maps and spatial gradient flows, these predictions must be converted into discrete cell masks for downstream use. The standard Cellpose post-processing pipeline performs this by applying a gradient tracking algorithm. This method first thresholds the cell probability map to define a foreground region. Then, it uses the magnitude and direction of the predicted flow vectors (horizontal and vertical) to trace each pixel along a path toward a “basin” point, interpreted as the cell’s centroid. Pixels with similar destinations are grouped into the same cell.</p>
<p>However, this method breaks down under biologically realistic conditions. Elongated cells (e.g., neurons with long processes) may have centroids that fall outside their actual boundaries, resulting in flow divergence near the edges and causing the mask to fragment. Similarly, large or highly textured cells can generate noisy or irregular flow fields, leading to mask splitting or partial segmentation. These errors persist even when adjusting thresholds on cell probability or flow magnitudes.</p>
<p>This challenge is clearly illustrated in Figure&nbsp;6 A, where raw model outputs for a neural tissue sample exhibit ambigous “basin” points. Attempts to tune cutoffs (Figure&nbsp;6 B) fail to reliably recover full cell structures, either missing elongated cells or oversegmenting compact ones.</p>
<div id="fig-gradient-tracking" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-gradient-tracking-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/image-segmentation-models/figures/Fig6-gradient-tracking.png" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-gradient-tracking-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;6: Challenges in mask generation from model outputs for irregular cell morphologies. (A) Model outputs for a neural segmentation example, including raw input, predicted cell probability, spatial gradient flow, and gradient magnitude. (B) Attempts to generate masks from these outputs using adjusted cutoffs for flows and/or cell probability show failure to capture large or atypical morphologies.
</figcaption>
</figure>
</div>
<p>To overcome these limitations, we developed a high-recovery post-processing pipeline (Figure&nbsp;7 A) that supplements the default gradient tracking with two additional strategies:</p>
<ol type="1">
<li>Initial mask generation preserves the default method’s confident segmentations (Component <strong>a</strong>).</li>
<li>Missed cells are recovered by applying auto-thresholding on the residual cell probability and gradient magnitude maps (Component <strong>b</strong>).</li>
<li>Remaining foreground pixels are assigned to nearby cells using distance-based reassignment or neighbor-consistent flow propagation, resulting in a complete, coherent mask set (Component <strong>c</strong>).</li>
</ol>
<p>This hybrid strategy improves mask continuity, structural integrity, and cell recovery, especially in densely packed or morphologically complex tissues like brain.</p>
<p>As shown in Figure&nbsp;7 B, the resulting masks successfully capture a diverse range of cell types, including large neurons, thin astrocytic processes, and small glia, while minimizing fragmentation and oversegmentation.</p>
<div id="fig-mask-recovery" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-mask-recovery-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/image-segmentation-models/figures/Fig7-mask-recovery.png" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-mask-recovery-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;7: Improved post-processing enables high-fidelity mask recovery. (A) Workflow for the high-recovery post-processing method. Default segmentation (a) is supplemented with threshold-based recovery (b) and foreground reassignment (c). (B) Visual comparison of default vs.&nbsp;new masks. Each row shows morphology image, predicted flows, and corresponding masks. The custom method (bottom row) improves segmentation completeness and accuracy across diverse cell shapes.
</figcaption>
</figure>
</div>
</section>
<section id="integration-into-the-cosmx-platform" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> Integration into the CosMx Platform</h1>
<p>The newly developed segmentation models and high-recovery post-processing pipeline have been fully integrated into the CosMx<sup>®</sup> Spatial Molecular Imager platform to support robust and biologically meaningful cell segmentation across a wide range of samples.</p>
<p>These capabilities are now available through two complementary systems:</p>
<ul>
<li><strong>Control Center 2.0 or higher</strong>: Enables on-instrument execution of the new segmentation pipeline during CosMx image processing runs, ensuring consistency and improved performance at the point of acquisition.</li>
<li><strong>AtoMx<sup>®</sup> Spatial Informatics Portal (SIP) version 2.0 or higher</strong>: Supports cloud-based analysis workflows that utilize the new models and pipeline for segmentation across large cohorts and multiple users.</li>
</ul>
<p>For researchers who wish to customize segmentation to suit specific experimental contexts, AtoMx SIP provides a resegmentation toolkit via an interactive UI. This tool allows users to:</p>
<ul>
<li>Choose which trained model to apply for nuclear and whole-cell (Cyto) segmentation steps.</li>
<li>Specify which morphology channels are used as input for each model.</li>
<li>Re-segment images on demand with customized configurations for tissue type and staining patterns.</li>
</ul>
<p>More details can be found in the <a href="https://university.nanostring.com/cosmx-smi-data-analysis-user-manual" target="_blank">CosMx SMI Data Analysis User Manual (AtoMx v2.0)</a>, available through <a href="https://university.nanostring.com/" target="_blank">NanoU</a>.</p>
</section>
<section id="conclusion" class="level1" data-number="8">
<h1 data-number="8"><span class="header-section-number">8</span> Conclusion</h1>
<p>Through this work, we’ve shown that better segmentation isn’t just about building a bigger model—it’s about using the right data, asking the right questions, and designing each step of the pipeline with the biology in mind. By training three specialized models for nuclear, generic whole-cell and neural segmentation, and building a smarter post-processing method to handle complex cell shapes, we’ve significantly improved how well we can detect and define cells in spatial omics data.</p>
<p>What we learned goes beyond just this application. A few key takeaways stood out:</p>
<ul>
<li>Balanced, diverse training data matters more than sheer volume, especially when working with real tissue.</li>
<li>Flow-based models need thoughtful post-processing, particularly when cells are irregular or overlapping.</li>
<li>A flexible, modular approach makes it easier to adapt segmentation tools across different tissue types and experiments.</li>
</ul>
<p>These lessons can apply to many other segmentation problems. And with these improvements now available in CosMx and AtoMx, we’re excited to see how researchers can push their spatial analysis even further.</p>
<hr>
</section>
<section id="appendix-public-datasets" class="level1" data-number="9">
<h1 data-number="9"><span class="header-section-number">9</span> Appendix</h1>
<p>Public datasets associated with model training include:</p>
<ul>
<li>Deepflash2 neurons <span class="citation" data-cites="matthias_griebel_2023_7653312">(Griebel et al. 2023)</span></li>
<li>Neural nuclei segmentation (S-BSST265) <span class="citation" data-cites="SabineTaschner-Mandl2020">(Sabine Taschner-Mandl and Kromp 2020)</span></li>
<li>AMSActa Fluorescent Neuronal Cells <span class="citation" data-cites="amsacta7347">(Clissa et al. 2024)</span></li>
<li>BBBC collections: 007, 009, 030, 034, 038, 039 <span class="citation" data-cites="jones2005bbbc007 wiegandbbbc009 koos2016bbbc030 thirstrup2018bbbc034 caicedo2019bbbc038 caicedo2019bbbc039">(Jones, Carpenter, et al. 2005; Wiegand, Carpenter, et al. 2012; Koos et al. 2016; Thirstrup et al. 2018; Caicedo, Goodman, et al. 2019; Caicedo, Roth, et al. 2019)</span></li>
<li>Neuroblastoma images from the Cell Image Library <span class="citation" data-cites="yu2013ccdb6843">(Yu et al. 2013)</span></li>
</ul>



</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-caicedo2019bbbc038" class="csl-entry">
Caicedo, J. C., A. Goodman, K. W. Karhohs, et al. 2019. <span>“BBBC038v1: 2018 Data Science Bowl Nucleus Segmentation Dataset.”</span> <a href="https://bbbc.broadinstitute.org/BBBC038" class="uri">https://bbbc.broadinstitute.org/BBBC038</a>.
</div>
<div id="ref-caicedo2019bbbc039" class="csl-entry">
Caicedo, J. C., J. Roth, A. Goodman, T. Becker, K. W. Karhohs, M. Broisin, C. Molnar, et al. 2019. <span>“BBBC039v1: Fluorescence Nucleus Segmentation Dataset.”</span> <a href="https://bbbc.broadinstitute.org/BBBC039" class="uri">https://bbbc.broadinstitute.org/BBBC039</a>.
</div>
<div id="ref-amsacta7347" class="csl-entry">
Clissa, Luca, Alessandra Occhinegro, Emiliana Piscitiello, Ludovico Taddei, Antonio Macaluso, Roberto Morelli, Fabio Squarcio, et al. 2024. <span>“Fluorescent Neuronal Cells V2.”</span> University of Bologna. <a href="https://amsacta.unibo.it/id/eprint/7347/">https://amsacta.unibo.it/id/eprint/7347/</a>.
</div>
<div id="ref-matthias_griebel_2023_7653312" class="csl-entry">
Griebel, Matthias, Dennis Segebarth, Nikolai Stein, Nina Schukraft, Philip Tovote, Robert Blum, and Christoph M. Flath. 2023. <span>“Deep Learning-Enabled Segmentation of Ambiguous Bioimages with Deepflash2.”</span> Zenodo. <a href="https://doi.org/10.5281/zenodo.7653312">https://doi.org/10.5281/zenodo.7653312</a>.
</div>
<div id="ref-jones2005bbbc007" class="csl-entry">
Jones, T. R., A. E. Carpenter, et al. 2005. <span>“BBBC007v1: Drosophila Kc167 RNAi Screening Dataset.”</span> <a href="https://bbbc.broadinstitute.org/BBBC007" class="uri">https://bbbc.broadinstitute.org/BBBC007</a>.
</div>
<div id="ref-koos2016bbbc030" class="csl-entry">
Koos, K., J. Molnár, L. Kelemen, G. Tamás, and P. Horvath. 2016. <span>“BBBC030v1: DIC Image Reconstruction Dataset from the Broad Bioimage Benchmark Collection.”</span> <a href="https://bbbc.broadinstitute.org/BBBC030" class="uri">https://bbbc.broadinstitute.org/BBBC030</a>.
</div>
<div id="ref-pachitariu2022cellpose" class="csl-entry">
Pachitariu, Marius, and Carsen Stringer. 2022. <span>“Cellpose 2.0: How to Train Your Own Model.”</span> <em>Nature Methods</em> 19 (12): 1634–41. <a href="https://doi.org/10.1038/s41592-022-01663-4">https://doi.org/10.1038/s41592-022-01663-4</a>.
</div>
<div id="ref-SabineTaschner-Mandl2020" class="csl-entry">
Sabine Taschner-Mandl, Peter F. Ambros, Inge M. Ambros, and Florian Kromp. 2020. <span>“An Annotated Fluorescence Image Dataset for Training Nuclear Segmentation Methods.”</span> <a href="https://www.ebi.ac.uk/biostudies/bioimages/studies/S-BSST265">https://www.ebi.ac.uk/biostudies/bioimages/studies/S-BSST265</a>.
</div>
<div id="ref-stringer2025cellpose" class="csl-entry">
Stringer, Carsen, and Marius Pachitariu. 2025. <span>“Cellpose3: One-Click Image Restoration for Improved Cellular Segmentation.”</span> <em>Nature Methods</em> 22 (3): 592–99. <a href="https://doi.org/10.1038/s41592-025-02595-5">https://doi.org/10.1038/s41592-025-02595-5</a>.
</div>
<div id="ref-stringer2021cellpose" class="csl-entry">
Stringer, Carsen, Tim Wang, Michalis Michaelos, and Marius Pachitariu. 2021. <span>“Cellpose: A Generalist Algorithm for Cellular Segmentation.”</span> <em>Nature Methods</em> 18 (1): 100–106. <a href="https://doi.org/10.1038/s41592-020-01018-x">https://doi.org/10.1038/s41592-020-01018-x</a>.
</div>
<div id="ref-thirstrup2018bbbc034" class="csl-entry">
Thirstrup, D. et al. 2018. <span>“BBBC034v1: Allen Institute Cell Structure Dataset.”</span> <a href="https://bbbc.broadinstitute.org/BBBC034" class="uri">https://bbbc.broadinstitute.org/BBBC034</a>.
</div>
<div id="ref-wiegandbbbc009" class="csl-entry">
Wiegand, R., A. E. Carpenter, et al. 2012. <span>“BBBC009v1: Human Red Blood Cells DIC Dataset.”</span> <a href="https://bbbc.broadinstitute.org/BBBC009" class="uri">https://bbbc.broadinstitute.org/BBBC009</a>.
</div>
<div id="ref-yu2013ccdb6843" class="csl-entry">
Yu, W., H. K. Lee, S. Hariharan, W. Y. Bu, and S. Ahmed. 2013. <span>“CCDB:6843 - Mus Musculus Neuroblastoma Dataset.”</span> <a href="https://www.cellimagelibrary.org/images/CCDB_6843" class="uri">https://www.cellimagelibrary.org/images/CCDB_6843</a>.
</div>
</div></section></div> ]]></description>
  <category>segmentation</category>
  <category>algorithms</category>
  <category>CosMx 2.0</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/image-segmentation-models/</guid>
  <pubDate>Wed, 16 Jul 2025 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/image-segmentation-models/figures/Fig1-seg-pipeline.png" medium="image" type="image/png" height="67" width="144"/>
</item>
<item>
  <title>A practical guide to transcript-based cell segmentation in spatial transcriptomics</title>
  <dc:creator>Lidan Wu</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/transcript-segmentation/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Spatial transcriptomics technologies provide high-resolution spatial maps of transcript locations within tissue. A central challenge in these datasets is cell segmentation, which assigns transcripts to individual cells accurately, particularly when image data is noisy, missing, or ambiguous.</p>
<p>To address this, researchers have developed <strong>transcript-based analysis techniques</strong> that either:</p>
<ol type="1">
<li>Section&nbsp;2.1 Segment cells from transcript locations (e.g., Baysor, ProSeg),</li>
<li>Section&nbsp;2.2 Refine existing image-based segmentations using transcript patterns (e.g., FastReseg),</li>
<li>Section&nbsp;2.3 Avoid segmentation entirely by analyzing the spatial organization of transcripts directly (e.g., FICTURE).</li>
</ol>
<p>This post provides a practical walk-through of each technique with examples on using it with CosMx<sup>®</sup> data, whose standard data format are described <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/assets/Pancreas-CosMx-ReadMe.html" target="_blank">here</a>.</p>
<div id="fig-transcript-seg-methods" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-transcript-seg-methods-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/transcript-segmentation/figures/Fig1-transcript-segmentation.png" class="img-fluid figure-img">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-transcript-seg-methods-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Schematic of transcript-informed approaches
</figcaption>
</figure>
</div>
<p>Like other items in our <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/about.html" target="_blank">CosMx Analysis Scratch Space</a>, the usual <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/about.html" target="_blank">caveats</a> and <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/license.html" target="_blank">license</a> applies.</p>
</section>
<section id="choosing-the-right-transcript-based-approach" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Choosing the Right Transcript-Based Approach</h1>
<p>Spatial transcriptomics platforms differ in resolution, density, and image quality, and so do the challenges in analyzing them. Before diving into individual tools, it’s helpful to understand the three major transcript-informed approaches to working with spatial data: segmentation, refinement, and segmentation-free analysis. Each method type fits different scenarios and solves a unique class of problems.</p>
<section id="sec-txSeg" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="sec-txSeg"><span class="header-section-number">2.1</span> Transcript-Based Segmentation</h2>
<p>These methods directly infer cell boundaries by clustering or modeling the spatial distribution of transcripts, often using gene identity as additional signal.</p>
<p><strong>Use when:</strong></p>
<ul>
<li>You <strong>don’t have reliable cell images</strong> (e.g., missing or low-quality DAPI/membrane stains)</li>
<li>You want to define cells purely from <strong>mRNA localization</strong></li>
<li>You need a <strong>de novo</strong> segmentation pipeline without preprocessing</li>
</ul>
<p><strong>Limitations:</strong></p>
<ul>
<li>May oversegment sparse cells or misplace boundaries without priors</li>
<li>Transcript noise can bias clustering in low-resolution assays and introduce circularity in analysis pipeline</li>
</ul>
<p><strong>Best for:</strong> Datasets where transcript positions are abundant and dense.</p>
</section>
<section id="sec-txRefine" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="sec-txRefine"><span class="header-section-number">2.2</span> Segmentation Refinement</h2>
<p>These tools enhance an existing segmentation mask, correcting common segmentation errors using transcript-level context only when there is sufficient evidence.</p>
<p><strong>Use when:</strong></p>
<ul>
<li>You <strong>already ran an image-based segmentation</strong> (e.g., Cellpose, watershed)</li>
<li>You notice cells with <strong>minor contamination from neighboring cells</strong></li>
<li>You want to <strong>keep image-based alignment but improve transcript association</strong></li>
</ul>
<p><strong>Limitations:</strong></p>
<ul>
<li>Relies on the quality of the initial mask — can’t fix everything</li>
<li>Adds an extra pipeline step, but is lightweight</li>
</ul>
<p><strong>Best for:</strong> Any pipeline combining tissue images with transcript-based validation, especially if accurate cell boundaries affect downstream quantification.</p>
</section>
<section id="sec-segFree" class="level2" data-number="2.3">
<h2 data-number="2.3" class="anchored" data-anchor-id="sec-segFree"><span class="header-section-number">2.3</span> Segmentation-Free Analysis</h2>
<p>Instead of forcing transcripts into discrete cells, these approaches model <strong>gene expression directly in space</strong>, uncovering continuous spatial features, patterns, and regions.</p>
<p><strong>Use when:</strong></p>
<ul>
<li>You want to <strong>avoid cell segmentation biases</strong></li>
<li>Your tissue has ambiguous or <strong>poorly defined boundaries</strong></li>
<li>You aim to study <strong>gradients, niches, or expression domains</strong> more than individual cells</li>
</ul>
<p><strong>Limitations:</strong></p>
<ul>
<li>No per-cell outputs (e.g., no cell-by-gene matrices)</li>
<li>Some tools are exploratory and require interpretation beyond standard stats</li>
</ul>
<p><strong>Best for:</strong> Ultra-dense data like Seq-Scope or CosMx where transcript resolution enables high-fidelity spatial patterning without segmentation artifacts.</p>
</section>
</section>
<section id="running-transcript-informed-approaches-with-cosmx-data" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Running transcript-informed approaches with CosMx data</h1>
<p>With this foundation in place, let’s now walk through tools that exemplify each approach. The input files used are exported by AtoMx<sup>®</sup> Spatial Informatics Portal (SIP) and their file structures are described in this <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/assets/Pancreas-CosMx-ReadMe.html" target="_blank">ReadMe</a>.</p>
<div id="tbl-txSeg-types" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-tbl figure">
<figcaption class="quarto-float-caption-top quarto-float-caption quarto-float-tbl" id="tbl-txSeg-types-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Table&nbsp;1: Categories of Transcript-Based Methods
</figcaption>
<div aria-describedby="tbl-txSeg-types-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<table class="caption-top table">
<colgroup>
<col style="width: 32%">
<col style="width: 49%">
<col style="width: 17%">
</colgroup>
<thead>
<tr class="header">
<th>Type</th>
<th>Goal</th>
<th>Example Tools</th>
</tr>
</thead>
<tbody>
<tr class="odd">
<td>Segmentation</td>
<td>Create cell boundaries from transcripts</td>
<td>Baysor, ProSeg</td>
</tr>
<tr class="even">
<td>Segmentation Refinement</td>
<td>Improve pre-existing cell boundaries</td>
<td>FastReseg</td>
</tr>
<tr class="odd">
<td>Segmentation-Free Analysis</td>
<td>Analyze transcript patterns directly</td>
<td>FICTURE</td>
</tr>
</tbody>
</table>
</div>
</figure>
</div>
<section id="baysor-probabilistic-transcript-based-segmentation" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="baysor-probabilistic-transcript-based-segmentation"><span class="header-section-number">3.1</span> Baysor: Probabilistic Transcript-Based Segmentation</h2>
<p><a href="https://github.com/kharchenkolab/Baysor" target="_blank">Baysor</a> <span class="citation" data-cites="petukhov2021cell">(Petukhov et al. 2021)</span> segments cells by modeling transcript positions and gene identities using a Bayesian mixture model. It optionally incorporates nuclei positions for prior constraints.</p>
<p><strong>Pros</strong></p>
<ul>
<li>Fully probabilistic</li>
<li>Handles overlapping cells and ambiguous boundaries</li>
<li>Optional priors improve accuracy</li>
</ul>
<p><strong>Cons</strong></p>
<ul>
<li>Slower and very high memory consumption on large datasets</li>
<li>Requires Julia and formatting input data</li>
<li>Sensitive to input parameters, tend to over-segmenting and bias towards smaller cells.</li>
</ul>
<section id="sec-baysor-install" class="level3" data-number="3.1.1">
<h3 data-number="3.1.1" class="anchored" data-anchor-id="sec-baysor-install"><span class="header-section-number">3.1.1</span> Install Baysor</h3>
<p>The simplest way to install <code>Baysor</code> on Linux is by downloading a precompiled binary from the repository’s <a href="https://github.com/kharchenkolab/Baysor/releases" target="_blank">release section</a>. Once downloaded, you can run the executable located at <code>bin/baysor</code>. Below is the example code on how to setup an AWS EC2 instance to run <code>baysor</code>. For other platforms, please refer to the full installation instruction provided by the original authors <a href="https://kharchenkolab.github.io/Baysor/dev/installation/" target="_blank">here</a>.</p>
<ol type="1">
<li>SSH log into your AWS EC2 instance as admin and navigate to a folder you can write on, e.g.&nbsp;<code>/home/YourUserName/data</code>.</li>
</ol>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>log into ec2 as admin</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># replace content inside &lt;&gt; with your actual setup</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ssh</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"your-key-to-ec2.pem"</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>admin-name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span>@<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>instance-ip-address<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> </span>
<span id="cb1-3"></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># show container/docker info to get container ID</span></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> docker ps <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-a</span></span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get into the container, replace "root" with your admin name </span></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> docker exec <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--user</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"root"</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-it</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span>container-ID<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> /bin/bash</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># navigate to working directory</span></span>
<span id="cb1-11"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> /home/YourUserName/data</span></code></pre></div>
</div>
</div>
<ol start="2" type="1">
<li>Download and unzip the precompiled binary to target folder. For Baysor v0.7.1, there should be two executable <code>baysor</code> and <code>julia</code> inside the unzipped<code>./bin</code> folder.</li>
</ol>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>obtain Baysor binary</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wget</span> https://github.com/kharchenkolab/Baysor/releases/download/v0.7.1/baysor-x86_x64-linux-v0.7.1_build.zip</span>
<span id="cb2-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unzip</span> baysor-x86_x64-linux-v0.7.1_build.zip</span>
<span id="cb2-3"></span>
<span id="cb2-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ls</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-l</span> bin/julia</span>
<span id="cb2-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ls</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-l</span> bin/baysor</span></code></pre></div>
</div>
</div>
<ol start="3" type="1">
<li>Make the downloaded binary executable (<code>./bin</code> folder) for all users, <strong>set library path to empty</strong> (necessary to work with pre-compiled executable) and verify if <code>baysor/bin</code> is working.</li>
</ol>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>make Baysor executable</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chmod</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-R</span> o+x /home/YourUserName/data/bin </span>
<span id="cb3-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">chmod</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-R</span> o+r /home/YourUserName/data/bin </span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ls</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-l</span> /home/YourUserName/data/bin/julia </span>
<span id="cb3-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ls</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-l</span> /home/YourUserName/data/bin/baysor</span>
<span id="cb3-6"></span>
<span id="cb3-7"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">LD_LIBRARY_PATH</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">""</span></span>
<span id="cb3-8"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$LD_LIBRARY_PATH</span></span>
<span id="cb3-9"></span>
<span id="cb3-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/home/YourUserName/data/bin/julia</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--help</span></span>
<span id="cb3-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">/home/YourUserName/data/bin/baysor</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--help</span></span></code></pre></div>
</div>
</div>
<ol start="4" type="1">
<li>Create symbolic links such that one could run with command line without the full path to the binary file.</li>
</ol>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>create symbolic link</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> ln <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> /home/YourUserName/data/bin/julia /usr/local/bin/julia</span>
<span id="cb4-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> ln <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> /home/YourUserName/data/bin/baysor /usr/local/bin/baysor</span>
<span id="cb4-3"></span>
<span id="cb4-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">julia</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--help</span></span>
<span id="cb4-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">baysor</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--help</span></span></code></pre></div>
</div>
</div>
<p>Now you should be able to run <code>Baysor</code> from command line in your EC2 instance.</p>
</section>
<section id="run-baysor" class="level3" data-number="3.1.2">
<h3 data-number="3.1.2" class="anchored" data-anchor-id="run-baysor"><span class="header-section-number">3.1.2</span> Run Baysor</h3>
<p>As detailed in Baysor’s <a href="https://kharchenkolab.github.io/Baysor/dev/segmentation/" target="_blank">documentations</a>, <code>baysor</code> segmentation command requires data frame of transcripts’ coordinates and gene type as inputs. One can specify the data format as command arguments and configure the processing in the <code>.toml</code> file.</p>
<p><strong>Prepare Inputs</strong></p>
<p>The transcript file (e.g.&nbsp;<code>Pancreas_tx_file.csv</code>) exported by AtoMx<sup>®</sup> SIP has spatial coordinates under pixel unit in global coordinate system and is recommended to convert into micrometer unit before processing. Besides, AtoMx exported transcript file has study-unique cell ID under <code>cell</code> column which could be provided to <code>baysor</code> command as prior segmentation.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># prepare Tx file in R</span></span>
<span id="cb5-2">fullTx <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data.table<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fread</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pancreas_tx_file.csv"</span>)</span>
<span id="cb5-3"></span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># convert to micrometer </span></span>
<span id="cb5-5">pixel_size <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.12028</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># micron per pixel </span></span>
<span id="cb5-6">z_step <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># micron per z step </span></span>
<span id="cb5-7"></span>
<span id="cb5-8">fullTx[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x_allS_um'</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> fullTx[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'x_global_px'</span>]] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> pixel_size</span>
<span id="cb5-9">fullTx[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y_allS_um'</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> fullTx[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'y_global_px'</span>]] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> pixel_size</span>
<span id="cb5-10">fullTx[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'z_allS_um'</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> fullTx[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'z'</span>]] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> z_step</span>
<span id="cb5-11"></span>
<span id="cb5-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># assign unify "cell" ID to extracellular transcripts in tx file </span></span>
<span id="cb5-13">fullTx[cell_ID <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, cell <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span>]</span>
<span id="cb5-14"></span>
<span id="cb5-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># export the modified transcript file to use with command line </span></span>
<span id="cb5-16">data.table<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fwrite</span>(fullTx, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">file =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Pancreas_prepared_tx_file.csv"</span>)</span></code></pre></div>
</div>
<p><strong>Run Command</strong></p>
<p>Below is an example command that performs Baysor segmentation on transcript file (e.g.&nbsp;<code>Pancreas_prepared_tx_file.csv</code>) and output results to folder <code>~/data/baysor_outputs</code>. Optionally, one can disable the polygon outputs for faster processing by passing <code>--polygon-format none</code> to the command.</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>run Baysor</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">baysor</span> run Pancreas_prepared_tx_file.csv :cell <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--output</span> ~/data/baysor_outputs <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--gene-column</span> target <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--x-column</span> x_allS_um <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--y-column</span> y_allS_um <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--z-column</span> z_allS_um <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--config</span> baysor_cosmx_config.toml <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb6-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--count-matrix-format</span> tsv</span></code></pre></div>
</div>
</div>
<p>An example configuration file for using CosMx data with <code>Baysor</code> is shown below.</p>
<div class="sourceCode" id="cb7" data-caption="baysor_cosmx_config.toml" style="background: #f1f3f5;"><pre class="sourceCode toml code-with-copy"><code class="sourceCode toml"><span id="cb7-1"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[data]</span></span>
<span id="cb7-2"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">gene</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"target"</span></span>
<span id="cb7-3"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">min_molecules_per_gene</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb7-4"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">exclude_genes</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FalseCode*,NegPrb*,SystemControl*,Negative*,Custom*"</span></span>
<span id="cb7-5"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">min_molecules_per_cell</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span></span>
<span id="cb7-6"></span>
<span id="cb7-7"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[segmentation]</span></span>
<span id="cb7-8"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">prior_segmentation_confidence</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Confidence of the prior segmentation. Default: 0.2</span></span>
<span id="cb7-9"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">unassigned_prior_label</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"0"</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Label for unassigned cells in the prior segmentation. Default: "0"</span></span>
<span id="cb7-10"></span>
<span id="cb7-11"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">[plotting]</span></span>
<span id="cb7-12"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">min_pixels_per_cell</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Number of pixels per cell of minimal size, used to estimate size of the final plot. For most protocols values around 7-30 give enough visualization quality. Default: 15</span></span>
<span id="cb7-13"><span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">max_plot_size</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3000</span> <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Maximum size of the molecule plot in pixels. Default: 5000A</span></span></code></pre></div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>Since a full run can be time-consuming, it’s recommended to perform a quick preview to extract initial insights from the data and to make informed guesses about the parameters for the full analysis. One can achieve this with <code>baysor preview</code> command using the same input arguments. For more details, see <a href="https://kharchenkolab.github.io/Baysor/dev/preview/" target="_blank">here</a> and a discussion on parameter choices could be found <a href="https://kharchenkolab.github.io/Baysor/dev/segmentation/#Choice-of-parameters" target="_blank">here</a>.</p>
</div>
</div>
<p><strong>Outputs</strong></p>
<p>By default, <code>baysor</code> segmentation generates the following outputs.</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>Baysor outputs</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">baysor_outputs/</span></span>
<span id="cb8-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> segmentation_cell_stats.csv</span>
<span id="cb8-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> segmentation_counts.tsv</span>
<span id="cb8-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> segmentation.csv</span>
<span id="cb8-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> segmentation_log.log</span>
<span id="cb8-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> segmentation_params.dump.toml</span>
<span id="cb8-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> segmentation_polygons_2d.json</span>
<span id="cb8-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> segmentation_polygons_3d.json</span></code></pre></div>
</div>
</div>
<p>A full description on outputs could be found in Baysor’s <a href="https://kharchenkolab.github.io/Baysor/dev/segmentation/" target="_blank">documentations</a>. Briefly,</p>
<ul>
<li><p><code>segmentation_cell_stats.csv</code>: a cell x attributes data frame with new cell ID under <code>cell</code> column, number of transcripts assigned under <code>n_transcripts</code> column, and average assignment confidence per cell under <code>avg_assignment_confidence</code> column.</p></li>
<li><p><code>segmentation_counts.tsv</code>: the single-cell count matrix with segmented statistics; one could choose to output it as <code>loom</code> format when setting <code>--count-matrix-format loom</code> in command.</p></li>
<li><p><code>segmentation.csv</code>: the per molecular level information for the full transcript file, with <code>cell</code> column for new cell ID, <code>confidence</code> and <code>is_noise</code> columns for whether the molecule is real (not noise), and <code>assignment_confidence</code> column for the confidence that the particular molecule is assigned to a correct cell.</p>
<ul>
<li>We recommend to remove molecules with <code>confidence</code> below <code>0.9</code> or <code>is_nose = True</code> from single-cell expression matrix for downstream analysis.</li>
</ul></li>
</ul>
</section>
</section>
<section id="proseg-fast-transcript-simulation-based-segmentation" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="proseg-fast-transcript-simulation-based-segmentation"><span class="header-section-number">3.2</span> ProSeg: Fast Transcript Simulation Based Segmentation</h2>
<p><a href="https://github.com/dcjones/proseg" target="_blank">ProSeg</a> <span class="citation" data-cites="jones2025cell">(Jones et al. 2025)</span> is a high-speed, Rust-based tool that segments cells using density-based clustering of transcript positions. It is optimized for large datasets from platforms like CosMx.</p>
<p><strong>Pros</strong></p>
<ul>
<li>Much faster and smaller memory footprint than Baysor</li>
<li>Does not require image inputs to consider prior segmentation with assigned nuclear compartment</li>
<li>Works on compressed csv.gz files directly</li>
</ul>
<p><strong>Cons</strong></p>
<ul>
<li>Fewer model-based refinements than Baysor</li>
<li>A sampling method which runs in non-deterministic way in its current form.</li>
<li>The direct outputs are posterior expectations instead of integers counts assigned to each cell.</li>
<li>Prone to merge error and generate abnormally large cells near sample edge next to cell-free region.</li>
</ul>
<section id="install-proseg" class="level3" data-number="3.2.1">
<h3 data-number="3.2.1" class="anchored" data-anchor-id="install-proseg"><span class="header-section-number">3.2.1</span> Install ProSeg</h3>
<p>To install <code>ProSeg</code>, one would need to first install <code>cargo</code> and then the <code>proseg</code> package. For an AWS EC2 instance, one should first log into the instance as admin (see Baysor installation above Section&nbsp;3.1.1 for details) and then do the following.</p>
<ol type="1">
<li>Install <code>cargo</code> as admin <code>root</code> and set it up for all users.</li>
</ol>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>install cargo</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">curl</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--proto</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'=https'</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--tlsv1.2</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-sSf</span> https://sh.rustup.rs <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sh</span></span>
<span id="cb9-2"></span>
<span id="cb9-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># activate cargo environment or restart session to have PATH change in effect </span></span>
<span id="cb9-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">.</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$HOME</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">/.cargo/env"</span></span>
<span id="cb9-5"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">echo</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$HOME</span></span>
<span id="cb9-6"></span>
<span id="cb9-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># test installation</span></span>
<span id="cb9-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span> cargo</span>
<span id="cb9-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cargo</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span></span></code></pre></div>
</div>
</div>
<p>By default, <code>cargo</code> would be installed under <code>/root/.cargo</code> folder. To make it executable for all users, one could copy its binary to local environment.</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>setup cargo for all users</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ls</span> /root/.cargo/bin/</span>
<span id="cb10-2"></span>
<span id="cb10-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> cp /root/.cargo/bin/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span> /usr/local/bin/</span>
<span id="cb10-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> chmod 755 /usr/local/bin/<span class="pp" style="color: #AD0000;
background-color: null;
font-style: inherit;">*</span></span></code></pre></div>
</div>
</div>
<p>Now, one could use <code>cargo</code> as non-admin user.</p>
<ol start="2" type="1">
<li>Clone and install <code>proseg</code>.</li>
</ol>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>install proseg</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb11-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://github.com/dcjones/proseg.git</span>
<span id="cb11-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">cargo</span> install proseg</span>
<span id="cb11-3"></span>
<span id="cb11-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># test installation</span></span>
<span id="cb11-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span> proseg</span>
<span id="cb11-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">proseg</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span></span></code></pre></div>
</div>
</div>
</section>
<section id="run-proseg" class="level3" data-number="3.2.2">
<h3 data-number="3.2.2" class="anchored" data-anchor-id="run-proseg"><span class="header-section-number">3.2.2</span> Run ProSeg</h3>
<p>Same as <code>baysor</code>, the primary input for <code>proseg</code> is the transcript data frame. Since <code>proseg</code> command allows a more flexible data structure and internal conversion between pixel and micrometer units using <code>coordinate-scale</code> argument, the transcript file exported by AtoMx<sup>®</sup> SIP could be used directly without modification or decompression (i.e.&nbsp;working for <code>.csv.gz</code> file).</p>
<p><strong>Run Command</strong></p>
<p>Below is an example command that performs ProSeg segmentation on transcript file (e.g.&nbsp;<code>Pancreas_tx_file.csv</code>) and output results to folder <code>~/data/proseg_outputs</code>. In addition to prior segmentation, the assigned nuclear compartments in transcript files are also provided to <code>proseg</code> via arguments <code>--compartment-column CellComp --compartment-nuclear Nuclear</code>.</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>run ProSeg</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb12-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">proseg</span> Pancreas_tx_file.csv <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--output-path</span> ~/data/proseg_outputs <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--gene-column</span> target <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--x-column</span> x_global_px <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-5">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--y-column</span> y_global_px <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--z-column</span> z <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--compartment-column</span> CellComp <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--compartment-nuclear</span> Nuclear <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--fov-column</span> fov <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cell-id-column</span> cell <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cell-id-unassigned</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">''</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cell-assignment-column</span> cell_ID <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--cell-assignment-unassigned</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'0'</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--excluded-genes</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'^(SystemControl|Negative)'</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb12-15">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--coordinate-scale</span> 0.12028 </span></code></pre></div>
</div>
</div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>ProSeg performs a z coordinate normalization step to remove sample tilt and cap z coordinates within 1st ~ 99th percentile of original value. Thus, it’s recommended to split your dataset by tissue sections first and then process each one separately. This helps avoid problems that can happen because the sections may have different z-coordinate values. More advice and description on argument options could be found <a href="https://github.com/dcjones/proseg/tree/main?tab=readme-ov-file#modeling-assumptions" target="_blank">here</a>.</p>
</div>
</div>
<p><strong>Outputs</strong></p>
<p>By default, <code>proseg</code> segmentation generates the following outputs.</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>ProSeg outputs</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb13-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">proseg_outputs/</span></span>
<span id="cb13-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> cell-metadata.csv</span>
<span id="cb13-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> cell-polygons.geojson</span>
<span id="cb13-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> cell-polygons-layers.geojson</span>
<span id="cb13-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> expected-counts.csv</span>
<span id="cb13-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> transcript-metadata.csv</span>
<span id="cb13-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> union-cell-polygons.geojson</span></code></pre></div>
</div>
</div>
<p>A full description on ProSeg’s output format could be found <a href="https://github.com/dcjones/proseg/tree/main?tab=readme-ov-file#output-options" target="_blank">here</a>. Briefly.</p>
<ul>
<li><p><code>cell-metadata.csv</code>: a cell x attributes data frame with new cell ID under <code>cell</code> column, cell volume under <code>volume</code> column.</p>
<ul>
<li>We recommend to inspect the <code>volume</code> value to remove cells that are abnormally large.</li>
</ul></li>
<li><p><code>expected-counts.csv</code>: the single-cell expression matrix with segmented statistics; the reported expression values are posterior expectations shown as fractional counts instead of integers.</p>
<ul>
<li>We recommend to calculate the observed single-cell count matrix with the new cell ID assignment from the output <code>transcript-metadata.csv</code> before downstream single-cell analysis for consistency.</li>
</ul></li>
<li><p><code>transcript-metadata.csv</code>: the per molecular level information for the full transcript file, with <code>gene</code> column for gene name, <code>assignment</code> column for new cell ID, <code>probability</code> and <code>background</code> columns for whether the molecule is real and confidently assigned.</p>
<ul>
<li>We recommend to remove molecules with <code>background = 1</code> before generating the observed single-cell count matrix from transcript file.</li>
</ul></li>
</ul>
<p><strong>Generate Count Matrix</strong></p>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># read in ProSeg processed transcript files in R</span></span>
<span id="cb14-2">dt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data.table<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fread</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"proseg_outputs/transcript-metadata.csv"</span>)</span>
<span id="cb14-3"></span>
<span id="cb14-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove background transcripts and keep only the needed columns </span></span>
<span id="cb14-5">dt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dt[background <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, .SD, .SDcols <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'assignment'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene'</span>)]</span>
<span id="cb14-6">dt[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene'</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(dt[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'gene'</span>]])</span>
<span id="cb14-7">dt[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'assignment'</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(dt[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'assignment'</span>]])</span>
<span id="cb14-8"></span>
<span id="cb14-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get observed cell x gene count matrix </span></span>
<span id="cb14-10">counts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> reshape2<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">acast</span>(dt, assignment <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> gene, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fun.aggregate =</span> length)</span>
<span id="cb14-11">counts <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Matrix</span>(counts, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">sparse =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) </span></code></pre></div>
</div>
</section>
</section>
<section id="fastreseg-transcript-based-segmentation-refinement" class="level2" data-number="3.3">
<h2 data-number="3.3" class="anchored" data-anchor-id="fastreseg-transcript-based-segmentation-refinement"><span class="header-section-number">3.3</span> FastReseg: Transcript-Based Segmentation Refinement</h2>
<p><a href="https://github.com/Nanostring-Biostats/FastReseg" target="_blank">FastReseg</a> <span class="citation" data-cites="Wu2025FastReseg">(Wu, Beechem, and Danaher 2025)</span> is a transcript-informed refinement tool that improves segmentation masks (e.g., from Cellpose or watershed) by leveraging local transcript expression profiles to resolve over-segmentation, under-segmentation, and cell boundaries.</p>
<p><strong>Pros</strong></p>
<ul>
<li>Fast and lightweight</li>
<li>Enhances biological accuracy without radically redefining cell boundaries</li>
<li>Supports configurable refinement rules</li>
</ul>
<p><strong>Cons</strong></p>
<ul>
<li>Requires an existing segmentation mask</li>
<li>Works best with dense, high-plex data</li>
</ul>
<p>Please refer to <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/segmentation-error-evaluation/" target="_blank">earlier post</a> and the <a href="https://nanostring-biostats.github.io/FastReseg/articles/tutorial.html" target="_blank">package tutorial</a> on how to use <code>FastReseg</code> to evaluate segmentation performance and further perform refinement.</p>
<section id="fastreseg-custom-module-in-atomx" class="level3" data-number="3.3.1">
<h3 data-number="3.3.1" class="anchored" data-anchor-id="fastreseg-custom-module-in-atomx"><span class="header-section-number">3.3.1</span> FastReseg Custom Module in AtoMx</h3>
<p>For AtoMx users (version 2.0.1 or later), here we provide a <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/tree/Main/_code/fastReseg-custom-module" target="_blank">custom module</a> designed to perform FastReseg analysis on CosMx RNA studies hosted on the AtoMx SIP platform.</p>
<p>This module conducts segmentation evaluation on pre-segmented data and introduces a new cell metadata column, <code>lrtest_nlog10P</code>, which quantifies the degree of spatial dependency observed within existing cells. It also enables the removal of flagged transcripts from current cell segments. When the module is executed a second time with the same configuration and <code>overwrite_RNA_soma = TRUE</code>, it allows downstream AtoMx analysis to proceed using the trimmed RNA data. Currently, the FastReseg custom module supports transcript cleanup through trimming only, as this is the primary error mode encountered in thin tissue sections.</p>
</section>
</section>
<section id="ficture-segmentation-free-spatial-transcript-analysis" class="level2" data-number="3.4">
<h2 data-number="3.4" class="anchored" data-anchor-id="ficture-segmentation-free-spatial-transcript-analysis"><span class="header-section-number">3.4</span> FICTURE: Segmentation-Free Spatial Transcript Analysis</h2>
<p><a href="https://github.com/seqscope/ficture" target="_blank">FICTURE</a> <span class="citation" data-cites="si2024ficture">(Si et al. 2024)</span> is a segmentation-free spatial factorization method. It models spatial transcript patterns using statistical models to extract biologically meaningful regions and interactions.</p>
<p><strong>Pros</strong></p>
<ul>
<li>No reliance on image or segmentation</li>
<li>Ideal for spatial transcriptomics data of submicron-resolution (e.g., Seq-Scope, CosMx)</li>
<li>Avoids biases of segmentation methods</li>
</ul>
<p><strong>Cons</strong></p>
<ul>
<li>Works on 2D transcript data only</li>
<li>Doesn’t yield per-cell outputs (i.e., no cell boundaries)</li>
<li>Interpretation can be abstract for some users</li>
</ul>
<section id="install-ficture" class="level3" data-number="3.4.1">
<h3 data-number="3.4.1" class="anchored" data-anchor-id="install-ficture"><span class="header-section-number">3.4.1</span> Install FICTURE</h3>
<p><code>FICTURE</code> relies on <code>bgzip</code> and <code>tabix</code> for file processing and one could install those libraries as part of <code>htslib</code> installation. For an AWS EC2 instance, one should first log into the instance as admin (see Baysor installation above Section&nbsp;3.1.1 for details) and then do the following.</p>
<ol type="1">
<li>Install <code>htslib</code>C library (<a href="https://www.htslib.org/download/" target="_blank">latest release</a>).</li>
</ol>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>install C dependencies of FICTURE</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb15-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># download and unzip the release version</span></span>
<span id="cb15-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">wget</span> https://github.com/samtools/htslib/releases/download/1.20/htslib-1.20.tar.bz2</span>
<span id="cb15-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tar</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-xvjf</span> htslib-1.20.tar.bz2</span>
<span id="cb15-4"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> htslib-1.20</span>
<span id="cb15-5"></span>
<span id="cb15-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># setup location to install, typically under /usr/local/ for all users</span></span>
<span id="cb15-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">./configure</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--prefix</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/usr/local/</span>
<span id="cb15-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> make</span>
<span id="cb15-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sudo</span> make install</span>
<span id="cb15-10"></span>
<span id="cb15-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># test installation</span></span>
<span id="cb15-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">htsfile</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--version</span></span></code></pre></div>
</div>
</div>
<p>If the installation location is not under <code>/usr/local/</code>, one would need to add the installation path to <code>PATH</code> system environment variable when login as non-admin user.</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>update PATH</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb16-1"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">PATH</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/where/to/install/bin/:<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">$PATH</span></span>
<span id="cb16-2"></span>
<span id="cb16-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># test installation</span></span>
<span id="cb16-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">bgzip</span></span>
<span id="cb16-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">tabix</span></span></code></pre></div>
</div>
</div>
<ol start="2" type="1">
<li>Set up python virtual environment and install <code>FICTURE</code> package via pip.</li>
</ol>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>create env and install FICTURE</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Create a virtual environment</span></span>
<span id="cb17-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">VENV</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/path/to/venv/name   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## replace it with your desired path</span></span>
<span id="cb17-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-m</span> venv <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${VENV}</span></span>
<span id="cb17-4"></span>
<span id="cb17-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Activate the virtual environment</span></span>
<span id="cb17-6"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">source</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${VENV}</span>/bin/activate</span>
<span id="cb17-7"></span>
<span id="cb17-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Clone the GitHub repository</span></span>
<span id="cb17-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">git</span> clone https://github.com/seqscope/ficture.git</span>
<span id="cb17-10"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ficture</span>
<span id="cb17-11"></span>
<span id="cb17-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Install the required packages</span></span>
<span id="cb17-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-r</span> requirements.txt</span>
<span id="cb17-14"></span>
<span id="cb17-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## Install FICTURE locally</span></span>
<span id="cb17-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-e</span> .</span></code></pre></div>
</div>
</div>
</section>
<section id="run-ficture" class="level3" data-number="3.4.2">
<h3 data-number="3.4.2" class="anchored" data-anchor-id="run-ficture"><span class="header-section-number">3.4.2</span> Run FICTURE</h3>
<p>A full description on how to run FICTURE could be found <a href="https://seqscope.github.io/ficture/localrun/" target="_blank">here</a>. More information regarding how to submit FICTURE jobs to SLURM cluster is described in FICTURE’s <a href="https://seqscope.github.io/ficture/run/" target="_blank">documents</a>.</p>
<p><strong>Prepare Inputs</strong></p>
<p>Below is an example command that prepares AtoMx-exported transcript file (e.g.&nbsp;<code>Pancreas_tx_file.csv</code>) for FICTURE processing using its utility function. See <a href="https://seqscope.github.io/ficture/format_input/cosmx/" target="_blank">here</a> for more details.</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>prepare CosMx Tx file for FICTURE</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># path to input transcript file, working for .csv.gz file too </span></span>
<span id="cb18-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">inputFile</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/path/to/input/Pancreas_tx_file.csv</span>
<span id="cb18-3"></span>
<span id="cb18-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">## set up output folder and identifier </span></span>
<span id="cb18-5"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">outDir</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/path/to/preprocess_data</span>
<span id="cb18-6"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">iden</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>pancreas</span>
<span id="cb18-7"></span>
<span id="cb18-8"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">filteredFile</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${outDir}</span>/filtered.matrix.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${iden}</span>.tsv</span>
<span id="cb18-9"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">featureFile</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${outDir}</span>/feature.clean.<span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${iden}</span>.tsv</span>
<span id="cb18-10"></span>
<span id="cb18-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># navigate to the root folder of FICTURE package to use its utilities function</span></span>
<span id="cb18-12"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> ficture </span>
<span id="cb18-13"></span>
<span id="cb18-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># generate transcript file (required) and gene list (optional)</span></span>
<span id="cb18-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">python</span> misc/format_cosmx.py <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-16">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--input</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${inputFile}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-17">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--output</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${filteredFile}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-18">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--gcol</span> target <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-19">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--feature</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${featureFile}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-20">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--dummy_genes</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Negative|SystemControl'</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-21">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--px_to_um</span> 0.12028 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-22">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--precision</span> 2 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb18-23">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--annotation</span> cell fov</span>
<span id="cb18-24"></span>
<span id="cb18-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># sort the filtered transcript files based on coordinate columns (first 2) and then zip it</span></span>
<span id="cb18-26"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-k2,2g</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-k1,1g</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${filteredFile}</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">|</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">gzip</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${filteredFile}</span>.gz</span>
<span id="cb18-27"></span>
<span id="cb18-28"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># remove the unsorted unzip version</span></span>
<span id="cb18-29"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rm</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${filteredFile}</span></span></code></pre></div>
</div>
</div>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>preprocess outputs</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb19-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">preprocess_data/</span></span>
<span id="cb19-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> coordinate_minmax.tsv</span>
<span id="cb19-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> feature.clean.pancreas.tsv</span>
<span id="cb19-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> filtered.matrix.pancreas.tsv.gz</span></code></pre></div>
</div>
</div>
<p><strong>Run Command</strong></p>
<p>Below is an example command that perform the complete FICTURE pipeline with 2 different hexagon flat-to-flat widths <code>train-width</code>, 12 and 18 micron, at same time.</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>run FICTURE</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb20-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># setup pipeline output folder</span></span>
<span id="cb20-2"><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">outDir2</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>/path/to/ficture_outputs</span>
<span id="cb20-3"></span>
<span id="cb20-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># generate transcript file and gene list (optional)</span></span>
<span id="cb20-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ficture</span> run together <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--in-tsv</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${filteredFile}</span>.gz <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb20-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--in-minmax</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${outDir}</span>/coordinate_minmax.tsv <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb20-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--in-feature</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${featureFile}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb20-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--out-dir</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">${outDir2}</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb20-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--train-width</span> 12,18 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb20-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--n-factor</span> 12 <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb20-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--n-jobs</span> 4<span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb20-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--plot-each-factor</span> <span class="dt" style="color: #AD0000;
background-color: null;
font-style: inherit;">\</span></span>
<span id="cb20-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--all</span></span></code></pre></div>
</div>
</div>
<p>If the installation path for <code>bgzip</code> and <code>tabix</code> is not under <code>/usr/local/bin/</code>, pass the installation location to the <code>ficture</code> command as well: <code>--bgzip /where/to/install/bin/bgzip --tabix /where/to/install/bin/tabix</code>.</p>
<p><strong>Outputs</strong></p>
<p>By default, <code>ficture run together</code> command generates the following outputs when setting number of expression factors <code>n-factor</code> to 12 with 2 different <code>train-width</code> values. A detailed description on the output files are described in FICTURE’s <a href="https://seqscope.github.io/ficture/localrun/#output" target="_blank">documents</a>.</p>
<div class="cell">
<div class="code-with-filename">
<div class="code-with-filename-file">
<pre><strong>FICTURE outputs</strong></pre>
</div>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb21-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ficture_outputs</span></span>
<span id="cb21-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> analysis</span>
<span id="cb21-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   ├── nF12.d_12</span>
<span id="cb21-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   ├── figure</span>
<span id="cb21-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   │   ├── nF12.d_12.cbar.png</span>
<span id="cb21-6"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   │   ├── nF12.d_12.coarse.png</span>
<span id="cb21-7"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   │   ├── nF12.d_12.coarse.top.png</span>
<span id="cb21-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   │   ├── nF12.d_12.decode.prj_12.r_4_5.pixel.png</span>
<span id="cb21-9"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   │   ├── nF12.d_12.rgb.tsv</span>
<span id="cb21-10"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   │   └── sub</span>
<span id="cb21-11"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   │       ├── nF12.d_12.decode.prj_12.r_4_5.pixel.F_0.png</span>
<span id="cb21-12"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   │       ├── nF12.d_12.decode.prj_12.r_4_5.pixel.F_10.png</span>
<span id="cb21-13"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   │       ├── nF12.d_12.decode.prj_12.r_4_5.pixel.F_11.png</span>
<span id="cb21-14"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   │       ├── nF12.d_12.decode.prj_12.r_4_5.pixel.F_1.png</span>
<span id="cb21-15"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   │       ├── nF12.d_12.decode.prj_12.r_4_5.pixel.F_2.png</span>
<span id="cb21-16"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   │       ├── nF12.d_12.decode.prj_12.r_4_5.pixel.F_3.png</span>
<span id="cb21-17"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   │       ├── nF12.d_12.decode.prj_12.r_4_5.pixel.F_4.png</span>
<span id="cb21-18"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   │       ├── nF12.d_12.decode.prj_12.r_4_5.pixel.F_5.png</span>
<span id="cb21-19"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   │       ├── nF12.d_12.decode.prj_12.r_4_5.pixel.F_6.png</span>
<span id="cb21-20"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   │       ├── nF12.d_12.decode.prj_12.r_4_5.pixel.F_7.png</span>
<span id="cb21-21"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   │       ├── nF12.d_12.decode.prj_12.r_4_5.pixel.F_8.png</span>
<span id="cb21-22"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   │       └── nF12.d_12.decode.prj_12.r_4_5.pixel.F_9.png</span>
<span id="cb21-23"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   ├── nF12.d_12.coherence.tsv</span>
<span id="cb21-24"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   ├── nF12.d_12.decode.prj_12.r_4_5.anchor.tsv.gz</span>
<span id="cb21-25"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   ├── nF12.d_12.decode.prj_12.r_4_5.bulk_chisq.tsv</span>
<span id="cb21-26"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   ├── nF12.d_12.decode.prj_12.r_4_5.done</span>
<span id="cb21-27"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   ├── nF12.d_12.decode.prj_12.r_4_5.factor.info.html</span>
<span id="cb21-28"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   ├── nF12.d_12.decode.prj_12.r_4_5.factor.info.tsv</span>
<span id="cb21-29"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   ├── nF12.d_12.decode.prj_12.r_4_5.pixel.sorted.tsv.gz</span>
<span id="cb21-30"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   ├── nF12.d_12.decode.prj_12.r_4_5.pixel.sorted.tsv.gz.tbi</span>
<span id="cb21-31"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   ├── nF12.d_12.decode.prj_12.r_4_5.posterior.count.tsv.gz</span>
<span id="cb21-32"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   ├── nF12.d_12.done</span>
<span id="cb21-33"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   ├── nF12.d_12.fit_result.tsv.gz</span>
<span id="cb21-34"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   ├── nF12.d_12.model_matrix.tsv.gz</span>
<span id="cb21-35"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   ├── nF12.d_12.model.p</span>
<span id="cb21-36"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   ├── nF12.d_12.model_selection_candidates.p</span>
<span id="cb21-37"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   ├── nF12.d_12.posterior.count.tsv.gz</span>
<span id="cb21-38"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   ├── nF12.d_12.prj_12.r_4.fit_result.tsv.gz</span>
<span id="cb21-39"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   │   └── nF12.d_12.prj_12.r_4.posterior.count.tsv.gz</span>
<span id="cb21-40"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>   └── nF12.d_18</span>
<span id="cb21-41"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       ├── figure</span>
<span id="cb21-42"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       │   ├── nF12.d_18.cbar.png</span>
<span id="cb21-43"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       │   ├── nF12.d_18.coarse.png</span>
<span id="cb21-44"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       │   ├── nF12.d_18.coarse.top.png</span>
<span id="cb21-45"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       │   ├── nF12.d_18.decode.prj_18.r_4_5.pixel.png</span>
<span id="cb21-46"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       │   ├── nF12.d_18.rgb.tsv</span>
<span id="cb21-47"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       │   └── sub</span>
<span id="cb21-48"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       │       ├── nF12.d_18.decode.prj_18.r_4_5.pixel.F_0.png</span>
<span id="cb21-49"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       │       ├── nF12.d_18.decode.prj_18.r_4_5.pixel.F_10.png</span>
<span id="cb21-50"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       │       ├── nF12.d_18.decode.prj_18.r_4_5.pixel.F_11.png</span>
<span id="cb21-51"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       │       ├── nF12.d_18.decode.prj_18.r_4_5.pixel.F_1.png</span>
<span id="cb21-52"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       │       ├── nF12.d_18.decode.prj_18.r_4_5.pixel.F_2.png</span>
<span id="cb21-53"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       │       ├── nF12.d_18.decode.prj_18.r_4_5.pixel.F_3.png</span>
<span id="cb21-54"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       │       ├── nF12.d_18.decode.prj_18.r_4_5.pixel.F_4.png</span>
<span id="cb21-55"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       │       ├── nF12.d_18.decode.prj_18.r_4_5.pixel.F_5.png</span>
<span id="cb21-56"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       │       ├── nF12.d_18.decode.prj_18.r_4_5.pixel.F_6.png</span>
<span id="cb21-57"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       │       ├── nF12.d_18.decode.prj_18.r_4_5.pixel.F_7.png</span>
<span id="cb21-58"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       │       ├── nF12.d_18.decode.prj_18.r_4_5.pixel.F_8.png</span>
<span id="cb21-59"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       │       └── nF12.d_18.decode.prj_18.r_4_5.pixel.F_9.png</span>
<span id="cb21-60"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       ├── nF12.d_18.coherence.tsv</span>
<span id="cb21-61"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       ├── nF12.d_18.decode.prj_18.r_4_5.anchor.tsv.gz</span>
<span id="cb21-62"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       ├── nF12.d_18.decode.prj_18.r_4_5.bulk_chisq.tsv</span>
<span id="cb21-63"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       ├── nF12.d_18.decode.prj_18.r_4_5.done</span>
<span id="cb21-64"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       ├── nF12.d_18.decode.prj_18.r_4_5.factor.info.html</span>
<span id="cb21-65"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       ├── nF12.d_18.decode.prj_18.r_4_5.factor.info.tsv</span>
<span id="cb21-66"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       ├── nF12.d_18.decode.prj_18.r_4_5.pixel.sorted.tsv.gz</span>
<span id="cb21-67"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       ├── nF12.d_18.decode.prj_18.r_4_5.pixel.sorted.tsv.gz.tbi</span>
<span id="cb21-68"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       ├── nF12.d_18.decode.prj_18.r_4_5.posterior.count.tsv.gz</span>
<span id="cb21-69"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       ├── nF12.d_18.done</span>
<span id="cb21-70"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       ├── nF12.d_18.fit_result.tsv.gz</span>
<span id="cb21-71"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       ├── nF12.d_18.model_matrix.tsv.gz</span>
<span id="cb21-72"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       ├── nF12.d_18.model.p</span>
<span id="cb21-73"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       ├── nF12.d_18.model_selection_candidates.p</span>
<span id="cb21-74"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       ├── nF12.d_18.posterior.count.tsv.gz</span>
<span id="cb21-75"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       ├── nF12.d_18.prj_18.r_4.fit_result.tsv.gz</span>
<span id="cb21-76"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">│</span>       └── nF12.d_18.prj_18.r_4.posterior.count.tsv.gz</span>
<span id="cb21-77"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> batched.matrix.tsv.gz</span>
<span id="cb21-78"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> hexagon.d_12.tsv.gz</span>
<span id="cb21-79"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> hexagon.d_18.tsv.gz</span>
<span id="cb21-80"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">├──</span> Makefile</span>
<span id="cb21-81"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">└──</span> sort_decode.sh</span></code></pre></div>
</div>
</div>



</section>
</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-jones2025cell" class="csl-entry">
Jones, D. C., A. E. Elz, A. Hadadianpour, et al. 2025. <span>“Cell Simulation as Cell Segmentation.”</span> <em>Nature Methods</em>. <a href="https://doi.org/10.1038/s41592-025-02697-0">https://doi.org/10.1038/s41592-025-02697-0</a>.
</div>
<div id="ref-petukhov2021cell" class="csl-entry">
Petukhov, Vladimir, Rui J. Xu, Ruslan A. Soldatov, Pietro Cadinu, Konstantin Khodosevich, Jeffrey R. Moffitt, and Peter V. Kharchenko. 2021. <span>“Cell Segmentation in Imaging-Based Spatial Transcriptomics.”</span> <em>Nature Biotechnology</em>. <a href="https://doi.org/10.1038/s41587-021-01044-w">https://doi.org/10.1038/s41587-021-01044-w</a>.
</div>
<div id="ref-si2024ficture" class="csl-entry">
Si, Yichen, ChangHee Lee, Yongha Hwang, Jeong H. Yun, Weiqiu Cheng, Chun-Seok Cho, Miguel Quiros, et al. 2024. <span>“FICTURE: Scalable Segmentation-Free Analysis of Submicron-Resolution Spatial Transcriptomics.”</span> <em>Nature Methods</em> 21 (10): 1843–54. <a href="https://doi.org/10.1038/s41592-024-02415-2">https://doi.org/10.1038/s41592-024-02415-2</a>.
</div>
<div id="ref-Wu2025FastReseg" class="csl-entry">
Wu, Lidan, Joseph M. Beechem, and Patrick Danaher. 2025. <span>“Using Transcripts to Refine Image Based Cell Segmentation with FastReseg.”</span> <em>Scientific Reports</em> 15 (1): 30508. <a href="https://doi.org/10.1038/s41598-025-08733-5">https://doi.org/10.1038/s41598-025-08733-5</a>.
</div>
</div></section></div> ]]></description>
  <category>segmentation</category>
  <category>algorithms</category>
  <category>CosMx 2.0</category>
  <category>how-tos</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/transcript-segmentation/</guid>
  <pubDate>Tue, 15 Jul 2025 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/transcript-segmentation/figures/Fig1-transcript-segmentation.png" medium="image" type="image/png" height="98" width="144"/>
</item>
<item>
  <title>Recommendations for batch correction</title>
  <dc:creator>Dan McGuire</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/batchcorrection/</link>
  <description><![CDATA[ 





<section id="abstract" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Abstract</h1>
<p>This post discusses batch effects in CosMx; how they impact analyses, how to detect them, and how to correct them. We recommend Harmony <span class="citation" data-cites="harmony">(Korsunsky et al. 2019)</span> as a useful method for correcting batch effects in dimension reduction embeddings such as PCA, and demonstrate an example of how to use the software package.</p>
<p>For those in a hurry to ‘just see the code’, feel free to jump ahead to the Harmony Analysis section of this post.</p>
</section>
<section id="introduction" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Introduction</h1>
<p>When analyzing multiple samples or ‘batches’ of data collected under different technologies or sample conditions, we may need to harmonize the data in a way that preserves biological variation while minimizing technical variation.</p>
<p>For example, suppose I were interested in analyzing multiple breast cancer tissue samples, but these samples were processed in different labs, by different scientists, or with different sample prep protocols. These technical differences could subtly effect gene detection efficiency in ways that may influence or confound an analysis. In particular, PCA, which responds quickly to small systematic changes impacting large numbers of variables, is highly sensitive to batch effects. This sensitivity then cascades down to analyses depending on PCA, e.g.&nbsp;UMAP and the Leiden and Louvain algorithms.</p>
<p>To check for presence of batch effects and whether correction is required, we recommend plotting the ‘batch’ on a UMAP plot or in principal component (PC) space (link to example figure). In the presence of batch effects, we may observe that cells cluster together by batch more distinctly than they do by their biological cell type.</p>
<p>For dimension reduction and clustering analyses, there is a multitude of existing research on batch correction methodology <span class="citation" data-cites="luecken2019current">(Luecken and Theis 2019)</span>. The Harmony method <span class="citation" data-cites="harmony">(Korsunsky et al. 2019)</span> has been recommended as a best-in-class approach in several studies which benchmarked different batch correction methodology for scRNAseq <span class="citation" data-cites="tran2020benchmark">(Tran et al. 2020)</span> <span class="citation" data-cites="emmanuel2024batch">(Emmanúel Antonsson and Melsted 2024)</span> . Harmony takes as input a low-dimensional cell embedding such as PCA, and projects cells onto a new unsupervised joint embedding that groups cells by biological cell type rather than dataset-specific conditions. This Harmony embedding can be used as an input to downstream dimension reduction and clustering algorithms like UMAP<span class="citation" data-cites="umap">(Ghojogh et al. 2021)</span> and Leiden<span class="citation" data-cites="leiden">(Traag, Waltman, and Van Eck 2019)</span>.</p>
<p>For some other downstream analyses, batch effects can be explicitly handled or may be less of a concern. In the case of differential expression (DE) analysis, we could account for the technical effects by specifying ‘batch’ as a covariate in our DE models. Supervised or semi-supervised cell typing analyses that are independent of PCA dimension reductions (i.e., InSituType <span class="citation" data-cites="Danaher2022">(Danaher et al. 2022)</span>), may be less affected by batch effects. If we were to observe batch effects in this setting, one useful approach would be to perform the cell typing separately by batch before aggregating the cell type annotations.</p>
<p>In this post, we demonstrate using Harmony for batch effect correction on two 6k-plex tonsil tissue datasets; one dataset generated with CosMx 1.5, while the other generated with CosMx 2.0. The recent CosMx 2.0 release offers noticeable increases in sensitivity; often obtaining 1.5-2x the transcripts compared to the same sample processed with previous CosMx 1.5 software. In case we want to analyze a v1.5 and v2.0 dataset in the same analysis, we might consider treating this variable as a batch effect.</p>
</section>
<section id="initial-look-at-the-data" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Initial Look at the data</h1>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(data.table)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggrepel)</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Seurat.object.assay.version =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"v3"</span>)  </span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">#### Make a combined Seurat Object</span></span>
<span id="cb1-8">sem_v20 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">readRDS</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sem_v20.tiss_a.rds"</span>) <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## tonsil dataset A with CosMx v2.0</span></span>
<span id="cb1-9">sem_v15 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">readRDS</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"sem_v15.tiss_b.rds"</span>) <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## tonsil dataset B with CosMx v1.5</span></span></code></pre></div>
</div>
<section id="plot-the-two-batches" class="level2" data-number="3.1">
<h2 data-number="3.1" class="anchored" data-anchor-id="plot-the-two-batches"><span class="header-section-number">3.1</span> Plot the two batches</h2>
<p>Let’s take a quick peek at these two tissues, where unsupervised clustering has been performed independently on each:</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">xyplot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span> (cluster_column, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x_column =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"x_slide_mm"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y_column =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"y_slide_mm"</span>, </span>
<span id="cb2-2">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cls =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clusters =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, metadata, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ptsize =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plotfirst =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>, </span>
<span id="cb2-3">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alphasize =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>){</span>
<span id="cb2-4">  pd <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data.table<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">copy</span>(data.table<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(metadata))</span>
<span id="cb2-5">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.null</span>(clusters)) </span>
<span id="cb2-6">    clusters <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(pd[[cluster_column]])</span>
<span id="cb2-7">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.null</span>(plotfirst)) {</span>
<span id="cb2-8">    plotfirst <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">intersect</span>(clusters, plotfirst)</span>
<span id="cb2-9">    notplotfirst <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">setdiff</span>(clusters, plotfirst)</span>
<span id="cb2-10">    p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(pd[pd[[cluster_column]] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> plotfirst], </span>
<span id="cb2-11">                <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(.data[[x_column]], .data[[y_column]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> .data[[cluster_column]])) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-12">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> ptsize)</span>
<span id="cb2-13">    p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> pd[pd[[cluster_column]] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> </span>
<span id="cb2-14">                                    notplotfirst], <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(.data[[x_column]], .data[[y_column]], </span>
<span id="cb2-15">                                                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> .data[[cluster_column]]), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> ptsize, </span>
<span id="cb2-16">                        <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> alphasize) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()</span>
<span id="cb2-17">  }</span>
<span id="cb2-18">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb2-19">    p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(pd[pd[[cluster_column]] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> clusters], <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(.data[[x_column]], </span>
<span id="cb2-20">                                                            .data[[y_column]], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> .data[[cluster_column]])) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-21">      <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> ptsize, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> alphasize) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>()</span>
<span id="cb2-22">  }</span>
<span id="cb2-23">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.null</span>(cls)) {</span>
<span id="cb2-24">    cls <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unname</span>(pals<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alphabet</span>()), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>)</span>
<span id="cb2-25">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">any</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">suppressWarnings</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(clusters)))))) {</span>
<span id="cb2-26">      clnames <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(clusters)</span>
<span id="cb2-27">    }</span>
<span id="cb2-28">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb2-29">      clnames <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.numeric</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.character</span>(clusters)))</span>
<span id="cb2-30">    }</span>
<span id="cb2-31">    cls <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> cls[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(clusters)]</span>
<span id="cb2-32">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(cls) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> clnames</span>
<span id="cb2-33">    p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> cls, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">guide =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_legend</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">override.aes =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, </span>
<span id="cb2-34">                                                                                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)))</span>
<span id="cb2-35">  }</span>
<span id="cb2-36">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">else</span> {</span>
<span id="cb2-37">    p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> cls, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">guide =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_legend</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">override.aes =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, </span>
<span id="cb2-38">                                                                                       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)))</span>
<span id="cb2-39">  }</span>
<span id="cb2-40">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(p)</span>
<span id="cb2-41">}</span>
<span id="cb2-42"></span>
<span id="cb2-43">xyp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb2-44">cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_grid</span>(</span>
<span id="cb2-45">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xyplot</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"seurat_clusters"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metadata =</span>  sem_v20<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ptsize =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" v2.0"</span>)</span>
<span id="cb2-46">  ,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xyplot</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"seurat_clusters"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metadata =</span>  sem_v15<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ptsize =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"v1.5"</span>)</span>
<span id="cb2-47">  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb2-48">) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb2-49">  cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">panel_border</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">remove=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) </span></code></pre></div>
</details>
</div>
<div class="wider-image">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/batchcorrection/figures/xyplot_v15_v20.png" alt="Wide Image"></p>
</div>
</section>
<section id="differences-in-sensitivity-between-batches" class="level2" data-number="3.2">
<h2 data-number="3.2" class="anchored" data-anchor-id="differences-in-sensitivity-between-batches"><span class="header-section-number">3.2</span> Differences in sensitivity between batches</h2>
<p>Here, we can compute a few high-level summary stats like transcripts per cell and signal to noise ratio (SNR) for each batch.</p>
<p>We see ~2x increase in transcripts per cell with the v2.0 dataset, and higher signal to noise ratio (snr).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Comparing counts/cell</span></span>
<span id="cb3-2"></span>
<span id="cb3-3">cts_cell_1<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.5</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(sem_v15[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>counts))</span>
<span id="cb3-4">cts_cell_2<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.0</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(sem_v20[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>counts))</span>
<span id="cb3-5"></span>
<span id="cb3-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Comparing SNR</span></span>
<span id="cb3-7">snr_1<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.5</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colMeans</span>(sem_v15[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>counts)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colMeans</span>(sem_v15[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"negprobes"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>counts)) </span>
<span id="cb3-8">snr_2<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.0</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colMeans</span>(sem_v20[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>counts)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colMeans</span>(sem_v20[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"negprobes"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>counts))</span>
<span id="cb3-9"></span>
<span id="cb3-10">summary_stats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb3-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">transcripts_per_cell =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(cts_cell_1<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.5</span>, cts_cell_2<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.0</span>)</span>
<span id="cb3-12">           ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">snr =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(snr_1<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.5</span>, snr_2<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.0</span>)</span>
<span id="cb3-13">           ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">version =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"v1.5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"v2.0"</span>))[]</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(summary_stats[])</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>   transcripts_per_cell      snr version
                  &lt;num&gt;    &lt;num&gt;  &lt;char&gt;
1:             448.3808 3.770205    v1.5
2:            1026.5255 6.043639    v2.0</code></pre>
</div>
</div>
</section>
</section>
<section id="combining-the-data" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Combining the data</h1>
<p>Here we’ll combine the two datasets and prepare to harmonize them.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Get overlapping genes (all the genes in this case) to combine the two datasets</span></span>
<span id="cb6-2">overlapping_genes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">intersect</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(sem_v20), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(sem_v15))</span>
<span id="cb6-3">combined_metadata <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data.table<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rbindlist</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb6-4">  sem_v20<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data</span>
<span id="cb6-5">  ,sem_v15<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data</span>
<span id="cb6-6">  )</span>
<span id="cb6-7">  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">use.names=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb6-8">combined_metadata[cell_ID <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(sem_v15),batchid<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"v1.5"</span>]</span>
<span id="cb6-9">combined_metadata[cell_ID <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(sem_v20),batchid<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"v2.0"</span>]</span>
<span id="cb6-10"></span>
<span id="cb6-11"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Create a combined seurat object</span></span>
<span id="cb6-12">sem_comb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb6-13">Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CreateSeuratObject</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">counts =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(sem_v20[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts[overlapping_genes,]</span>
<span id="cb6-14">                                          ,sem_v15[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts[overlapping_genes,])</span>
<span id="cb6-15">                           ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">meta.data =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(combined_metadata</span>
<span id="cb6-16">                                                   ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">row.names =</span> combined_metadata<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell_ID)</span>
<span id="cb6-17">                           )</span>
<span id="cb6-18"></span>
<span id="cb6-19"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### offset the x-coordinate of v1.5 to </span></span>
<span id="cb6-20"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### more easily plot both tissues side-by-side</span></span>
<span id="cb6-21">x_offset <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(sem_comb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x_slide_mm[sem_comb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>batchid<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"v2.0"</span>]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb6-22">sem_comb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x_slide_mm[sem_comb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>batchid<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"v1.5"</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  sem_comb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>x_slide_mm[sem_comb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>batchid<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"v1.5"</span>]  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> x_offset</span></code></pre></div>
</div>
</section>
<section id="tldr" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Harmony Analysis</h1>
<p>With our combined dataset containing all batches, we’ll perform a few standard tertiary analysis steps using the <code>Seurat</code> package. After principal component analysis, we will pass the PC embeddings to Harmony for batch correction.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Normalize, Scale, and Run PCA on the combined dataset </span></span>
<span id="cb7-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">#### (standard data analysis steps so far)</span></span>
<span id="cb7-3">sem_comb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FindVariableFeatures</span>(sem_comb)</span>
<span id="cb7-4">normed <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">LogNormalize</span>(sem_comb[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts</span>
<span id="cb7-5">                                 ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scale.factor =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(sem_comb[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts))</span>
<span id="cb7-6">                                 )</span>
<span id="cb7-7">sem_comb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetAssayData</span>(sem_comb, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">layer=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new.data =</span> normed)</span>
<span id="cb7-8">sem_comb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScaleData</span>(sem_comb)</span>
<span id="cb7-9">sem_comb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RunPCA</span>(sem_comb)</span></code></pre></div>
</div>
<p>Now we run harmony with our PCA embeddings, specifying <code>"batchid"</code> as our variable to adjust for (our indicator for v1.5 and v2.0).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">harmony_embeddings <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> harmony<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RunHarmony</span>(sem_comb[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pca"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cell.embeddings</span>
<span id="cb8-2">                                          ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">meta_data =</span> sem_comb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data</span>
<span id="cb8-3">                                          ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">vars_use =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"batchid"</span></span>
<span id="cb8-4">                                          )</span></code></pre></div>
</div>
<p>The <code>harmony_embeddings</code> returned are a <code>cells</code> <img src="https://latex.codecogs.com/png.latex?%5Ctimes"> <code># of pc's</code> dimension matrix, with the same structure as the PCA embeddings.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb9-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(harmony_embeddings)</span>
<span id="cb9-2">harmony_embeddings[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code> num [1:405690, 1:50] -0.6465 2.4765 -0.8616 -0.0705 1.3351 ...
 - attr(*, "dimnames")=List of 2
  ..$ : chr [1:405690] "c_1_204_1008" "c_1_204_1026" "c_1_204_1032" "c_1_204_1037" ...
  ..$ : chr [1:50] "PC_1" "PC_2" "PC_3" "PC_4" ...</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>                    PC_1       PC_2       PC_3       PC_4       PC_5
c_1_204_1008 -0.64646187 -0.2827039 -2.8347802  1.6610461  2.2474144
c_1_204_1026  2.47653185  0.5783416 -0.4183124  0.9130872 -1.6640251
c_1_204_1032 -0.86158008 -3.1340938 -7.1958762 -3.2585168  1.8184731
c_1_204_1037 -0.07046239  0.8755237 -1.8787555  0.8000141  2.5718387
c_1_204_1046  1.33506948  1.1483278 -1.8171200  1.0649917  3.6876637
c_1_204_1051  2.10865793  1.8783302 -0.9869917  1.3061003  5.2610306
c_1_204_1068 -0.12255521 -1.0006297 -3.8287685  0.2517314  2.7422425
c_1_204_1099 -0.09401621 -0.3220125  0.3505044 -0.5086164  4.4133441
c_1_204_1100  1.21582681  1.8189899  0.1252721 -0.4560591  4.1331302
c_1_204_1110  2.92880860  1.4376377 -1.6135393  2.6411662 -0.4019986</code></pre>
</div>
</div>
<p>Here are what the original PCA embeddings look like for comparison:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(sem_comb[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pca"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cell.embeddings)</span>
<span id="cb12-2">sem_comb[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pca"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cell.embeddings[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>]</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code> num [1:405690, 1:50] -1.117 1.994 -1.456 -0.476 0.869 ...
 - attr(*, "dimnames")=List of 2
  ..$ : chr [1:405690] "c_1_204_1008" "c_1_204_1026" "c_1_204_1032" "c_1_204_1037" ...
  ..$ : chr [1:50] "PC_1" "PC_2" "PC_3" "PC_4" ...</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>                   PC_1       PC_2       PC_3       PC_4       PC_5
c_1_204_1008 -1.1173966 -0.6867905 -2.8949895  1.6105015  2.9180760
c_1_204_1026  1.9937914  0.2274147 -0.3855459  0.8213885 -1.0934278
c_1_204_1032 -1.4558828 -3.6307548 -7.3110656 -3.5378910  2.5581377
c_1_204_1037 -0.4759800  0.5822518 -1.8031810  0.6380289  3.0891367
c_1_204_1046  0.8686478  0.7673256 -1.8542354  0.9790450  4.3717053
c_1_204_1051  1.7701286  1.6232100 -0.9709824  1.1699966  6.0201625
c_1_204_1068 -0.6146554 -1.4230712 -3.9015371  0.1792131  3.4066027
c_1_204_1099 -0.5735693 -0.6600411  0.3747940 -0.6467651  4.9810832
c_1_204_1100  0.8734515  1.5610131  0.1432252 -0.5936082  4.8778765
c_1_204_1110  2.4355067  1.0686404 -1.6010894  2.5582519  0.1892688</code></pre>
</div>
</div>
</section>
<section id="umap-and-clustering-with-harmony" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> UMAP and clustering with harmony</h1>
<p>Let’s continue the analysis. We’ll use the Harmony embeddings rather than PCA embeddings to generate a UMAP and perform unsupervised clustering on the combined dataset.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## (minor side-note), this helper function `make_umap` calls the same package </span></span>
<span id="cb15-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## and function as Seurat::RunUMAP, but also returns the </span></span>
<span id="cb15-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## 'nearest-neighbor graph' used in the UMAP algorithm.</span></span>
<span id="cb15-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Using the same nearest neighbor graph for clustering and UMAP, </span></span>
<span id="cb15-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## can give better concordance between UMAP and unsupervised clusters.</span></span>
<span id="cb15-6"></span>
<span id="cb15-7">make_umap <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(pcaobj, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min_dist=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_neighbors=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metric=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cosine"</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"UMAP_"</span> ){</span>
<span id="cb15-8">  ump <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb15-9">    uwot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">umap</span>(pcaobj<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>reduction.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cell.embeddings</span>
<span id="cb15-10">               ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_neighbors =</span> n_neighbors</span>
<span id="cb15-11">               ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nn_method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"annoy"</span></span>
<span id="cb15-12">               ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metric =</span> metric</span>
<span id="cb15-13">               ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min_dist =</span> min_dist</span>
<span id="cb15-14">               ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ret_extra =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fgraph"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nn"</span>)</span>
<span id="cb15-15">               ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">verbose =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb15-16">  </span>
<span id="cb15-17">  umpgraph <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> ump<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>fgraph</span>
<span id="cb15-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dimnames</span>(umpgraph) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(ump<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>nn[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>idx), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(ump<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>nn[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>idx))</span>
<span id="cb15-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colnames</span>(ump<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>embedding) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(key, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)) </span>
<span id="cb15-20">  ump <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CreateDimReducObject</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">embeddings =</span> ump<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>embedding, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> key)</span>
<span id="cb15-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">grph =</span> umpgraph</span>
<span id="cb15-22">              ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ump =</span> ump))</span>
<span id="cb15-23">}</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##### Run helper function to make a umap and return the </span></span>
<span id="cb16-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##### nearest-neighbors graph used for unsupervised clustering.</span></span>
<span id="cb16-3">umapharmony <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_umap</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pcaobj =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb16-4">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reduction.data =</span> Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">CreateDimReducObject</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">embeddings =</span> harmony_embeddings)</span>
<span id="cb16-5">  ))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">sem_comb[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"umapharmony"</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> umapharmony<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ump</span>
<span id="cb17-2">sem_comb[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"umapharmonygrph"</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Graph</span>(umapharmony<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>grph)</span>
<span id="cb17-3">sem_comb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FindClusters</span>(sem_comb, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">graph.name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"umapharmonygrph"</span>)</span>
<span id="cb17-4">sem_comb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>clusters_unsup_harmony <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sem_comb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>seurat_clusters</span></code></pre></div>
</div>
<p>Here’s another look at the tissues, with clustering results generated downstream of the Harmony embeddings.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1">xyp_harmony <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb18-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xyplot</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"clusters_unsup_harmony"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metadata =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(sem_comb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data),<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ptsize =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb18-3">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"After integration: v2.0 (left) and v1.5 (right)"</span>)</span>
<span id="cb18-4"></span>
<span id="cb18-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(xyp_harmony)</span></code></pre></div>
</details>
</div>
<div class="wider-image">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/batchcorrection/figures/xyplotharmony_v15_v20.png" alt="Wide Image"></p>
</div>
</section>
<section id="umap-and-clustering-without-harmony" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> UMAP and clustering without harmony</h1>
<p>Here we can re-make the UMAP and cluster without batch correction for sake of comparison.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">##### Run helper function to make a umap and return the nearest-neighbors graph.</span></span>
<span id="cb19-2">pcaobj <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sem_comb[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pca"</span>]]</span>
<span id="cb19-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(pcaobj)</span>
<span id="cb19-4">umapobj <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_umap</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reduction.data =</span> pcaobj))</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">sem_comb[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"umap"</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> umapobj<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>ump</span>
<span id="cb20-2">sem_comb[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"umapgrph"</span>]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Graph</span>(umapobj[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grph"</span>]])</span>
<span id="cb20-3"></span>
<span id="cb20-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Unsupervised clustering</span></span>
<span id="cb20-5">sem_comb <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FindClusters</span>(sem_comb, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">graph.name =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"umapgrph"</span>)</span>
<span id="cb20-6">sem_comb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>clusters_unsup_unintegrated <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sem_comb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>seurat_clusters</span></code></pre></div>
</div>
</section>
<section id="pcplotbatch" class="level1" data-number="8">
<h1 data-number="8"><span class="header-section-number">8</span> Comparison with and without integration</h1>
<p>Plotting the first two PC’s, colored by <code>batchid</code>, it looks like the v1.5 data may span a more similar domain of PC1 and PC2 space after Harmony, indicating better integration.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">set.seed</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">123</span>)</span>
<span id="cb21-2">shuffle_order <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sample</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(harmony_embeddings)) <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## shuffle cell order for plotting</span></span>
<span id="cb21-3">cls <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#1f77b4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#ff7f0e"</span>)</span>
<span id="cb21-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(cls) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"v2.0"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"v1.5"</span>)</span>
<span id="cb21-5"></span>
<span id="cb21-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all.equal</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(harmony_embeddings), sem_comb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cell_ID)</span>
<span id="cb21-7">pc1vs2_harmony <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb21-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(sem_comb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data)[,.(cell_ID, batchid, x_slide_mm, y_slide_mm)]</span>
<span id="cb21-9">      ,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(harmony_embeddings))</span>
<span id="cb21-10"></span>
<span id="cb21-11">harmony_plt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb21-12"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(pc1vs2_harmony[shuffle_order], <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> PC_1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> PC_2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>batchid)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb21-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> cls) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb21-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb21-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb21-16">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_legend</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">override.aes=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)))</span>
<span id="cb21-17"></span>
<span id="cb21-18">pc1vs2_regular <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb21-19"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(sem_comb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data)[,.(cell_ID, batchid, x_slide_mm, y_slide_mm)]</span>
<span id="cb21-20">      ,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(sem_comb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>reductions<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pca<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cell.embeddings))</span>
<span id="cb21-21"></span>
<span id="cb21-22">regular_pca_plt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb21-23"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(pc1vs2_regular[shuffle_order], <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> PC_1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> PC_2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>batchid)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb21-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> cls) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb21-25">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb21-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb21-27">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_legend</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">override.aes=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)))</span>
<span id="cb21-28"></span>
<span id="cb21-29">pc_comparison_plt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb21-30">cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_grid</span>(harmony_plt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"integrated using harmony"</span>)</span>
<span id="cb21-31">                   ,regular_pca_plt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"un-integrated"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb21-32">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb21-33">  cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">panel_border</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">remove=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) </span>
<span id="cb21-34"></span>
<span id="cb21-35"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(pc_comparison_plt)</span></code></pre></div>
</details>
</div>
<div class="wider-image">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/batchcorrection/figures/pc_comparison_plot.png" alt="Wide Image"></p>
</div>
<p>Plotting the UMAP, colored by <code>batchid</code>, there doesn’t appear to be an enourmous difference (which is not a bad thing), but it does look like there may be areas of the UMAP better covered by both datasets (less batch-specific) after Harmony integration.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1">umap_harmony <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb22-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(sem_comb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data)[,.(cell_ID, batchid, x_slide_mm, y_slide_mm)]</span>
<span id="cb22-3">      ,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(sem_comb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>reductions<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>umapharmony<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cell.embeddings))</span>
<span id="cb22-4"></span>
<span id="cb22-5">harmony_plt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb22-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(umap_harmony[shuffle_order], <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> UMAP_1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> UMAP_2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>batchid)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb22-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> cls) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb22-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb22-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb22-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_legend</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">override.aes=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)))</span>
<span id="cb22-11"></span>
<span id="cb22-12">umap_regular <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb22-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(sem_comb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data)[,.(cell_ID, batchid, x_slide_mm, y_slide_mm)]</span>
<span id="cb22-14">      ,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(sem_comb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>reductions<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>umap<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cell.embeddings))</span>
<span id="cb22-15"></span>
<span id="cb22-16">regular_umap_plt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb22-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(umap_regular[shuffle_order], <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> umap_1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> umap_2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>batchid)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb22-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> cls) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb22-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb22-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb22-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_legend</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">override.aes=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)))</span>
<span id="cb22-22"></span>
<span id="cb22-23">umap_comparison_plt <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb22-24">cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_grid</span>(harmony_plt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"integrated using harmony"</span>)</span>
<span id="cb22-25">                   ,regular_umap_plt <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"un-integrated"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb22-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb22-27">  cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">panel_border</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">remove=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) </span>
<span id="cb22-28"></span>
<span id="cb22-29"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(umap_comparison_plt)</span></code></pre></div>
</details>
</div>
<div class="wider-image">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/batchcorrection/figures/umap_comparison_plot.png" alt="Wide Image"></p>
</div>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1">umap_harmony_clusters <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb23-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(sem_comb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data)[,.(cell_ID, clusters_unsup_harmony, x_slide_mm, y_slide_mm)]</span>
<span id="cb23-3">      ,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(sem_comb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>reductions<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>umapharmony<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cell.embeddings))</span>
<span id="cb23-4"></span>
<span id="cb23-5">harmony_plt_clusters <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb23-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(umap_harmony_clusters, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> UMAP_1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> UMAP_2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>clusters_unsup_harmony)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb23-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unname</span>(pals<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alphabet</span>())) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb23-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb23-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb23-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_legend</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">override.aes=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)))</span>
<span id="cb23-11"></span>
<span id="cb23-12">umap_regular_clusters <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb23-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(sem_comb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data)[,.(cell_ID, clusters_unsup_unintegrated, x_slide_mm, y_slide_mm)]</span>
<span id="cb23-14">      ,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(sem_comb<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>reductions<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>umap<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>cell.embeddings))</span>
<span id="cb23-15"></span>
<span id="cb23-16">regular_umap_plt_clusters <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb23-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(umap_regular_clusters, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> umap_1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> umap_2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span>clusters_unsup_unintegrated)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">shape=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb23-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_color_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unname</span>(pals<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alphabet</span>())) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb23-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb23-20">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb23-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guides</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">guide_legend</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">override.aes=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">alpha=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)))</span>
<span id="cb23-22"></span>
<span id="cb23-23">umap_comparison_plt_clusters <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb23-24">cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_grid</span>(harmony_plt_clusters <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"integrated using harmony"</span>)</span>
<span id="cb23-25">                   ,regular_umap_plt_clusters <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"un-integrated"</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb23-26">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb23-27">  cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">panel_border</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">remove=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) </span>
<span id="cb23-28"></span>
<span id="cb23-29"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(umap_comparison_plt_clusters)</span></code></pre></div>
</details>
</div>
<div class="wider-image">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/batchcorrection/figures/umap_comparison_plot_clusters.png" alt="Wide Image"></p>
</div>
</section>
<section id="conclusion" class="level1" data-number="9">
<h1 data-number="9"><span class="header-section-number">9</span> Conclusion</h1>
<p>In this post we demonstrated applying the batch effect correction technique ‘Harmony’ to two 6K-plex tonsil tissue datasets generated with very different sensitivity performance. In general, the impact of batch effects may depend on the severity of the technical artifact, as well as the scope and depth of the analysis. In the event that one wishes to analyze multiple samples together which were generated under different technical conditions, we recommend plotting the technical batch variable in UMAP or PC space as a qualitative diagnostic, and inspecting whether cells are clustered by ‘batch’. For this example, the batch effect between our two datasets was visually noticeable when plotted on a UMAP and the first two principal components. Cells were visually less segregated by batch after the correction was applied.</p>



</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-Danaher2022" class="csl-entry">
Danaher, Patrick, Edward Zhao, Zhi Yang, David Ross, Mark Gregory, Zach Reitz, Tae K. Kim, et al. 2022. <span>“Insitutype: Likelihood-Based Cell Typing for Single Cell Spatial Transcriptomics.”</span> <em>bioRxiv</em>. <a href="https://doi.org/10.1101/2022.10.19.512902">https://doi.org/10.1101/2022.10.19.512902</a>.
</div>
<div id="ref-emmanuel2024batch" class="csl-entry">
Emmanúel Antonsson, Sindri, and Páll Melsted. 2024. <span>“Batch Correction Methods Used in Single Cell RNA-Sequencing Analyses Are Often Poorly Calibrated.”</span> <em>bioRxiv</em>, 2024–03.
</div>
<div id="ref-umap" class="csl-entry">
Ghojogh, Benyamin, Ali Ghodsi, Fakhri Karray, and Mark Crowley. 2021. <span>“Uniform Manifold Approximation and Projection (UMAP) and Its Variants: Tutorial and Survey.”</span> <em>arXiv Preprint arXiv:2109.02508</em>.
</div>
<div id="ref-harmony" class="csl-entry">
Korsunsky, Ilya, Nghia Millard, Jean Fan, Kamil Slowikowski, Fan Zhang, Kevin Wei, Yuriy Baglaenko, Michael Brenner, Po-ru Loh, and Soumya Raychaudhuri. 2019. <span>“Fast, Sensitive and Accurate Integration of Single-Cell Data with Harmony.”</span> <em>Nature Methods</em> 16 (12): 1289–96.
</div>
<div id="ref-luecken2019current" class="csl-entry">
Luecken, Malte D, and Fabian J Theis. 2019. <span>“Current Best Practices in Single-Cell RNA-Seq Analysis: A Tutorial.”</span> <em>Molecular Systems Biology</em> 15 (6): e8746.
</div>
<div id="ref-leiden" class="csl-entry">
Traag, Vincent A, Ludo Waltman, and Nees Jan Van Eck. 2019. <span>“From Louvain to Leiden: Guaranteeing Well-Connected Communities.”</span> <em>Scientific Reports</em> 9 (1): 1–12.
</div>
<div id="ref-tran2020benchmark" class="csl-entry">
Tran, Hoa Thi Nhu, Kok Siong Ang, Marion Chevrier, Xiaomeng Zhang, Nicole Yee Shin Lee, Michelle Goh, and Jinmiao Chen. 2020. <span>“A Benchmark of Batch-Effect Correction Methods for Single-Cell RNA Sequencing Data.”</span> <em>Genome Biology</em> 21: 1–32.
</div>
</div></section></div> ]]></description>
  <category>batch correction</category>
  <category>data integration</category>
  <category>CosMx 2.0</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/batchcorrection/</guid>
  <pubDate>Thu, 10 Jul 2025 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/batchcorrection/figures/thumbnail.png" medium="image" type="image/png" height="72" width="144"/>
</item>
<item>
  <title>Guide to comparing data from different CosMx® panels</title>
  <dc:creator>Patrick Danaher</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/panel-comparison/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Choosing the right panel for a spatial transcriptomics study is not always a trivial exercise. Higher-plex panels have the obvious appeal of more data per cell and a view into a greater scope of biology, while lower-plex panels are lower-cost and faster to run. To help choose a panel, investigators often run the same tissue through multiple panels. Here we recommend analyses for these datasets.</p>
<p>There are a <em>lot</em> of ways to compare two datasets, and a lot of energy is spent comparing metrics like plex, counts per cell, counts per gene per cell, background levels, segmentation accuracy, etc… (Perhaps even more energy is spent arguing about which of these metrics are most important.) What actually matters, of course, isn’t any single metric: it’s the <em>richness of biological insight</em> you are able to extract from a dataset. While data quality is important, its importance lies entirely in how it impacts your ability to extract biological conclusions from your data. To get at the rather broad concept of “biological richness”, we suggest two standard analyses:</p>
<ol type="1">
<li>How deep and clean are the cell typing results?</li>
<li>How much do you learn from a differential expression analysis?</li>
</ol>
<p>We suggest these comparisons because they capture the two key phases of most analyses. You begin with cell typing, characterizing the basic layout of your tissue. Then, perhaps after exploratory analyses, you ask a specific biological question. Very often, this question takes the form of a differential expression analysis. For example, “How do tumor cells respond when proximal to T-cells?”, “How do microglia react to amyloid beta plaques?”, or “How do intratumoral macrophages differ in responders vs.&nbsp;non-responders?” Thus by performing a relevant differential expression analysis, we can get a sense of the richness of results produced by two panels.</p>
<p>To demonstrate this approach, compare CosMx Human 6k Discovery Panel results and CosMx Human Whole Transcriptome Panel results collected from serial sections from a colorectal tumor. Use the code below as a template for running similar comparisons in your own data (after QC, normalization, etc…).</p>
</section>
<section id="cell-typing" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Cell typing</h1>
<section id="gaining-a-gestalt-of-cell-type-resolution" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="gaining-a-gestalt-of-cell-type-resolution"><span class="header-section-number">2.1</span> Gaining a gestalt of cell type resolution</h2>
<p>First, we’ll ask a simple, high-level question: how many cell types can be detected, and how well-resolved are they? Our goal here is not to carefully validate every cell type call; rather, we just want to get a sense of how rich and crisp the cell typing results are. Our usual expectation is that a given tissue has 10-20 highly distinct cell types, and that most panels are sufficient to resolve them.</p>
<p>(Beyond broad cell types, we may wish for more nuanced dissection of cell states. We will get at this ability with an analysis of T-cell subtyping accuracy, and with differential expression analysis, which characterizes changes within a cell type across space.)</p>
<p>To get at a general sense of the cell type granularity you can see with each panel, we’ll simply run unsupervised clustering and UMAP. Below is code to quickly perform these steps beginning with a Seurat object exported from AtoMx<sup>®</sup> SIP:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get hvgs, scale and run PCA:</span></span>
<span id="cb1-2">seu <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">NormalizeData</span>(seu) </span>
<span id="cb1-3">seu <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FindVariableFeatures</span>(seu, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">selection.method =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"vst"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nfeatures =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3000</span>)</span>
<span id="cb1-4">seu <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ScaleData</span>(seu, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">VariableFeatures</span>(seu))</span>
<span id="cb1-5">seu <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RunPCA</span>(seu, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">features =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">VariableFeatures</span>(seu))</span>
<span id="cb1-6"></span>
<span id="cb1-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># cluster:</span></span>
<span id="cb1-8">seu <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">FindClusters</span>(seu, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">resolution =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># umap:</span></span>
<span id="cb1-11">seu <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">RunUMAP</span>(seu, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dims =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">30</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n.neighbors =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">40</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metric =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cosine"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">min.dist =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">spread =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot umap and cell types:</span></span>
<span id="cb1-14">distinct_colors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb1-15">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#e6194b"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#3cb44b"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#ffe119"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#0082c8"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#f58231"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#911eb4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#46f0f0"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#f032e6"</span>,</span>
<span id="cb1-16">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#d2f53c"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#fabebe"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#008080"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#e6beff"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#aa6e28"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#fffac8"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#800000"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#aaffc3"</span>,</span>
<span id="cb1-17">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#808000"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#ffd8b1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#000080"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#808080"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FFFFFF"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#000000"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#a9a9a9"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#DC143C"</span>,</span>
<span id="cb1-18">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#00FFFF"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#7FFF00"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FF7F50"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#6495ED"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#DC143C"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#00CED1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FFD700"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#ADFF2F"</span>,</span>
<span id="cb1-19">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#4B0082"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FF69B4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#CD5C5C"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#20B2AA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#9370DB"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#3CB371"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FF4500"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#DA70D6"</span>,</span>
<span id="cb1-20">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#7B68EE"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#00FA9A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#B22222"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#5F9EA0"</span></span>
<span id="cb1-21">)</span>
<span id="cb1-22"></span>
<span id="cb1-23"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">DimPlot</span>(seu, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rep</span>(distinct_colors, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">NoLegend</span>()</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/panel-comparison/figures/umaps.png" class="img-fluid figure-img" width="614"></p>
</figure>
</div>
</div>
</div>
<p>While the UMAP plots appear quite different at first, we see on closer examination that the broad structure is similar in both cases, with the same islands and bridges and largely the same clustering results in both datasets. If we were inclined to do so, modifying the UMAP parameters could probably make either dataset more strongly resemble the other. So in this example, our check for cell type resolution comes in reassuringly as a tie.</p>
<p>For a more thorough evaluation of cell typing quality, consider the following additional analyses:</p>
<ul>
<li>Plot cell types in physical space and confirm biological sanity</li>
<li>Run a marker ID heatmap and confirm that markers for distinct cell types concentrate in different clusters.</li>
</ul>
</section>
<section id="evaluating-accuracy-of-fine-grained-cell-typing" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="evaluating-accuracy-of-fine-grained-cell-typing"><span class="header-section-number">2.2</span> Evaluating accuracy of fine-grained cell typing</h2>
<p>We also want to assess the quality of cell typing. For this comparison, we’ll focus on immune cells, which are convenient because there is widespread agreement about their marker genes and because they appear in most tissues. If your tissue in question has very few immune cells (say, &lt;2000), you may want to assess cell typing accuracy with other cell types.</p>
<p>For immune cell typing, we recommend our newly-released method <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/immune-cell-typing-smooth/" target="_blank">HieraType</a>.</p>
<p>Use the below code to quickly identify and subtype immune cells, then produce a heatmap of marker genes. This code picks up where the previous left off. Specifically, it assumes we have a Seurat object, including UMAP results. See the HieraType package documentation for how to run outside the Seurat ecosystem.</p>
<p>Note: to prevent background counts from confusing the evaluation of marker heatmaps, we’ll subtract background from each cluster’s mean expression profile prior to plotting. A cluster’s mean negprobe counts gives us a fairly accurate estimate of the level of background in its marker genes counts.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># install HieraType:</span></span>
<span id="cb2-2"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> (<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span>) {</span>
<span id="cb2-3">  remotes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">install_github</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Nanostring-Biostats/CosMx-Analysis-Scratch-Space"</span>, </span>
<span id="cb2-4">                          <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">subdir =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_code/HieraType"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ref =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Main"</span>)</span>
<span id="cb2-5">}</span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># load package:</span></span>
<span id="cb2-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(HieraType)</span>
<span id="cb2-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># define a pipeline to automatically call broad cell types then proceed through fine T-cell subtypes:</span></span>
<span id="cb2-11">ct_pipeline <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_pipeline</span>(</span>
<span id="cb2-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">markerslists =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l1"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> HieroType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_l1,</span>
<span id="cb2-13">                      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l2"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> HieroType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_immunemajor,</span>
<span id="cb2-14">                      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> HieroType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_tcellmajor,</span>
<span id="cb2-15">                      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt4"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> HieroType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_cd4tminor,</span>
<span id="cb2-16">                      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt8"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> HieroType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_cd8tminor</span>
<span id="cb2-17">  ),</span>
<span id="cb2-18">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">priors =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l2"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l1"</span>,</span>
<span id="cb2-19">                 <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l2"</span>,</span>
<span id="cb2-20">                 <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt4"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt"</span>,</span>
<span id="cb2-21">                 <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt8"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt"</span></span>
<span id="cb2-22">  ),</span>
<span id="cb2-23">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">priors_category =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l2"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"immune"</span>,</span>
<span id="cb2-24">                         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tcell"</span>,</span>
<span id="cb2-25">                         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt4"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd4t"</span>,</span>
<span id="cb2-26">                         <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt8"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd8t"</span></span>
<span id="cb2-27">  )</span>
<span id="cb2-28">)</span>
<span id="cb2-29"></span>
<span id="cb2-30">htres <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span>  HieroType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">run_pipeline</span>(</span>
<span id="cb2-31">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pipeline =</span> ct_pipeline,</span>
<span id="cb2-32">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">counts_matrix =</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(seu[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts),</span>
<span id="cb2-33">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">adjacency_matrix =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as</span>(seu<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>graphs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>umapgrph, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dgCMatrix"</span>)</span>
<span id="cb2-34">)</span>
<span id="cb2-35"></span>
<span id="cb2-36"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># primary result: the cell type calls and posterior probabilities:</span></span>
<span id="cb2-37">probdf <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> htres<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>post_probs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>l1</span>
<span id="cb2-38"></span>
<span id="cb2-39"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## prepare data for marker gene heatmap:</span></span>
<span id="cb2-40">fc_subclus_ctl_gran <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clusterwise_foldchange_metrics</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">counts =</span> seu[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts,</span>
<span id="cb2-41">                                                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metadata =</span> htres<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>post_probs[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]],</span>
<span id="cb2-42">                                                      <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cluster_column =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltype_granular"</span></span>
<span id="cb2-43">)</span>
<span id="cb2-44"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># subtract background from the mean per-cluster expression profiles:</span></span>
<span id="cb2-45"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> (name <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(htres<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>post_probs[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>celltype_granular)) {</span>
<span id="cb2-46">  isthiscelltype <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> htres<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>post_probs[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>celltype_granular <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> name</span>
<span id="cb2-47">  meannegthiscelltype <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(seu<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>assays<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>negprobes<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>counts[, isthiscelltype])</span>
<span id="cb2-48">  </span>
<span id="cb2-49">  fc_subclus_ctl_gran<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cluster_expr[fc_subclus_ctl_gran<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cluster <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> name] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb2-50">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pmax</span>(fc_subclus_ctl_gran<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cluster_expr[fc_subclus_ctl_gran<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cluster <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> name] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> meannegthiscelltype, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb2-51">}</span>
<span id="cb2-52"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># create the heatmap:</span></span>
<span id="cb2-53">hm_unsup <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">marker_heatmap</span>(fc_subclus_ctl_gran,</span>
<span id="cb2-54">                           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">extras =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD3D"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FOXP3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD8B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD8A"</span>)</span>
<span id="cb2-55">)</span>
<span id="cb2-56"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(hm_unsup)</span></code></pre></div>
</div>
<p>The marker heatmaps from both datasets are below, first 6k, then WTX:</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/panel-comparison/figures/marker_heatmap_sixk.png" class="img-fluid figure-img" width="1950"></p>
</figure>
</div>
</div>
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/panel-comparison/figures/marker_heatmap_wtx.png" class="img-fluid figure-img" width="1950"></p>
</figure>
</div>
</div>
</div>
<p>For most purposes, we won’t care about small differences between these heatmaps; rather, we just want to check that both sets of cell typing results are sane at an equivalently granular level. Comparing the marker gene heatmaps from both datasets, we see basic sanity in both cases, and cleaner marker profiles in the WTX data, suggesting either more accurate cell typing or better cell segmentation.</p>
<p>We’ll also want to look at our cell type calls in space as a final sanity check.</p>
</section>
</section>
<section id="differential-expression-analysis" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Differential expression analysis</h1>
<p>Spatial analyses often culminate in a differential expression analysis investigating how a cell type changes based on its spatial context. Below we give an easily-modifiable framework for such an analysis. The below code is designed to be simple and quick. For optimal DE analyses, see the R package smiDE, described <a href="https://www.biorxiv.org/content/10.1101/2024.08.02.606405v2.abstract" target="_blank">here</a>.</p>
<p>In our example, we’ll look at how macrophages vary based on proximity to vasculature, which we detect as endothelial cells.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example DE question: </span></span>
<span id="cb3-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># How does cell type 1 change in response to neighboring cells of cell type 2?</span></span>
<span id="cb3-3"></span>
<span id="cb3-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># designate which cells are cell type 1 and 2:</span></span>
<span id="cb3-5">is1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> probdf<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>celltype_granular <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"macrophage"</span></span>
<span id="cb3-6">is2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> probdf<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>celltype_granular <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"endothelial"</span></span>
<span id="cb3-7"></span>
<span id="cb3-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Special case: for a cell type where we care about structures, e.g. blood vessels</span></span>
<span id="cb3-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># or epithelial walls, we can discard lonely cells to focus on distance to structures. </span></span>
<span id="cb3-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># The below function winnows down a set of cells to only those belonging to decent-sized</span></span>
<span id="cb3-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># groups in space. </span></span>
<span id="cb3-12">inastructure <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(xy, inds, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">eps =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">minPts =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>) {</span>
<span id="cb3-13">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' xy: matrix of xy positions</span></span>
<span id="cb3-14">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' inds: logical vector saying which elements of xy are the cell type in question</span></span>
<span id="cb3-15">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' eps: radius argument in dbscan</span></span>
<span id="cb3-16">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' minPts: minimum cluster size to keep</span></span>
<span id="cb3-17">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#' returns a logical vector like inds, but reporting membership in spatial clusters of size &gt;= minPts</span></span>
<span id="cb3-18">  </span>
<span id="cb3-19">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># run dbscan clustering of positions:</span></span>
<span id="cb3-20">  db <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> dbscan<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dbscan</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> xy[inds, ], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">eps =</span> eps, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">minPts =</span> minPts)</span>
<span id="cb3-21">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># report all positions that are part of a cluster:</span></span>
<span id="cb3-22">  keep <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> inds</span>
<span id="cb3-23">  keep[inds][db<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cluster <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb3-24">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(keep)</span>
<span id="cb3-25">}</span>
<span id="cb3-26"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># only keep cell type 2 cells that fall in a structure of at least 5 cells:</span></span>
<span id="cb3-27">is2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">inastructure</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xy =</span> xy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">inds =</span> is2, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">eps =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">minPts =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb3-28"></span>
<span id="cb3-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># plot their layouts:</span></span>
<span id="cb3-30"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(xy, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"red"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"blue"</span>)[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> is1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> is2],</span>
<span id="cb3-31">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.15</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (is1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> is2), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">asp =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/panel-comparison/figures/example layout.png" class="img-fluid figure-img" width="1500"></p>
</figure>
</div>
</div>
</div>
<p>We see macrophages spread throughout the tissue, and endothelial cells at the border of the colon epithelium.</p>
<p>There are a number of ways to quantify proximity to a cell type. We can:</p>
<ul>
<li>Count how many of the cell type falls in each cell’s neighborhood</li>
<li>Measure each cell’s distance to the nearest member of the cell type</li>
<li>Treat the above variables as continuous, dichotomize them into high/low, or break them into discrete bins.</li>
</ul>
<p>All the above approaches are valid. Below we’ll demonstrate calculation of all approaches, then run DE using continuous number of endothelial neighbors.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get distance to nearest cell of cell type 2:</span></span>
<span id="cb4-2">neighbors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> FNN<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get.knnx</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> xy[is2, ], </span>
<span id="cb4-3">                           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">query =</span> xy, </span>
<span id="cb4-4">                           <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">k =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">20</span>)</span>
<span id="cb4-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># record various metrics of proximity:</span></span>
<span id="cb4-6">proxdf <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb4-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">dist_to_celltype =</span> neighbors<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>nn.dist[, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>],</span>
<span id="cb4-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">neighbor_count =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowSums</span>(neighbors<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>nn.dist <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.02</span>)</span>
<span id="cb4-9">)</span>
<span id="cb4-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># log-transformed distance:</span></span>
<span id="cb4-11">proxdf<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>log2_dist <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log2</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> proxdf<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>dist_to_celltype)</span>
<span id="cb4-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># example of binned distance:</span></span>
<span id="cb4-13">proxdf<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>distance_bin <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cut</span>(proxdf<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>dist_to_celltype, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">seq</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">length.out =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>), <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">Inf</span>))</span>
<span id="cb4-14"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># example of dichotomous distance:</span></span>
<span id="cb4-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># examine the distances:</span></span>
<span id="cb4-16"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">hist</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log2</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> proxdf<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>dist_to_celltype[is1]), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">breaks =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># use to choose a breakpoint</span></span>
<span id="cb4-17"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># bin the distances:</span></span>
<span id="cb4-18">proxdf<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>is_close <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log2</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.01</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> disttocelltype2) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span>
<span id="cb4-19"></span>
<span id="cb4-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># selected variable for DE analysis:</span></span>
<span id="cb4-21">varforDE <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> proxdf<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>neighbor_count</span></code></pre></div>
</div>
<p>One more step remains before running DE: we need to choose which genes to analyze for our cell type. The intuition here is that if a gene is 1. barely expressed in your cell type, and 2. highly expressed in neighbors of that cell type, then a large share of that gene’s counts in your cell type will be misassignments from neighboring cells. Such a gene will be prone to bias in DE analyses, and should often be excluded from analyses of your cell type. See <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/segmentation-error/" target="_blank">our post on segmentation error in DE</a> for why segmentation error must be considered in DE analyses, see the smiDE paper linked earlier for countermeasures we recommend, and see <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/cell-typing-strategies/cell-typing-strategies.html" target="_blank">this post on advanced cell typing strategies</a> for other relevant tools.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># identify genes with minimal bias from segmentation errors in this cell type</span></span>
<span id="cb5-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (see https://www.biorxiv.org/content/10.1101/2024.08.02.606405v2.abstract for details)</span></span>
<span id="cb5-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">source</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">url</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://raw.githubusercontent.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/refs/heads/Main/_code/cell-typing-advanced-strategies/getSubtypingGenes.R"</span>))</span>
<span id="cb5-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># get genes safe from contamination:</span></span>
<span id="cb5-5">contamfilter <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">findSafeGenes</span>(</span>
<span id="cb5-6">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">counts =</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(seu[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts),  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># note we're entering info for all cells           </span></span>
<span id="cb5-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xy =</span> xy,                            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># again entering info for all cells</span></span>
<span id="cb5-8">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ismycelltype =</span> is1,                 <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># logical indicating the cell type to be run in DE</span></span>
<span id="cb5-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tissue =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># specify if tissues have xy overlap</span></span>
<span id="cb5-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">self_vs_neighbor_threshold =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># min ratio of expression in the cell type vs. in its neighbors</span></span>
<span id="cb5-11">)</span>
<span id="cb5-12">safegenes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> contamfilter<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>safegenes</span></code></pre></div>
</div>
<p>This final vector “safegenes” is our effective plex for analyzing our chosen cell type, the genes useful for analysis within that cell type. Comparing this across panels can also be informative.</p>
<p>Now we’ll run a DE analysis using simple linear models. For proper DE analyses, we recommend using the full smiDE toolkit. The below code is adequate for the purposes of comparing panels, and it runs very quickly.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># normalized counts:</span></span>
<span id="cb6-2">scaling_factors <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(seu[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts) </span>
<span id="cb6-3">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Diagonal</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> scaling_factors[is1]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(seu[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts[, is1]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(scaling_factors)</span>
<span id="cb6-4">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log2</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> y)</span>
<span id="cb6-5">y <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> y[, safegenes]</span>
<span id="cb6-6"></span>
<span id="cb6-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># design matrix:</span></span>
<span id="cb6-8">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">distvar =</span> varforDE[is1])</span>
<span id="cb6-9"></span>
<span id="cb6-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## run DE:</span></span>
<span id="cb6-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract predictor and response</span></span>
<span id="cb6-12">x <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span>
<span id="cb6-13">n <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(x)</span>
<span id="cb6-14"></span>
<span id="cb6-15"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Center x for numerical stability</span></span>
<span id="cb6-16">x_centered <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(x)</span>
<span id="cb6-17"></span>
<span id="cb6-18"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Design matrix: intercept and centered predictor</span></span>
<span id="cb6-19">X <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cbind</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, x_centered)</span>
<span id="cb6-20">XtX_inv <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">solve</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(X) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> X)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (X'X)^-1 for SEs</span></span>
<span id="cb6-21"></span>
<span id="cb6-22"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Fit model: β = (X'X)^-1 X'Y</span></span>
<span id="cb6-23">betas <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> XtX_inv <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(X) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> y  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 2 x G matrix: row 1 = intercepts, row 2 = slopes</span></span>
<span id="cb6-24"></span>
<span id="cb6-25"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Residuals</span></span>
<span id="cb6-26">fitted <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> X <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%*%</span> betas</span>
<span id="cb6-27">resid <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> y <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> fitted</span>
<span id="cb6-28"></span>
<span id="cb6-29"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Residual variance per gene</span></span>
<span id="cb6-30">sigma2 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">colSums</span>(resid<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb6-31"></span>
<span id="cb6-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Standard error of slope estimates</span></span>
<span id="cb6-33">se_beta1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sqrt</span>(sigma2 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> XtX_inv[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>])  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># scalar * vector</span></span>
<span id="cb6-34"></span>
<span id="cb6-35"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># T-statistics for slope (row 2 of beta matrix)</span></span>
<span id="cb6-36">t_stats <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> betas[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, ] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> se_beta1</span>
<span id="cb6-37"></span>
<span id="cb6-38"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Two-sided p-values</span></span>
<span id="cb6-39">pvals <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pt</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abs</span>(t_stats), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">df =</span> n <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span>
<span id="cb6-40"></span>
<span id="cb6-41"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Output</span></span>
<span id="cb6-42">results <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.frame</span>(</span>
<span id="cb6-43">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">slope =</span> betas[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, ],</span>
<span id="cb6-44">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pval =</span> pvals</span>
<span id="cb6-45">)</span>
<span id="cb6-46">results<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>padj <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">p.adjust</span>(results<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pval)</span></code></pre></div>
</div>
<p>A simple volcano plot suffices to convey the richness of the DE results:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot</span>(betas[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, ], <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pmin</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log10</span>(pvals), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span>), </span>
<span id="cb7-2">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pch =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">16</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> scales<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">alpha</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"darkblue"</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>),</span>
<span id="cb7-3">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Log2 fold-change per additional neighbor of cell type 2"</span>,</span>
<span id="cb7-4">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ylab =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"-log10(p-value)"</span>,</span>
<span id="cb7-5">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex.lab =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.25</span>)</span>
<span id="cb7-6">showgenes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rownames</span>(results)[results<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>padj <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>]</span>
<span id="cb7-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log10</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(results<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pval[results<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>padj <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>])), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey50"</span>)</span>
<span id="cb7-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">abline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">h =</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log10</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(results<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>pval[results<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>padj <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>])), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"grey50"</span>)</span>
<span id="cb7-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">legend</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bottomright"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">lty =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>,</span>
<span id="cb7-10">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Adjusted p = "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" ("</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(results<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>padj <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>), <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(results<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>padj <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.25</span>)), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" genes)"</span>))</span>
<span id="cb7-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">text</span>(results[showgenes, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"slope"</span>],</span>
<span id="cb7-12">     <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">pmin</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">log10</span>(results[showgenes, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pval"</span>]), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">75</span>), </span>
<span id="cb7-13">     showgenes,</span>
<span id="cb7-14">     <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">col =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cex =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.75</span>)</span></code></pre></div>
</div>
<p>The resulting volcano plots are below (note the different y-axis scales):</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/panel-comparison/figures/volcano plots.png" class="img-fluid figure-img" width="608"></p>
</figure>
</div>
</div>
</div>
<p>We find that the WTX panel has more than double the significant (adjusted p-value &lt; 0.05) genes. Reassuringly, shared genes tend to be significant in the same direction in both datasets. From this figure, we would conclude (unsurprisingly) that the larger panel yields a richer set of results from the same differential expression analysis.</p>


</section>

 ]]></description>
  <category>quality control</category>
  <category>differential expression</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/panel-comparison/</guid>
  <pubDate>Mon, 23 Jun 2025 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/panel-comparison/figures/thumbnail.png" medium="image" type="image/png" height="139" width="144"/>
</item>
<item>
  <title>Using marker gene driven metagene scores for granular hierarchical cell typing.</title>
  <dc:creator>Dan McGuire</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/immune-cell-typing-smooth/</link>
  <description><![CDATA[ 





<section id="abstract" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Abstract</h1>
<p>This post showcases a hierarchical cell typing method (HieraType) optimized for detection and sub-clustering of immune cells. HieraType:</p>
<ul>
<li>Is organized around canonical marker genes, but harnesses cells’ complete expression profiles.</li>
<li>Can be adapted to any arbitrary cell type hierarchy.</li>
</ul>
<p>Code for the method and utility functions used in this post can be found in the R package <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/tree/Main/_code/HieraType">HieraType</a>. The package contains carefully designed pipelines for:</p>
<ul>
<li>Subclassifying T-cells into 12 categories</li>
<li>Classifying a whole dataset into broad categories (epithelial, fibroblast, immune, endothelial), then subclassifying immune cells into 9 categories</li>
<li>Classifying native brain cells</li>
</ul>
<p>It is also possible to assemble pipelines for custom applications, e.g.&nbsp;focused on a specific tissue type.</p>
<p>In this post, we use a 6K-plex colon-cancer dataset to demonstrate two common use cases for the method:</p>
<ol type="1">
<li>Subtyping T cells</li>
<li>Broad immune cell typing.</li>
</ol>
</section>
<section id="quick-links-to-the-code" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Quick links to the code</h1>
<p>For those in a hurry to ‘just see the code’, they can jump ahead to the “Just The Code” sections for Example 1, or Example 2.</p>
</section>
<section id="introduction" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Introduction</h1>
<p>Often (particularly with immune cells), we may want our cell type calls to be guided by specific sets of marker genes.<br>
In some spatially-resolved transcriptomics (SRT) datasets, directly using marker gene expression for determining cell type may be a challenge due to data sparsity, background, or segmentation ambiguity. These challenges together can make marker genes noisy individual data points.</p>
<p>However, marker genes remain a strong organizing principle for differentiating cell types. To overcome the intrinsic noise of single marker genes, the cell typing method we describe here captures information from both (a) similar cells and (b) biologically relevant genes, in order to construct metagenes that more stably estimate true marker expression. These marker metagene scores are then used for probabilistic cell type assignment. The method takes as input predefined ‘marker lists’ for each cell type, which make it easy to enforce prior biological assumptions about the marker genes and expression profiles we expect to see in our cell types. By not requiring any training data or an explicit reference profile, we expect the method to be robust to platform or batch effects that may otherwise challenge cell type labeling from pre-trained models or external reference data.</p>
<p>The basic framework for the method can be described in a few basic steps (we’ll describe each of these steps in more detail throughout our examples.)</p>
<ol type="1">
<li>First, for each cell type, we define a set of genes we expect may be ‘marker genes’ or highly expressed based on prior data or biology (either the literature, a reference dataset, or some combination of both).</li>
<li>Next, we construct metagene scores from our data for each cell type based on the genes specified in (1).</li>
<li>Finally, we model the metagene scores, where the model estimates a posterior probability that each cell belongs to any of the possible cell types.</li>
</ol>
<p>We’ll use an internally generated colon cancer dataset profiled with the CosMx Human 6K Discovery Panel comprised of about 112k cells, and work through two common cell typing scenarios in which we envision this methodology can be useful:</p>
<ol type="1">
<li>Subclustering an existing set of cell types:</li>
</ol>
<ul>
<li>In this first case, we’ll assume we’ve already done some basic clustering, but don’t quite have the level of cell type granularity we’d like. We’ll take a ‘T cell’ cluster and sub-classify those cells into CD8-T and CD4-T, followed by more granular T cell subcategories.</li>
</ul>
<ol start="2" type="1">
<li>Top down hierarchical cell typing with focus on immune cells:</li>
</ol>
<ul>
<li>Here we’ll start from scratch; first assigning cells into major categories and identifying immune cells, then classifying those immune cells into various sub classifications of myeloid and lymphocyte cell types.</li>
</ul>
</section>
<section id="initial-look-at-our-dataset" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Initial look at our dataset</h1>
<p>Let’s start by taking an initial look at our data, then walk through some cell typing scenarios. First, we can load in our data and take a look at some unsupervised leiden clustering we’ve already performed.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggplot2)</span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(ggrepel)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(data.table)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(HieraType)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Note, using a v3-style Seurat Object below, i.e., `sem[["RNA"]]@counts`</span></span>
<span id="cb2-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## For v5-style, the syntax would be like `sem[["RNA"]]$counts`</span></span>
<span id="cb2-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">options</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">Seurat.object.assay.version =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"v3"</span>)  </span>
<span id="cb2-4"></span>
<span id="cb2-5">sem <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">readRDS</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"colon_seurat.rds"</span>)</span>
<span id="cb2-6">normed <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">totalcount_norm</span>(Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(sem[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts))</span>
<span id="cb2-7">sem <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> Seurat<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">SetAssayData</span>(sem, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">layer =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"data"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">new.data =</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(normed))</span></code></pre></div>
</div>
<p><strong>Spatial plot of initial clusters</strong></p>
<p>Here’s a spatial plot of our leiden clusters. At first glance, we see that some of these unsupervised clusters (i.e., 3, 0, 1, 2, and 7 for example) have distinct spatial patterns; it definitely looks like some meaningful biological structure in these tissue were captured by unsupervised clustering.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">sem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>portion <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"part_a"</span></span>
<span id="cb3-2">sem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>portion[sem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>fov <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%in%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">73</span>] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"part_b"</span></span>
<span id="cb3-3">xyplist <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb3-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">split</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(sem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"portion"</span>), <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(xx){</span>
<span id="cb3-5">  HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xyplot</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"clusters_unsup"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metadata =</span> xx,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ptsize =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>()</span>
<span id="cb3-6">})</span>
<span id="cb3-7">xypl <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb3-8">cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_grid</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plotlist=</span>xyplist, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb3-10">  cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">panel_border</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">remove=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) </span>
<span id="cb3-11"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(xypl)</span></code></pre></div>
</details>
</div>
<div class="wider-image">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/immune-cell-typing-smooth/figures/xyp_unsup.png" alt="Wide Image"></p>
</div>
<p><strong>Heatmap of initial clusters </strong></p>
<p>We can make a marker gene heatmap to identify some of the top marker genes for each cluster and see if we recognize any of the celltypes represented by the unsupervised clusters. Here we can use a couple of convenience functions provided in the R package <code>HieraType</code>.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## calculate fold change, average expression, and other summary metrics </span></span>
<span id="cb4-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## for each gene and each cluster compared to other clusters</span></span>
<span id="cb4-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## This is the data underlying the marker heatmap.</span></span>
<span id="cb4-4">fctbl_unsup <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb4-5">HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clusterwise_foldchange_metrics</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">normed  =</span> sem[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>data</span>
<span id="cb4-6">                                          ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metadata =</span> sem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data</span>
<span id="cb4-7">                                          ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cluster_column =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"clusters_unsup"</span></span>
<span id="cb4-8">                                          )</span>
<span id="cb4-9"></span>
<span id="cb4-10"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## make a marker heatmap</span></span>
<span id="cb4-11">hm_unsup <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">marker_heatmap</span>(fctbl_unsup</span>
<span id="cb4-12">                           ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">extras =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD3D"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FOXP3"</span></span>
<span id="cb4-13">                                       , <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD8B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD8A"</span>)</span>
<span id="cb4-14">                           )</span>
<span id="cb4-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(hm_unsup)</span></code></pre></div>
</details>
</div>
<div class="wider-image">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/immune-cell-typing-smooth/figures/hm_unsup_annotated.PNG" alt="Wide Image"></p>
</div>
<p>Let’s suppose for sake of demonstration that I recognize (and am comfortable enough) to label these clusters with cell type names based on the marker genes shown in the heatmap.</p>
<p>However, there are one or a few of my immune clusters I’ve identified where I desire more granularity. In this case, I’m particularly interested in my T cells; in the bottom-left hand corner of the heatmap plot above, I see that ‘cluster 6’ is capturing T-cells, showing enrichment in some key marker genes like CD3 (CD3D, CD3E) as well as other markers like CD2, IL7R, and ITK.</p>
<p>I’d like to split these cells further into at least a few meaningful T-cell subtypes, at minimum: “CD8+”, “CD4+”, and “Treg”.</p>
</section>
<section id="ex1" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Example case 1: Subclustering T cells</h1>
<section id="tldr" class="level2" data-number="5.1">
<h2 data-number="5.1" class="anchored" data-anchor-id="tldr"><span class="header-section-number">5.1</span> ‘Just The Code’</h2>
<p>Here’s the code for classifying leiden cluster ‘6’ into <code>cd8t</code> and <code>cd4t</code> cell types , followed by more granular T cell subtyping. We use the R package <code>HieraType</code> with a prespecified <code>tcell_pipeline</code>, and corresponding lists of marker genes included as package datasets. A <code>pipeline</code> specifies the hierarchical order we want to do our cell typing, and which cell types go in each level of the hierarchy. Each cell type has a list of associated marker genes.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pipeline_tcell"</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(pipeline_tcell, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.level =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>List of 3
 $ markerslists   :List of 3
  ..$ tmajor :List of 2
  .. ..- attr(*, "class")= chr [1:2] "list" "markerslist"
  ..$ t4minor:List of 7
  .. ..- attr(*, "class")= chr [1:2] "list" "markerslist"
  ..$ t8minor:List of 5
  .. ..- attr(*, "class")= chr [1:2] "list" "markerslist"
 $ priors         :List of 2
  ..$ t4minor: chr "tmajor"
  ..$ t8minor: chr "tmajor"
 $ priors_category:List of 2
  ..$ t4minor: chr "cd4t"
  ..$ t8minor: chr "cd8t"
 - attr(*, "class")= chr [1:2] "list" "pipeline"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(pipeline_tcell<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>markerslists<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>tmajor)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "cd8t" "cd4t"</code></pre>
</div>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(pipeline_tcell<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>markerslists<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>t4minor)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "cd4_naive" "cd4_tem"   "cd4_tcm"   "cd4_th1"   "cd4_th2"   "cd4_th17" 
[7] "cd4_treg" </code></pre>
</div>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(pipeline_tcell<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>markerslists<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>t8minor)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "cd8_naive"     "cd8_tem"       "cd8_tcm"       "cd8_cytotoxic"
[5] "cd8_exhausted"</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb14-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### these are cells I want to subcluster</span></span>
<span id="cb14-2">tcell_ids <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data[sem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>clusters_unsup<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID"</span>]</span>
<span id="cb14-3"></span>
<span id="cb14-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Run a 'tcell'-typing pipeline, which </span></span>
<span id="cb14-5"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### first classifies into T8/T4 categories (using the `tmajor` markerslist), </span></span>
<span id="cb14-6"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### then runs subclassification for T4 and T8 using the t4minor and t8minor markerslists.</span></span>
<span id="cb14-7">tcell_typing <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb14-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">run_pipeline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pipeline =</span> pipeline_tcell</span>
<span id="cb14-9">             ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">counts_matrix =</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(sem[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts[,tcell_ids])</span>
<span id="cb14-10">             ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">adjacency_matrix =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as</span>(sem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>graphs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>umapgrph</span>
<span id="cb14-11">                                    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CsparseMatrix"</span>)[tcell_ids,tcell_ids]</span>
<span id="cb14-12">             ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">celltype_call_threshold =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb14-13">             )</span></code></pre></div>
</div>
<p>The data table <code>post_probs</code> in our <code>tcell_typing</code> object holds the high-level cell typing results; the <code>celltype_thresh</code> column shows the <em>most granular</em> cell type call where posterior probability is <img src="https://latex.codecogs.com/png.latex?%3E%200.5"> (our <code>celltype_call_threshold</code>). We can see the posterior probablity for the <code>celltype_thresh</code> category in <code>best_score_thresh</code>.<br>
The best granular cell type call (regardless of score) is given by the <code>celltype_granular</code> column, with <code>best_score_granular</code> indicating the corresponding posterior probability.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(tcell_typing, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.level =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>List of 3
 $ post_probs     :List of 1
  ..$ tmajor:Classes 'data.table' and 'data.frame': 7356 obs. of  5 variables:
  .. ..- attr(*, ".internal.selfref")=&lt;externalptr&gt; 
  .. ..- attr(*, "sorted")= chr "cell_ID"
 $ models         :List of 3
  ..$ tmajor :List of 3
  ..$ t4minor:List of 3
  ..$ t8minor:List of 3
 $ metagene_scores:List of 3
  ..$ tmajor :List of 2
  ..$ t4minor:List of 7
  ..$ t8minor:List of 5</code></pre>
</div>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1">tcell_typing<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>post_probs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>tmajor[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>][]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Key: &lt;cell_ID&gt;
        cell_ID celltype_thresh celltype_granular best_score_granular
         &lt;char&gt;          &lt;char&gt;            &lt;char&gt;               &lt;num&gt;
 1: c_1_12_1014            cd8t     cd8_exhausted           0.4691963
 2: c_1_12_1066            cd4t           cd4_th1           0.3352265
 3: c_1_12_1091         cd4_th2           cd4_th2           0.9683195
 4: c_1_12_1175   cd8_cytotoxic     cd8_cytotoxic           0.8777777
 5: c_1_12_1270         cd8_tem           cd8_tem           0.5882417
 6: c_1_12_1286        cd4_treg          cd4_treg           0.9909980
 7: c_1_12_1325            cd4t           cd4_tcm           0.4647576
 8: c_1_12_1346        cd4_treg          cd4_treg           0.8298557
 9: c_1_12_1349            cd8t           cd8_tem           0.3939835
10: c_1_12_1394   cd8_cytotoxic     cd8_cytotoxic           0.9587283
    best_score_thresh
                &lt;num&gt;
 1:         0.9999999
 2:         0.6751557
 3:         0.9683195
 4:         0.8777777
 5:         0.5882417
 6:         0.9909980
 7:         0.9984388
 8:         0.8298557
 9:         0.9999814
10:         0.9587283</code></pre>
</div>
</div>
<p>Now lets take a closer look at the details and describe the methodology for each step.</p>
</section>
<section id="detailed-walkthrough" class="level2" data-number="5.2">
<h2 data-number="5.2" class="anchored" data-anchor-id="detailed-walkthrough"><span class="header-section-number">5.2</span> Detailed walkthrough</h2>
<section id="part-1-specifying-genes-associated-with-my-cell-types-based-on-prior-biology" class="level3" data-number="5.2.1">
<h3 data-number="5.2.1" class="anchored" data-anchor-id="part-1-specifying-genes-associated-with-my-cell-types-based-on-prior-biology"><span class="header-section-number">5.2.1</span> Part 1: Specifying genes associated with my cell types based on prior biology</h3>
<p>We’ll describe the first level of cell type classification from our example above to illustrate the method, where we suppose we want to classify <code>cd4t</code> vs.&nbsp;<code>cd8t</code>. Creating a marker list, by specifying genes I expect <strong>might</strong> be associated with my cell types is the first step of this algorithm. For each of my cell types, <code>cd4t</code> and <code>cd8t</code>, I specify</p>
<ul>
<li>a set of primary defining markers or “index genes” (these are genes that should be fairly exclusive to the cell type if possible)</li>
<li>a set of other marker genes which I expect could be expressed as “predictors”</li>
</ul>
<p>In this case, we’ll use [CD4], and [CD8A, CD8B], as “index genes” for <code>cd4t</code> and <code>cd8t</code> respectively. The other genes we’ll specify as predictors are based on the literature. For example, FOXP3 is often associated with cd4t ‘Treg’ cells, so we include it as a predictor here for <code>cd4t</code>. In general, it’s okay to include a gene as a “predictor” even if we only expect to see it in a subset of cells (like FOXP3 in this example, which we expect to be present in a ‘Treg’ subtype, but not all <code>cd4t</code> cells).</p>
<p>It’s okay to include markers in multiple cell types if that fits our mental model. For example, CD3D, CD3E, and CD3G are general T cell markers, and so are included as predictors for both subtypes, as are other genes like IL7R, CD27, SELL which could be seen in either <code>cd4t</code> or <code>cd8t</code> cells. When manually creating a marker list, consider “more predictors is better” as a general rule of thumb; a larger number of predictor genes can help build more accurate metagene models for celltype index markers.</p>
<p>We can create our marker list manually like this:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">markerslist_tcellmajor <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb19-2">HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_markerslist</span>(</span>
<span id="cb19-3">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">index_marker =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb19-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd8t"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD8B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD8A"</span>)</span>
<span id="cb19-5">    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd4t"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD4"</span>)</span>
<span id="cb19-6">  )</span>
<span id="cb19-7">  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">predictors =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb19-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd8t"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span>  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD3D"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD3E"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD3G"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD8A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD8B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IL7R"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD27"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SELL"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CCR7"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TCF7"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LEF1"</span>, </span>
<span id="cb19-9">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FOXP1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BACH2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KLF2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD28"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ICOS"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"STAT3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"STAT5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RUNX3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BATF"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EOMES"</span>, </span>
<span id="cb19-10">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TBX21"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PRDM1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PDCD1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LAG3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TIGIT"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HAVCR2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GZMK"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GZMA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GZMB"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PRF1"</span>, </span>
<span id="cb19-11">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GNLY"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KLRG1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KLRD1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IFNG"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CCL5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CX3CR1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NKG7"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FAS"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FASLG"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IL2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD244"</span>, </span>
<span id="cb19-12">                    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CXCR3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KLRB1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TOX"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NR4A2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BCL6"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CXCL13"</span>)</span>
<span id="cb19-13">    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd4t"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD3D"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD3E"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD3G"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IL7R"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD27"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"SELL"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CCR7"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TCF7"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LEF1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FOXP1"</span>, </span>
<span id="cb19-14">                     <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BACH2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"KLF2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD28"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ICOS"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD40LG"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"STAT3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"STAT5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RUNX1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RUNX3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BATF"</span>, </span>
<span id="cb19-15">                     <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GATA3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TBX21"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RORC"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FOXP3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IL2RA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CTLA4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PDCD1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"LAG3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TIGIT"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"HAVCR2"</span>, </span>
<span id="cb19-16">                     <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IL2"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IFNG"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IL4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IL5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IL13"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IL17A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IL17F"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IL10"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CCL5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CXCR3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CCR6"</span>, </span>
<span id="cb19-17">                     <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CXCR5"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PRDM1"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"BCL6"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"EOMES"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CXCL13"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TOX"</span>)</span>
<span id="cb19-18">  )</span>
<span id="cb19-19">)</span></code></pre></div>
</div>
<p>The object created looks like this below</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(markerslist_tcellmajor)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>List of 2
 $ cd8t:List of 3
  ..$ index_marker                               : chr [1:2] "CD8B" "CD8A"
  ..$ predictors                                 : chr [1:48] "CD3D" "CD3E" "CD3G" "CD8A" ...
  ..$ use_offclass_markers_as_negative_predictors: logi TRUE
 $ cd4t:List of 3
  ..$ index_marker                               : chr "CD4"
  ..$ predictors                                 : chr [1:48] "CD3D" "CD3E" "CD3G" "CD4" ...
  ..$ use_offclass_markers_as_negative_predictors: logi TRUE
 - attr(*, "class")= chr [1:2] "list" "markerslist"</code></pre>
</div>
</div>
<p>In practice, we can save and reuse our marker lists for different cell types. While it should be easy to create/modify a custom list from the literature, this particular list is included as a package dataset <code>markerslist_tcellmajor</code> to facilitate ease of use.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"markerslist_tcellmajor"</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(markerslist_tcellmajor)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>List of 2
 $ cd8t:List of 3
  ..$ index_marker                               : chr [1:2] "CD8B" "CD8A"
  ..$ predictors                                 : chr [1:48] "CD3D" "CD3E" "CD3G" "CD8A" ...
  ..$ use_offclass_markers_as_negative_predictors: logi TRUE
 $ cd4t:List of 3
  ..$ index_marker                               : chr "CD4"
  ..$ predictors                                 : chr [1:48] "CD3D" "CD3E" "CD3G" "CD4" ...
  ..$ use_offclass_markers_as_negative_predictors: logi TRUE
 - attr(*, "class")= chr [1:2] "list" "markerslist"</code></pre>
</div>
</div>
</section>
<section id="part-2-estimating-a-metagene-score-for-each-cell-type" class="level3" data-number="5.2.2">
<h3 data-number="5.2.2" class="anchored" data-anchor-id="part-2-estimating-a-metagene-score-for-each-cell-type"><span class="header-section-number">5.2.2</span> Part 2: Estimating a metagene score for each cell type</h3>
<p>Because single count values marker genes can be noisy, we seek to derive variables that more stably estimate marker expression. To do so, we’ll exploit biologically relevant genes (e.g.&nbsp;CD8A expression is predictive of CD8B expression), and cells with similar expression patterns. To do so, we fit a model for each cell type, using the primary index marker as the response variable and covariates derived from the predictor genes. The predicted values of the primary index marker for this model make a continuous “metagene score” that will later be used for probabilistic cell type assignment. You can think of each metagene score as estimating the canonical marker gene’s expression for a single cell type; e.g.&nbsp;we will produce a FOXP3-estimating metagene to capture Treg’s, a CD68-estimating metagene to capture macrophages, etc…</p>
<p>We fit our models for each cell type class using the <code>fit_metagene_scores</code> function. This function uses ‘smoothing’ (averaging over a set of similar cells), as well as our prior biology / assumptions about which markers are associated with each celltype to predict the pearson residuals of the index gene.</p>
<p>The default regression model setup looks like this: <img src="https://latex.codecogs.com/png.latex?Y%20=%20WY%5Ceta%20%20+%20WX%5Cbeta%20+%20X%5Cgamma%20+%20%5Cepsilon%20"> where</p>
<ul>
<li><img src="https://latex.codecogs.com/png.latex?Y:="> pearson residuals of the index marker (our response variable)</li>
<li><img src="https://latex.codecogs.com/png.latex?X:="> (totalcount-normalized) matrix of predictor genes</li>
<li><img src="https://latex.codecogs.com/png.latex?W:="> a cells <img src="https://latex.codecogs.com/png.latex?%5Ctimes"> cells neighborhood matrix, denoting cells with similar expression profiles.</li>
<li><img src="https://latex.codecogs.com/png.latex?%5Ceta">, <img src="https://latex.codecogs.com/png.latex?%5Cbeta">, and <img src="https://latex.codecogs.com/png.latex?%5Cgamma"> are the regression coefficients associated with the ‘neighbor-averaged’ index gene, ‘neighbor-averaged’ predictor genes, and predictor genes within the cell respectively.</li>
</ul>
<p>One way to think about this model specification could be as an implementation of a ‘smoothing model’, which leverages information across multiple dimensions:</p>
<ul>
<li>the index gene’s mean expression in similar cells (<img src="https://latex.codecogs.com/png.latex?WY">) (roughly, neighbors in UMAP space)</li>
<li>expression of other expected marker genes (<img src="https://latex.codecogs.com/png.latex?X">) (our predictor genes defined from biological knowledge)</li>
<li>expression of other expected marker genes in similar cells (<img src="https://latex.codecogs.com/png.latex?WX">)</li>
</ul>
<p>We use a non-negative least squares <span class="citation" data-cites="nnlsref">(Slawski and Hein 2013)</span> (NNLS) regression to estimate our models. The NNLS model enforces that all of the covariates based on predictor genes we specified must have positive regression coefficients (in practice we’ll observe that a number of regression coefficients may shrink to zero).</p>
<p>By specifying <code>use_offclass_markers_as_negative_predictors = TRUE</code> in the section above, we further assume that predictors for <em>other celltypes</em> that we haven’t listed can be used as <em>negative</em> predictors of our index gene. For example, genes like like “GZMA” and “GZMB”, which are markers associated with <code>cd8t</code>, will be assumed to be <em>negative</em> predictors of the other classes (<code>cd4t</code>) where they are not listed. This argument should in general be set to TRUE, as it’s useful to specify which genes we <em>don’t</em> expect to see in a celltype. If your markers list has extensive genes expected to be enriched in multiple cell types, and those genes are for some reason omitted from many of the other cell types, then a user might consider specifying this argument as FALSE; e.g.&nbsp;if many genes like CD3E are specified in markers lists for some T cell subtypes but not all (despite being ubiquitously expressed).</p>
<p>Estimating this model from the dataset at hand rather than using a reference model could make this framework more robust to platform effects or batch effects compared to pre-trained models or reference profiles which used different technology or data with slightly different biology.</p>
<p>Genes not included in the marker gene lists will not be considered in assigning cell types. Because the model is only using genes we’ve specified in our ‘markers list’, we have complete control over which genes influence the metadata scores, reducing the chance that noisy or irrelevant genes can have an impact on our cell type classifications. Furthermore, by estimating the metagenes directly from the dataset at hand, we are not reliant on reference datasets or pre-trained models influenced by different technology (example: scRNA-seq) or underlying biology (example: different tissue type or disease status, etc).</p>
<p>Here I call the <code>fit_metagene_scores</code> function to estimate these models for cells corresponding to the unsupervised cluster I’ve identified to be T cells.<br>
For the cells <img src="https://latex.codecogs.com/png.latex?%5Ctimes"> cells <code>adjacency_matrix</code>, I’ve used the nearest neighbor matrix in my Seurat object. This is the same graph that was used to generate my UMAP and my unsupervised leiden clusters. After fitting our regression models for each cell type, we’ll use the predicted scores as ‘metagenes’ that can be clustered in the next step.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb25" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb25-1">tcell_ids <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> sem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data[sem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>clusters_unsup<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">6</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID"</span>]</span>
<span id="cb25-2">metagenes_t <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb25-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fit_metagene_scores</span>(</span>
<span id="cb25-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">markerslist =</span> markerslist_tcellmajor</span>
<span id="cb25-5">    ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">counts_matrix =</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(sem[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts[,tcell_ids])</span>
<span id="cb25-6">    ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">adjacency_matrix =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as</span>(sem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>graphs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>umapgrph</span>
<span id="cb25-7">                           ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CsparseMatrix"</span>)[tcell_ids,tcell_ids]</span>
<span id="cb25-8">  )</span></code></pre></div>
</div>
<p>The <code>metagenes_t</code> object we’ve created has an element for each celltype, including the regression coefficients (<code>bhat</code>), and predicted values we’ll use for clustering (<code>yhat</code>) for each index marker gene for cell type.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb26" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb26-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(metagenes_t,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.level =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>List of 2
 $ cd8t:List of 7
  ..$ CD8B   :List of 5
  ..$ CD8A   :List of 5
  ..$ yhat   : Named num [1:7356] 0.593 1.32 2.959 1.375 2.478 ...
  .. ..- attr(*, "names")= chr [1:7356] "c_1_12_1066" "c_1_12_1175" "c_1_12_1270" "c_1_12_1349" ...
  ..$ y      : Named num [1:7356] -0.208 -0.178 2.047 -0.207 -0.242 ...
  .. ..- attr(*, "names")= chr [1:7356] "c_1_12_1066" "c_1_12_1175" "c_1_12_1270" "c_1_12_1349" ...
  ..$ ypost  : Named num [1:7356] -0.1796 -0.0223 1.5179 -0.0269 0.1805 ...
  .. ..- attr(*, "names")= chr [1:7356] "c_1_12_1066" "c_1_12_1175" "c_1_12_1270" "c_1_12_1349" ...
  ..$ bhat   : num [1:125, 1:2] 0.1904 0.1342 0.1113 0.1057 0.0912 ...
  .. ..- attr(*, "dimnames")=List of 2
  ..$ nnpcfit:List of 7
  .. ..- attr(*, "class")= chr [1:2] "nsprcomp" "prcomp"
 $ cd4t:List of 6
  ..$ CD4    :List of 5
  ..$ yhat   : Named num [1:7356] 0.29 -1.426 -0.968 -0.692 -1.945 ...
  .. ..- attr(*, "names")= chr [1:7356] "c_1_12_1066" "c_1_12_1175" "c_1_12_1270" "c_1_12_1349" ...
  ..$ y      : Named num [1:7356] -0.271 -0.235 -0.418 -0.27 -0.312 ...
  .. ..- attr(*, "names")= chr [1:7356] "c_1_12_1066" "c_1_12_1175" "c_1_12_1270" "c_1_12_1349" ...
  ..$ ypost  : Named num [1:7356] -0.294 -0.366 -0.469 -0.321 -0.507 ...
  .. ..- attr(*, "names")= chr [1:7356] "c_1_12_1066" "c_1_12_1175" "c_1_12_1270" "c_1_12_1349" ...
  ..$ bhat   : num [1:125, 1] 0.3763 0.2525 0.1551 0.1283 0.0749 ...
  .. ..- attr(*, "dimnames")=List of 2
  ..$ nnpcfit:List of 7
  .. ..- attr(*, "class")= chr [1:2] "nsprcomp" "prcomp"</code></pre>
</div>
</div>
<p>For cell types using multiple ‘index marker genes’, like <code>cd8t</code> here (using CD8A and CD8B), metagene scores are combined together using non-negative sparse pca (implemented in the <code>nsprcomp</code> R package) <span class="citation" data-cites="nonnegpca">(Sigg and Buhmann 2008)</span>. This allows for summarizing an overall cell type metagene score, using a constrained non-negative combination of individual index-gene scores that explains maximal variation across individual index gene scores. Below, we see the PCA rotation representing the individual weights given to CD8A and CD8B metagene scores.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb28" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb28-1">metagenes_t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cd8t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>nnpcfit</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Standard deviations (1, .., p=1):
[1] 1.020128

Rotation (n x k) = (2 x 1):
           PC1
CD8B 0.6578375
CD8A 0.7531599</code></pre>
</div>
</div>
<p>We can get a better understanding of the metagene model outputs by looking at a few diagnostics plots. In the below, we plot the regression coefficients for each model, ordering them on the x-axis by their ranking. For each cell type, the positive <img src="https://latex.codecogs.com/png.latex?%5Chat%7B%5Cbeta%7D"> correspond to genes we specified as predictors, and negative <img src="https://latex.codecogs.com/png.latex?%5Chat%7B%5Cbeta%7D"> were predictors for either of the other two cell types.<br>
A lot of the covariates which have the largest magnitudes have “<em>lag.</em>” in their name indicating they correspond to a smoothed (or neighbor-averaged) covariate for that gene.</p>
<p>We also see that many genes end up with weights of 0. These genes failed to be predictive in the direction our biological priors expected.</p>
<p>For <code>cd4t</code>, we see that smoothed CD4 (indicated by ‘<em>lag.y.CD4</em>’ in the plot) is the strongest predictor of observed ‘CD4’. For <code>cd8t</code>, ‘<em>lag.y.CD8A</em>’ and ‘<em>lag.y.CD8B</em>’ (indicating smoothed CD8A and CD8B) are also among the strongest predictors, but not first in rank.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb30" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb30-1">coefplots <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metagene_coefficients_plot</span>(metagenes_t)</span>
<span id="cb30-2">coefplots <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(coefplots, <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(x){x <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span>   <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bold'</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">18</span>))</span>
<span id="cb30-3">  }) <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## just make the text bigger and bold</span></span>
<span id="cb30-4">cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_grid</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plotlist =</span> coefplots, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span></code></pre></div>
</details>
</div>
<div class="wider-image">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/immune-cell-typing-smooth/figures/coefplots_tcells.png" alt="Wide Image"></p>
</div>
<p>A pairsplot can show us how well the metagene scores we’ve created are distinct from each other. Ideally, if our cell type classes are mutually exclusive, we’d want to not see too many cells which are ‘positive’ for multiple cell types at the same time.</p>
<p>Here, we see that <code>cd4t</code> and <code>cd8t</code> metagene scores are negatively correlated with each other, which is good to see.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb31" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb31-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metagene_pairsplot</span>(metagenes_t, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">var=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"yhat"</span>)</span></code></pre></div>
</details>
</div>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/immune-cell-typing-smooth/figures/yhatpairs_tcells.png" class="img-fluid figure-img" width="1918"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="part-3-assigning-cell-types-based-on-metagene-scores" class="level3" data-number="5.2.3">
<h3 data-number="5.2.3" class="anchored" data-anchor-id="part-3-assigning-cell-types-based-on-metagene-scores"><span class="header-section-number">5.2.3</span> Part 3: Assigning cell types based on metagene scores</h3>
<p>Now we use the metagene scores to classify cell types. To do so, we estimate the multivariate distribution of metagene scores that characterize each cell type. This allows us to compute the likelihoods for a cell belonging to any of these types, and infer a posterior probability of T-cell subtype for each cell. The <code>cluster_metagenes</code> function we run below estimates a mixture of overfitted multivariate gaussian mixture models <span class="citation" data-cites="aragam2020identifiability">(Aragam et al. 2020)</span> to estimate the distribution of metagene scores.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb32" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb32-1">model_t <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb32-2">HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cluster_metagenes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metagenes =</span> metagenes_t)</span></code></pre></div>
</div>
<p>At a high level, the <code>cluster_metagenes()</code> function first identifies all cells with positive metagene scores for a particular cell type. We might loosely interpret these cells as ‘anchor cells’. The data may look like this for example, where here I have subset my original data to cells which have positive scores for my celltype <code>cd8t</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb33" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb33-1">yh <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_scores_matrix</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metagenes =</span> metagenes_t, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"yhat"</span>)</span>
<span id="cb33-2">yh[yh[,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd8t"</span>] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>,][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>,]</span></code></pre></div>
</div>
<p>Then, a mixture model is fit to these (2-dimensional) scores, by default using 6 components. The estimates corresponding to the individual mixture models for each cell type are found in the <code>models</code> list, with the means (<code>mu_hat</code>), covariance matrices (<code>sigma_hat</code>), and prior probability (<code>pihat</code>) corresponding to each mixture component.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb34" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb34-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(model_t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>models, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.level =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>List of 2
 $ cd8t:List of 6
  ..$ post_probs  :Classes 'data.table' and 'data.frame':   2528 obs. of  9 variables:
  .. ..- attr(*, ".internal.selfref")=&lt;externalptr&gt; 
  ..$ pihat       : Named num [1:6] 0.2785 0.103 0.0437 0.3024 0.0747 ...
  .. ..- attr(*, "names")= chr [1:6] "k1" "k2" "k3" "k4" ...
  ..$ llmat       : num [1:2528, 1:6] -2.97 -2.87 -2.95 -3.42 -2.43 ...
  .. ..- attr(*, "dimnames")=List of 2
  ..$ mu_hat      : num [1:6, 1:2] 2.136 0.136 2.966 1.196 0.645 ...
  .. ..- attr(*, "dimnames")=List of 2
  ..$ sigma_hat   :List of 6
  ..$ loglik_iters: num [1:262] -4920 -4891 -4883 -4879 -4876 ...
 $ cd4t:List of 6
  ..$ post_probs  :Classes 'data.table' and 'data.frame':   2623 obs. of  9 variables:
  .. ..- attr(*, ".internal.selfref")=&lt;externalptr&gt; 
  ..$ pihat       : Named num [1:6] 0.1544 0.1398 0.2798 0.0414 0.0677 ...
  .. ..- attr(*, "names")= chr [1:6] "k1" "k2" "k3" "k4" ...
  ..$ llmat       : num [1:2623, 1:6] -2.03 -56.28 -126.91 -3.61 -5.12 ...
  .. ..- attr(*, "dimnames")=List of 2
  ..$ mu_hat      : num [1:6, 1:2] -1.074 -0.779 -1.13 -1.796 -1.429 ...
  .. ..- attr(*, "dimnames")=List of 2
  ..$ sigma_hat   :List of 6
  ..$ loglik_iters: num [1:173] -5230 -5189 -5167 -5155 -5147 ...</code></pre>
</div>
</div>
<p>Typically we shouldn’t need to interact with this part of the output. After the mixture models for each cell type are fitted, we can score all cells, and get an overall posterior probability that a cell belongs to any of the two major classes using Bayes rule.</p>
<p>Let <img src="https://latex.codecogs.com/png.latex?y_c"> be the cell type category for cell <img src="https://latex.codecogs.com/png.latex?c">, <img src="https://latex.codecogs.com/png.latex?scores_c"> the corresponding metagene scores, and <img src="https://latex.codecogs.com/png.latex?t"> denoting a possible cell ‘type’ or category (for <img src="https://latex.codecogs.com/png.latex?t%20=%201,...,T">).</p>
<p>We compute the overall posterior probability that <img src="https://latex.codecogs.com/png.latex?y_c"> is a particular type <img src="https://latex.codecogs.com/png.latex?t">, as</p>
<p><img src="https://latex.codecogs.com/png.latex?P(y_c%20=%20t%20%7C%20scores_c)%20=%20%5Cfrac%7BP(scores_c%20%7C%20y_c%20=%20t)P(y_c%20=%20t)%7D%7B%5Csum_%7Bl=1%7D%5ET%20P(scores_c%20%7C%20y_c%20=%20l)P(y_c%20=%20l)%7D"></p>
<p>Using the individual mixture models for a particular cell type with <img src="https://latex.codecogs.com/png.latex?K"> mixture components, we have <img src="https://latex.codecogs.com/png.latex?P(scores_c%20%7C%20y_c%20=%20t)%20=%20%5Csum_%7Bj=1%7D%5EK%20P(scores_c%20%7C%20k=j,%20y_c%20=%20t)%20P(k=j%20%7C%20y_c%20=%20t)"></p>
<p>The prior probability for a particular cell type class <img src="https://latex.codecogs.com/png.latex?t"> can be estimated by counting the number of cells used to estimate the mixture model in each cell type, and computing a proportion amongst all possible cell type classes, i.e., <img src="https://latex.codecogs.com/png.latex?P(y_c%20=%20t)%20=%20%5Cfrac%7B%5Csum_%7Bc=1%7D%5EC%20I(scores_%7Bc,t%7D%20%3E%200)%7D%7B%5Csum_%7Bl=1%7D%5ET%20%5Csum_%7Bc=1%7D%5EC%20I(scores_%7Bc,l%7D%20%3E%200)%7D"> These probabilities are in the <code>post_probs</code> data.table object of the model. The “best class” column gives each cell’s best-fitting cell type.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb36" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb36-1">model_t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>post_probs[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>][]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>        cell_ID best_class best_score        cd8t         cd4t
         &lt;char&gt;     &lt;char&gt;      &lt;num&gt;       &lt;num&gt;        &lt;num&gt;
 1: c_1_12_1066       cd4t  0.6751557 0.324844253 6.751557e-01
 2: c_1_12_1175       cd8t  0.9999986 0.999998637 1.363123e-06
 3: c_1_12_1270       cd8t  0.9999989 0.999998939 1.060938e-06
 4: c_1_12_1349       cd8t  0.9999814 0.999981384 1.861648e-05
 5: c_1_12_1394       cd8t  1.0000000 0.999999986 1.438074e-08
 6:  c_1_12_172       cd4t  0.9979380 0.002061995 9.979380e-01
 7:  c_1_12_228       cd4t  0.9955272 0.004472831 9.955272e-01
 8:  c_1_12_246       cd4t  0.9933210 0.006679029 9.933210e-01
 9:  c_1_12_285       cd4t  0.9986854 0.001314640 9.986854e-01
10:  c_1_12_511       cd4t  0.9911673 0.008832705 9.911673e-01</code></pre>
</div>
</div>
</section>
<section id="granular-hierarchical-subtyping-and-using-a-pipeline" class="level3" data-number="5.2.4">
<h3 data-number="5.2.4" class="anchored" data-anchor-id="granular-hierarchical-subtyping-and-using-a-pipeline"><span class="header-section-number">5.2.4</span> Granular hierarchical subtyping and using a <code>pipeline</code></h3>
<p>These posterior-probability scores can be passed directly to subtyping models for <code>cd4t</code> and <code>cd8t</code>, via the <code>prior_level_weights</code> arguments. For example, if I wanted to go ahead and cluster the <code>cd4t</code> cells into subtypes, I could follow the same process, passing in the prior probability of the cell being <code>cd4t</code> as a weight.</p>
<p>In the example below, the probability of <code>cd4t</code> is used as a weight in the NNLS regression fitting (akin to weighted least squares) when constructing metagene scores. Cells with high probability of <code>cd4t</code> are emphasized, while cells with lower probability of <code>cd4t</code> have less influence on the regression coefficients used to generate metagene scores.</p>
<p>In the clustering stage, probability of <code>cd4t</code> is again used as a weight (or prior probability), that factors into the expectation step of the EM algorithm. Letting <code>s(t)</code> denote the <em>subtype</em> of <code>cd4t</code>, then we have the below, where <img src="https://latex.codecogs.com/png.latex?P(y_c%20=%20t)"> would be the probability of <code>cd4t</code> from the previous stage of modeling.</p>
<p>The final returned probability for each <code>cd4t</code> subtype is a <em>joint</em> probability of both being the subtype <img src="https://latex.codecogs.com/png.latex?s(t)"> and the major celltype <img src="https://latex.codecogs.com/png.latex?t">.</p>
<p><img src="https://latex.codecogs.com/png.latex?P(y_c%20=%20s(t)%20%5Ccap%20y_c%20=%20t%20%20%7C%20scores_c)%20=%20P(y_c%20=%20s(t)%20%7C%20scores_c,%20y_c%20=%20t)P(y_c%20=%20t)"></p>
<p>Below is an example of this syntax using the <code>cd4t</code> subtypes in the package dataset “<code>markerslist_cd4tminor</code>”.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb38" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb38-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_cd4tminor, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.level=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>List of 7
 $ cd4_naive:List of 3
  ..$ index_marker                               : chr [1:4] "TCF7" "LEF1" "SELL" "CCR7"
  ..$ predictors                                 : chr [1:30] "CD3D" "CD3E" "CD3G" "CD4" ...
  ..$ use_offclass_markers_as_negative_predictors: logi TRUE
 $ cd4_tem  :List of 3
  ..$ index_marker                               : chr [1:4] "CD44" "CCR6" "CXCR3" "IL7R"
  ..$ predictors                                 : chr [1:35] "CD3D" "CD3E" "CD3G" "CD4" ...
  ..$ use_offclass_markers_as_negative_predictors: logi TRUE
 $ cd4_tcm  :List of 3
  ..$ index_marker                               : chr [1:3] "CCR7" "IL7R" "SELL"
  ..$ predictors                                 : chr [1:27] "CD3D" "CD3E" "CD3G" "CD4" ...
  ..$ use_offclass_markers_as_negative_predictors: logi TRUE
 $ cd4_th1  :List of 3
  ..$ index_marker                               : chr [1:4] "TBX21" "IFNG" "CXCR3" "STAT4"
  ..$ predictors                                 : chr [1:30] "CD3D" "CD3E" "CD3G" "CD4" ...
  ..$ use_offclass_markers_as_negative_predictors: logi TRUE
 $ cd4_th2  :List of 3
  ..$ index_marker                               : chr [1:5] "GATA3" "IL4" "IL5" "IL13" ...
  ..$ predictors                                 : chr [1:30] "CD3D" "CD3E" "CD3G" "CD4" ...
  ..$ use_offclass_markers_as_negative_predictors: logi TRUE
 $ cd4_th17 :List of 3
  ..$ index_marker                               : chr [1:4] "RORC" "IL17A" "IL17F" "IL23R"
  ..$ predictors                                 : chr [1:28] "CD3D" "CD3E" "CD3G" "CD4" ...
  ..$ use_offclass_markers_as_negative_predictors: logi TRUE
 $ cd4_treg :List of 3
  ..$ index_marker                               : chr [1:4] "FOXP3" "IL2RA" "CTLA4" "TNFRSF18"
  ..$ predictors                                 : chr [1:29] "CD3D" "CD3E" "CD3G" "CD4" ...
  ..$ use_offclass_markers_as_negative_predictors: logi TRUE
 - attr(*, "class")= chr [1:2] "list" "markerslist"</code></pre>
</div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb40" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb40-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">#### Classify cd4t subtypes</span></span>
<span id="cb40-2">metagenes_t4 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span></span>
<span id="cb40-3">  HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">fit_metagene_scores</span>(</span>
<span id="cb40-4">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">markerslist =</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_cd4tminor</span>
<span id="cb40-5">    ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">counts_matrix =</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(sem[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts[,tcell_ids])</span>
<span id="cb40-6">    ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">adjacency_matrix =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as</span>(sem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>graphs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>umapgrph</span>
<span id="cb40-7">                           ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CsparseMatrix"</span>)[tcell_ids,tcell_ids]</span>
<span id="cb40-8">    ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prior_level_weights =</span> model_t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>post_probs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cd4t <span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## prior probability of cd4t</span></span>
<span id="cb40-9">  )</span>
<span id="cb40-10">model_t4 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb40-11">HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cluster_metagenes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metagenes =</span> metagenes_t4, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prior_prob_level =</span> model_t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>post_probs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>cd4t)</span></code></pre></div>
</div>
<p>A convenient way to simplify this process with minimal code is to use a <code>pipeline</code> object. A custom hierarchical cell typing pipeline could be created like this below, where</p>
<ul>
<li><code>markerslists</code> is a named list, with a <code>markerslist</code> for each stage of cell typing. “tmajor” will classify <code>cd8t</code> vs.&nbsp;<code>cd4t</code>, while “t8minor” and “t4minor” will subclassify those cell types respectively.</li>
<li><code>priors</code>, a list specifying ‘parent’ celltyping stage. Here , <code>t4minor</code> and <code>t8minor</code> both need to run after “tmajor”, as they will use the estimated probabilities of “<code>cd4t</code>” and “<code>cd8t</code>” as inputs.<br>
“tmajor” runs first, and does not have prior probability inputs.</li>
<li><code>priors_category</code>, a list specifying ‘parent’ / major categories of each celltype. Here , <code>t4minor</code> is a subset of <code>"cd4t"</code>. “tmajor” runs first, and does not have a prior.</li>
</ul>
<div class="cell">
<div class="sourceCode cell-code" id="cb41" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb41-1">pipeline_tcell <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb41-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_pipeline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">markerslists =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tmajor"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_tcellmajor</span>
<span id="cb41-3">                    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t4minor"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_cd4tminor</span>
<span id="cb41-4">                    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t8minor"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_cd8tminor</span>
<span id="cb41-5">                    )</span>
<span id="cb41-6">                 ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">priors =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t4minor"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tmajor"</span></span>
<span id="cb41-7">                               ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t8minor"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tmajor"</span>)</span>
<span id="cb41-8">                 ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">priors_category =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t4minor"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd4t"</span></span>
<span id="cb41-9">                                         ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"t8minor"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd8t"</span></span>
<span id="cb41-10">                                         )</span>
<span id="cb41-11">    )</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb42" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb42-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">class</span>(pipeline_tcell)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] "list"     "pipeline"</code></pre>
</div>
</div>
<p>This particular pipeline is also saved as a package dataset.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb44" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb44-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>pipeline_tcell, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.level=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>List of 3
 $ markerslists   :List of 3
  ..$ tmajor :List of 2
  .. ..- attr(*, "class")= chr [1:2] "list" "markerslist"
  ..$ t4minor:List of 7
  .. ..- attr(*, "class")= chr [1:2] "list" "markerslist"
  ..$ t8minor:List of 5
  .. ..- attr(*, "class")= chr [1:2] "list" "markerslist"
 $ priors         :List of 2
  ..$ t4minor: chr "tmajor"
  ..$ t8minor: chr "tmajor"
 $ priors_category:List of 2
  ..$ t4minor: chr "cd4t"
  ..$ t8minor: chr "cd8t"
 - attr(*, "class")= chr [1:2] "list" "pipeline"</code></pre>
</div>
</div>
<p>The code to run the pipeline is shown below. Additional arguments to be passed to <code>fit_metagene_scores</code> or <code>cluster_metagenes</code> functions can be passed as additional arguments to <code>run_pipeline()</code> .</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb46" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb46-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Run a 'tcell'-typing pipeline, which </span></span>
<span id="cb46-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### first classifies into T8/T4 categories (using the `tmajor` markerslist), </span></span>
<span id="cb46-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### then runs subclassification for T4 and T8 using the t4minor and t8minor markerslists.</span></span>
<span id="cb46-4">tcell_typing <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb46-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">run_pipeline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pipeline =</span> pipeline_tcell</span>
<span id="cb46-6">    ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">counts_matrix =</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(sem[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts[,tcell_ids])</span>
<span id="cb46-7">    ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">adjacency_matrix =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as</span>(sem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>graphs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>umapgrph</span>
<span id="cb46-8">                           ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CsparseMatrix"</span>)[tcell_ids,tcell_ids]</span>
<span id="cb46-9">    ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">celltype_call_threshold =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb46-10">    ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">return_all_columns_postprobs =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb46-11">    )</span></code></pre></div>
</div>
<p>We could take a look at individual <code>models</code> and <code>metagenes</code> objects if needed within our <code>tcell_typing</code> result. Below, we show that the outputted objects are the same in the pipeline format, as if we had ran them individually like in the method demonstration.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb47" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb47-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all.equal</span>(model_t, tcell_typing<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>models<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>tmajor)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
<div class="sourceCode cell-code" id="cb49" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb49-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">all.equal</span>(metagenes_t, tcell_typing<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>metagene_scores<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>tmajor)</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>[1] TRUE</code></pre>
</div>
</div>
<p>By default, two possible cell type classifications are returned in the overall <code>post_probs</code> data.table object from our pipeline. Below, <code>celltype_granular</code> shows the most granular classification for each cell, carrying the ‘best possible’ classification at each stage of the pipeline. For example, the first cell below was first identified as <code>cd8t</code> being the best category. The best subcategory of <code>cd8t</code> was <code>cd8_exhausted</code>, and the posterior probability score for <code>cd8t_exhausted</code> was ~0.47.</p>
<p>We set the the cutoff <code>celltype_call_threshold=0.5</code> when we ran the pipeline, so that the <code>celltype_thresh</code> classification shows the most granular cell type with probability scores <em>at least</em> this threshold. The first cell below has <code>cd8_exhausted</code> score ~0.47 (less than 0.5), and so takes the higher level category of <code>cd8t</code>, which is above the threshold at ~0.99999.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb51" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb51-1">tcell_typing<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>post_probs[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tmajor"</span>]][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]</span></code></pre></div>
<div class="cell-output cell-output-stdout">
<pre><code>Key: &lt;cell_ID&gt;
        cell_ID celltype_thresh celltype_granular best_score_granular
         &lt;char&gt;          &lt;char&gt;            &lt;char&gt;               &lt;num&gt;
 1: c_1_12_1014            cd8t     cd8_exhausted           0.4691963
 2: c_1_12_1066            cd4t           cd4_th1           0.3352265
 3: c_1_12_1091         cd4_th2           cd4_th2           0.9683195
 4: c_1_12_1175   cd8_cytotoxic     cd8_cytotoxic           0.8777777
 5: c_1_12_1270         cd8_tem           cd8_tem           0.5882417
 6: c_1_12_1286        cd4_treg          cd4_treg           0.9909980
 7: c_1_12_1325            cd4t           cd4_tcm           0.4647576
 8: c_1_12_1346        cd4_treg          cd4_treg           0.8298557
 9: c_1_12_1349            cd8t           cd8_tem           0.3939835
10: c_1_12_1394   cd8_cytotoxic     cd8_cytotoxic           0.9587283
    best_score_thresh
                &lt;num&gt;
 1:         0.9999999
 2:         0.6751557
 3:         0.9683195
 4:         0.8777777
 5:         0.5882417
 6:         0.9909980
 7:         0.9984388
 8:         0.8298557
 9:         0.9999814
10:         0.9587283</code></pre>
</div>
</div>
<p>We can remake this table with a different cutoff in mind as needed, depending on how conservative / aggressive we are comfortable being with the cell type call, using the <code>combine_postprob_tables</code> function.</p>
<p>As demonstration, we can look at the output if we were to raise our threshold from 0.5 to 0.8.<br>
We can “<code>return_all_columns</code>” to show a more verbose result, with individual columns showing the joint probability scores for all possible cell type categories in each cell.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb53" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb53-1">HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">combine_postprob_tables</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pipeline =</span> pipeline_tcell</span>
<span id="cb53-2">                                   ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">models =</span> tcell_typing<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>models</span>
<span id="cb53-3">                                   ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">celltype_call_threshold =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.8</span></span>
<span id="cb53-4">                                   ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">return_all_columns =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tmajor"</span>]][<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>]</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>        cell_ID best_class_tmajor best_score_tmajor        cd8t         cd4t
         &lt;char&gt;            &lt;char&gt;             &lt;num&gt;       &lt;num&gt;        &lt;num&gt;
 1: c_1_12_1014              cd8t         0.9999999 0.999999904 9.619835e-08
 2: c_1_12_1066              cd4t         0.6751557 0.324844253 6.751557e-01
 3: c_1_12_1091              cd4t         0.9988244 0.001175604 9.988244e-01
 4: c_1_12_1175              cd8t         0.9999986 0.999998637 1.363123e-06
 5: c_1_12_1270              cd8t         0.9999989 0.999998939 1.060938e-06
 6: c_1_12_1286              cd4t         0.9981013 0.001898693 9.981013e-01
 7: c_1_12_1325              cd4t         0.9984388 0.001561222 9.984388e-01
 8: c_1_12_1346              cd4t         0.9982395 0.001760536 9.982395e-01
 9: c_1_12_1349              cd8t         0.9999814 0.999981384 1.861648e-05
10: c_1_12_1394              cd8t         1.0000000 0.999999986 1.438074e-08
    celltype_thresh celltype_granular best_score_granular best_score_thresh
             &lt;char&gt;            &lt;char&gt;               &lt;num&gt;             &lt;num&gt;
 1:            cd8t     cd8_exhausted           0.4691963         0.9999999
 2:          tmajor           cd4_th1           0.3352265         0.6751557
 3:         cd4_th2           cd4_th2           0.9683195         0.9683195
 4:   cd8_cytotoxic     cd8_cytotoxic           0.8777777         0.8777777
 5:            cd8t           cd8_tem           0.5882417         0.9999989
 6:        cd4_treg          cd4_treg           0.9909980         0.9909980
 7:            cd4t           cd4_tcm           0.4647576         0.9984388
 8:        cd4_treg          cd4_treg           0.8298557         0.8298557
 9:            cd8t           cd8_tem           0.3939835         0.9999814
10:   cd8_cytotoxic     cd8_cytotoxic           0.9587283         0.9587283
    best_class_t4minor best_score_t4minor    cd4_naive      cd4_tem
                &lt;char&gt;              &lt;num&gt;        &lt;num&gt;        &lt;num&gt;
 1:            cd4_tem       7.408648e-08 1.251116e-10 7.408648e-08
 2:            cd4_th1       3.352265e-01 7.836058e-05 2.443358e-01
 3:            cd4_th2       9.683195e-01 1.152001e-03 7.841427e-05
 4:           cd4_treg       1.262446e-06 3.588638e-09 1.405697e-11
 5:            cd4_th1       6.094740e-07 1.213471e-09 2.245479e-07
 6:           cd4_treg       9.909980e-01 1.289310e-06 8.622134e-08
 7:            cd4_tcm       4.647576e-01 1.677040e-01 1.226034e-02
 8:           cd4_treg       8.298557e-01 3.002300e-07 1.581774e-01
 9:           cd4_treg       1.092955e-05 4.486025e-09 8.873803e-09
10:           cd4_treg       6.985845e-09 1.273443e-10 5.957512e-09
         cd4_tcm      cd4_th1      cd4_th2     cd4_th17     cd4_treg
           &lt;num&gt;        &lt;num&gt;        &lt;num&gt;        &lt;num&gt;        &lt;num&gt;
 1: 1.195101e-11 2.129543e-08 4.029363e-15 7.197487e-13 6.786477e-10
 2: 1.867806e-04 3.352265e-01 6.040219e-03 1.158038e-02 7.770771e-02
 3: 1.148814e-02 9.695413e-03 9.683195e-01 2.286910e-11 8.090952e-03
 4: 5.892169e-10 6.060104e-08 3.049262e-08 5.391101e-09 1.262446e-06
 5: 9.412377e-10 6.094740e-07 7.486703e-10 1.940035e-07 3.000945e-08
 6: 1.653479e-08 1.018626e-08 7.094111e-03 7.843421e-06 9.909980e-01
 7: 4.647576e-01 7.313584e-04 2.508449e-01 9.533710e-02 6.803462e-03
 8: 1.020607e-02 6.923060e-14 1.491775e-13 6.882974e-12 8.298557e-01
 9: 6.009531e-08 8.601937e-07 6.614330e-06 1.389513e-07 1.092955e-05
10: 1.844918e-10 1.378047e-10 9.658852e-10 2.186144e-11 6.985845e-09
    best_class_t8minor best_score_t8minor    cd8_naive      cd8_tem
                &lt;char&gt;              &lt;num&gt;        &lt;num&gt;        &lt;num&gt;
 1:      cd8_exhausted       0.4691962886 6.011871e-05 1.860347e-01
 2:      cd8_cytotoxic       0.1649358419 3.833792e-06 1.311043e-01
 3:            cd8_tcm       0.0005912820 4.489162e-04 2.336174e-08
 4:      cd8_cytotoxic       0.8777776850 2.319425e-06 3.868444e-07
 5:            cd8_tem       0.5882416885 1.162076e-05 5.882417e-01
 6:      cd8_exhausted       0.0018765126 1.183680e-06 1.782040e-06
 7:          cd8_naive       0.0009770069 9.770069e-04 2.507600e-05
 8:      cd8_exhausted       0.0017514060 1.019562e-06 1.789781e-07
 9:            cd8_tem       0.3939834697 2.279564e-04 3.939835e-01
10:      cd8_cytotoxic       0.9587282579 5.255921e-06 3.696543e-02
         cd8_tcm cd8_cytotoxic cd8_exhausted
           &lt;num&gt;         &lt;num&gt;         &lt;num&gt;
 1: 2.514628e-12  3.447088e-01  4.691963e-01
 2: 1.210775e-11  1.649358e-01  2.880030e-02
 3: 5.912820e-04  1.352937e-04  8.823050e-08
 4: 9.247577e-09  8.777777e-01  1.222182e-01
 5: 1.619476e-14  2.342515e-01  1.774941e-01
 6: 1.656608e-07  1.904865e-05  1.876513e-03
 7: 3.768608e-04  5.270201e-05  1.295761e-04
 8: 1.001439e-07  7.830808e-06  1.751406e-03
 9: 1.169891e-06  2.354990e-01  3.702698e-01
10: 7.792592e-09  9.587283e-01  4.301033e-03</code></pre>
</div>
</div>
</section>
<section id="examining-and-validating-clustering-results" class="level3" data-number="5.2.5">
<h3 data-number="5.2.5" class="anchored" data-anchor-id="examining-and-validating-clustering-results"><span class="header-section-number">5.2.5</span> Examining and validating clustering results</h3>
<p>Now we can evaluate the cell typing performance. In particular, we want to check that the genes we specified as the index marker and predictors are in fact marker genes in the corresponding cell types.</p>
<p>First, we can look at a marker gene heatmap made with just the t-cells, and show the genes we specified as the most important ‘index genes’ for each of the <code>cd8t</code> and <code>cd4t</code> subtypes. Looking closely, we see that CD8A and CD8B are much higher in <code>cd8_</code> compared to <code>cd4_</code> types. Similarly, CD4 is higher expressed in <code>cd4_</code> subtypes compared to <code>cd8_</code> subtypes. Looking at the specific index markers for each subtype, we see good agreement between marker gene specified for each subtype reflected in our heatmap.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb55" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb55-1">fct <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clusterwise_foldchange_metrics</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">counts =</span> sem[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts[,tcell_ids]</span>
<span id="cb55-2">                                      ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metadata =</span> tcell_typing<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>post_probs[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tmajor"</span>]]</span>
<span id="cb55-3">                                      ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cluster_column =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltype_granular"</span>)</span>
<span id="cb55-4">idxs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unname</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_cd4tminor, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[["</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"index_marker"</span>))</span>
<span id="cb55-5">               ,<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_cd8tminor, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[["</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"index_marker"</span>)))))</span>
<span id="cb55-6"></span>
<span id="cb55-7">nms <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd4t"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_cd4tminor), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd8t"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_cd8tminor))</span>
<span id="cb55-8">hmsubtype <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">marker_heatmap</span>(fct, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">featsuse =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD8A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD8B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD4"</span>, idxs), <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clusterorder =</span> nms, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">orient_diagonal =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb55-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(hmsubtype)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb56" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb56-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### The key index markers for cd4 subtypes</span></span>
<span id="cb56-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_cd4tminor, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[["</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"index_marker"</span>)</span>
<span id="cb56-3"></span>
<span id="cb56-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### The key index markers for cd8 subtypes</span></span>
<span id="cb56-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_cd8tminor, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[["</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"index_marker"</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>$cd4_naive
[1] "TCF7" "LEF1" "SELL" "CCR7"

$cd4_tem
[1] "CD44"  "CCR6"  "CXCR3" "IL7R" 

$cd4_tcm
[1] "CCR7" "IL7R" "SELL"

$cd4_th1
[1] "TBX21" "IFNG"  "CXCR3" "STAT4"

$cd4_th2
[1] "GATA3" "IL4"   "IL5"   "IL13"  "CCR4" 

$cd4_th17
[1] "RORC"  "IL17A" "IL17F" "IL23R"

$cd4_treg
[1] "FOXP3"    "IL2RA"    "CTLA4"    "TNFRSF18"</code></pre>
</div>
<div class="cell-output cell-output-stdout">
<pre><code>$cd8_naive
[1] "TCF7" "LEF1" "CCR7" "SELL" "IL7R"

$cd8_tem
[1] "GZMK"  "GZMA"  "CXCR3" "CD69"  "IL7R" 

$cd8_tcm
[1] "CCR7" "IL7R" "SELL"

$cd8_cytotoxic
[1] "GZMB"  "PRF1"  "GNLY"  "KLRD1" "IFNG" 

$cd8_exhausted
[1] "PDCD1"  "LAG3"   "TIGIT"  "HAVCR2" "TOX"   </code></pre>
</div>
</div>
<div class="wider-image">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/immune-cell-typing-smooth/figures/hm_tsubtype.png" alt="Wide Image"></p>
</div>
<p>Here we can attach our T-cell annotations back onto our metadata, and remake our marker heatmap.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb59" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb59-1">met <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb59-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">merge</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(sem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data), tcell_typing<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>post_probs[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tmajor"</span>]][,.(cell_ID, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">celltype =</span> celltype_granular, best_score_granular)]</span>
<span id="cb59-3">      ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">all.x=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb59-4">met[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(celltype),celltype<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="er" style="color: #AD0000;
background-color: null;
font-style: inherit;">=</span>clusters_unsup]</span>
<span id="cb59-5"></span>
<span id="cb59-6">fc_t_all <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb59-7">HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clusterwise_foldchange_metrics</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">normed =</span> sem[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>data</span>
<span id="cb59-8">                   ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metadata =</span> met</span>
<span id="cb59-9">                   ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cluster_column =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltype"</span></span>
<span id="cb59-10">                   )</span>
<span id="cb59-11"></span>
<span id="cb59-12">hm_tcell <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">marker_heatmap</span>(fc_t_all</span>
<span id="cb59-13">                           ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">extras =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD8A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD8B"</span>)</span>
<span id="cb59-14">                          )</span>
<span id="cb59-15"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(hm_tcell)</span></code></pre></div>
</div>
<div class="wider-image">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/immune-cell-typing-smooth/figures/hm_tcell_annotated.png" alt="Wide Image"></p>
</div>
<p>Treating the ‘posterior probability’ as a confidence that the cell belongs to the corresponding cluster, we can show that the proportion of cells that express the expected marker genes generally increases with higher confidence.</p>
<p>In the figure below, we compare the major <code>cd4t</code> and <code>cd8t</code> T cell types in terms of some of their marker genes which are specific to each. We see that CD8A and CD8B increase in <code>cd8t</code> cells as we gain confidence in the cell type call, along with other <code>cd8t</code> specific markers (GZMB, GNLY, PRF1).<br>
Similarly, we see that CD4 increases in <code>cd4t</code> calls with higher posterior probability scores, along with <code>cd4t</code> subtype-specific markers like FOXP3, CTLA4, TIGIT (<code>cd4_treg</code> marker genes), IL17A and IL17F (<code>cd4_th17</code> markers) and GATA3 (<code>cd4_th2</code> marker).</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb60" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb60-1">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb60-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">marker_threshold_plot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">normed =</span> sem[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>data</span>
<span id="cb60-3">                      ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metadata =</span> tcell_typing<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>models<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>tmajor<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>post_probs</span>
<span id="cb60-4">                      ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clusters =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd4t"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd8t"</span>)</span>
<span id="cb60-5">                      ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">markers =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD3D"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IL17A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IL17F"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GATA3"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FOXP3"</span>,  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"IL2RA"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CTLA4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TIGIT"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD8A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD8B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GNLY"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GZMB"</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"PRF1"</span>)</span>
<span id="cb60-6">                      ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">thresholds =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.3</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.7</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.9</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.99</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.995</span>)</span>
<span id="cb60-7">                      ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">score_column =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"best_score"</span></span>
<span id="cb60-8">                      ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cluster_column =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"best_class"</span></span>
<span id="cb60-9">                      )</span>
<span id="cb60-10"></span>
<span id="cb60-11">p <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> p <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">14</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bold'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb60-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Proportion of cells expressing marker gene increases with </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">posterior probability confidence scores"</span>)</span>
<span id="cb60-13"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(p)</span></code></pre></div>
</div>
<div class="wider-image">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/immune-cell-typing-smooth/figures/markerbarplot_tcells_major.png" alt="Wide Image"></p>
</div>
<p>Here’s another look at the pairsplot for our metagene scores,this time coloring the cells based on their classification.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb61" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb61-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">metagene_pairsplot</span>(metagenes_t, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"yhat"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">obs =</span> model_t<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>post_probs[,.(cell_ID, best_class)], <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colorvar =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"best_class"</span>)</span></code></pre></div>
</div>
<div class="wider-image">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/immune-cell-typing-smooth/figures/pairshat_colored.png" alt="Wide Image"></p>
</div>
</section>
</section>
</section>
<section id="ex2" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> Example 2: Broad immune cell classification</h1>
<p>For the second example, we wish to ignore the unsupervised clustering and infer all cell types based entirely on the framework motivated here.</p>
<p>Using the full dataset, we can create a pipeline to first infer amongst 5 major cell type categories [<code>immune</code>, <code>epithelial</code>, <code>endothelial</code>, <code>fibroblast</code>, <code>plasma</code>] in a similar fashion as described in our first example.<br>
Then, we’ll infer subtypes of the immune cell labels with categories including [<code>tcell</code>,<code>bcell</code>,<code>macrophage</code>,<code>neutrophil</code>,<code>mast</code>,<code>monocyte</code>,<code>cDC</code>,<code>pDC</code>]. Finally, we’ll do some basic subclassification of the <code>tcells</code> into [<code>cd4t</code>,<code>cd8t</code>].</p>
<section id="tldr2" class="level2" data-number="6.1">
<h2 data-number="6.1" class="anchored" data-anchor-id="tldr2"><span class="header-section-number">6.1</span> ‘Just The Code’</h2>
<p>Here’s the code to produce the set of cell types. The next section will cover the details and discuss a few choices that were made.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb62" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb62-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### Pipeline, with </span></span>
<span id="cb62-2"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### level-1 ('l1') being major categorization </span></span>
<span id="cb62-3"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### level-2 ('l2') being classification of major immune cell categories</span></span>
<span id="cb62-4"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### level-t ('lt') being T8/T4 classification</span></span>
<span id="cb62-5"></span>
<span id="cb62-6">pipeline_io <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">make_pipeline</span>(</span>
<span id="cb62-7">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">markerslists =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l1"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_l1</span>
<span id="cb62-8">                      ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l2"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_immunemajor</span>
<span id="cb62-9">                      ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_tcellmajor)</span>
<span id="cb62-10">  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">priors =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l2"</span></span>
<span id="cb62-11">                 ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l2"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l1"</span>) </span>
<span id="cb62-12">  ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">priors_category =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lt"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"tcell"</span></span>
<span id="cb62-13">                          ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"l2"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"immune"</span>)</span>
<span id="cb62-14">)</span></code></pre></div>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb63" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb63-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">### run my pipeline (using all cells)</span></span>
<span id="cb63-2">immune_typing <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb63-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">run_pipeline</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">pipeline =</span> pipeline_io</span>
<span id="cb63-4">             ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">counts_matrix =</span> Matrix<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">t</span>(sem[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>counts)</span>
<span id="cb63-5">             ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">adjacency_matrix =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as</span>(sem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>graphs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>umapgrph</span>
<span id="cb63-6">                                    ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CsparseMatrix"</span>)</span>
<span id="cb63-7">             ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">celltype_call_threshold =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span></span>
<span id="cb63-8">             ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">return_all_columns_postprobs =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">FALSE</span></span>
<span id="cb63-9">             )</span></code></pre></div>
</div>
</section>
<section id="evaluation" class="level2" data-number="6.2">
<h2 data-number="6.2" class="anchored" data-anchor-id="evaluation"><span class="header-section-number">6.2</span> Evaluation</h2>
<p>Like previously, this <code>pipeline</code>, and the corresponding <code>markerslists</code> are saved as package datasets.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb64" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb64-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">str</span>(HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>pipeline_io,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max.level=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>List of 3
 $ markerslists   :List of 3
  ..$ l1:List of 6
  .. ..$ epithelial   :List of 3
  .. .. ..$ index_marker                               : chr [1:4] "EPCAM" "KRT18" "KRT19" "CDH1"
  .. .. ..$ predictors                                 : chr [1:167] "EPCAM" "KRT18" "KRT8" "KRT19" ...
  .. .. ..$ use_offclass_markers_as_negative_predictors: logi TRUE
  .. ..$ endothelial  :List of 3
  .. .. ..$ index_marker                               : chr [1:3] "PECAM1" "VWF" "CDH5"
  .. .. ..$ predictors                                 : chr [1:129] "PECAM1" "VWF" "CDH5" "CLDN5" ...
  .. .. ..$ use_offclass_markers_as_negative_predictors: logi TRUE
  .. ..$ fibroblast   :List of 3
  .. .. ..$ index_marker                               : chr [1:3] "COL1A1" "DCN" "PDGFRA"
  .. .. ..$ predictors                                 : chr [1:131] "COL1A2" "VIM" "S100A4" "PDGFRB" ...
  .. .. ..$ use_offclass_markers_as_negative_predictors: logi TRUE
  .. ..$ plasma       :List of 3
  .. .. ..$ index_marker                               : chr [1:5] "IGHG1" "IGHG1/2" "IGHA1" "MZB1" ...
  .. .. ..$ predictors                                 : chr [1:29] "IGHG1" "IGHG1/2" "IGHA1" "MZB1" ...
  .. .. ..$ use_offclass_markers_as_negative_predictors: logi TRUE
  .. ..$ immune       :List of 3
  .. .. ..$ index_marker                               : chr [1:6] "PTPRC" "ITGB2" "SPI1" "CD52" ...
  .. .. ..$ predictors                                 : chr [1:142] "PTPRC" "CD3E" "CD3D" "CD4" ...
  .. .. ..$ use_offclass_markers_as_negative_predictors: logi TRUE
  .. ..$ smooth_muscle:List of 3
  .. .. ..$ index_marker                               : chr [1:4] "MYH11" "ACTA2" "TAGLN" "DES"
  .. .. ..$ predictors                                 : chr [1:64] "MYH11" "ACTA2" "TAGLN" "DES" ...
  .. .. ..$ use_offclass_markers_as_negative_predictors: logi TRUE
  .. ..- attr(*, "class")= chr [1:2] "list" "markerslist"
  ..$ l2:List of 7
  .. ..$ tcell     :List of 3
  .. .. ..$ index_marker                               : chr [1:6] "CD3D" "CD3G" "CD3E" "IL7R" ...
  .. .. ..$ predictors                                 : chr [1:117] "CD3D" "CD3E" "CD3G" "CD8A" ...
  .. .. ..$ use_offclass_markers_as_negative_predictors: logi TRUE
  .. ..$ bcell     :List of 3
  .. .. ..$ index_marker                               : chr [1:4] "CD19" "MS4A1" "CD79A" "CD79B"
  .. .. ..$ predictors                                 : chr [1:84] "CD19" "MS4A1" "CD79A" "CD79B" ...
  .. .. ..$ use_offclass_markers_as_negative_predictors: logi TRUE
  .. ..$ macrophage:List of 3
  .. .. ..$ index_marker                               : chr [1:4] "CD163" "CD68" "MARCO" "CSF1R"
  .. .. ..$ predictors                                 : chr [1:100] "CD68" "CD163" "MARCO" "CSF1R" ...
  .. .. ..$ use_offclass_markers_as_negative_predictors: logi TRUE
  .. ..$ neutrophil:List of 3
  .. .. ..$ index_marker                               : chr [1:4] "MPO" "FCGR3B" "S100A8" "S100A9"
  .. .. ..$ predictors                                 : chr [1:100] "MPO" "FCGR3B" "S100A8" "S100A9" ...
  .. .. ..$ use_offclass_markers_as_negative_predictors: logi TRUE
  .. ..$ mast      :List of 3
  .. .. ..$ index_marker                               : chr [1:5] "KIT" "TPSAB1" "TPSB2" "TPSAB1/2" ...
  .. .. ..$ predictors                                 : chr [1:92] "KIT" "TPSAB1" "CPA3" "TPSB2" ...
  .. .. ..$ use_offclass_markers_as_negative_predictors: logi TRUE
  .. ..$ monocyte  :List of 3
  .. .. ..$ index_marker                               : chr [1:4] "CD14" "FCGR3A" "CCR2" "LYZ"
  .. .. ..$ predictors                                 : chr [1:130] "CD14" "FCGR3A" "CCR2" "LYZ" ...
  .. .. ..$ use_offclass_markers_as_negative_predictors: logi TRUE
  .. ..$ dendritic :List of 3
  .. .. ..$ index_marker                               : chr [1:5] "ITGAX" "CLEC9A" "FLT3" "XCR1" ...
  .. .. ..$ predictors                                 : chr [1:103] "ITGAX" "CLEC9A" "FLT3" "XCR1" ...
  .. .. ..$ use_offclass_markers_as_negative_predictors: logi TRUE
  .. ..- attr(*, "class")= chr [1:2] "list" "markerslist"
  ..$ lt:List of 2
  .. ..$ cd8t:List of 3
  .. .. ..$ index_marker                               : chr [1:2] "CD8B" "CD8A"
  .. .. ..$ predictors                                 : chr [1:48] "CD3D" "CD3E" "CD3G" "CD8A" ...
  .. .. ..$ use_offclass_markers_as_negative_predictors: logi TRUE
  .. ..$ cd4t:List of 3
  .. .. ..$ index_marker                               : chr "CD4"
  .. .. ..$ predictors                                 : chr [1:48] "CD3D" "CD3E" "CD3G" "CD4" ...
  .. .. ..$ use_offclass_markers_as_negative_predictors: logi TRUE
  .. ..- attr(*, "class")= chr [1:2] "list" "markerslist"
 $ priors         :List of 2
  ..$ lt: chr "l2"
  ..$ l2: chr "l1"
 $ priors_category:List of 2
  ..$ lt: chr "tcell"
  ..$ l2: chr "immune"
 - attr(*, "class")= chr [1:2] "list" "pipeline"</code></pre>
</div>
</div>
<p>We can look at a heatmap showing the marker genes for our cell types to check whether the algorithm produced sensible results. Because I have a lot of cell type categories, and some of them are not totally exclusive (for example, macrophage/monocyte are very similar and share many markers), I don’t necessarily expect all my cells to have very high confidence scores for every cell type; I’m okay here with taking the most granular cell type calls and running with them.</p>
<p>These clusters show more granularity in a first pass than my original set of unsupervised clusters. The heatmap below also shows very sane-looking results, with marker genes corresponding to many of the genes I specified in <code>markerslists</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb66" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb66-1">fc_l1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb66-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">clusterwise_foldchange_metrics</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">normed =</span> sem[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"RNA"</span>]]<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>data</span>
<span id="cb66-3">                     ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metadata =</span>immune_typing<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>post_probs[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]</span>
<span id="cb66-4">                     ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cluster_column =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltype_granular"</span></span>
<span id="cb66-5">  )</span>
<span id="cb66-6">hm_l1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">marker_heatmap</span>(fc_l1, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">extras =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD3D"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD8A"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD8B"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"FOXP3"</span>))</span>
<span id="cb66-7"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(hm_l1)</span></code></pre></div>
</div>
<div class="wider-image">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/immune-cell-typing-smooth/figures/hm_l1.png" alt="Wide Image"></p>
</div>
<div class="cell">
<div class="sourceCode cell-code" id="cb67" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb67-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span>markerslist_immunemajor, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"[["</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"index_marker"</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>$tcell
[1] "CD3D"  "CD3G"  "CD3E"  "IL7R"  "TRBC1" "CD2"  

$bcell
[1] "CD19"  "MS4A1" "CD79A" "CD79B"

$macrophage
[1] "CD163" "CD68"  "MARCO" "CSF1R"

$neutrophil
[1] "MPO"    "FCGR3B" "S100A8" "S100A9"

$mast
[1] "KIT"      "TPSAB1"   "TPSB2"    "TPSAB1/2" "CPA3"    

$monocyte
[1] "CD14"   "FCGR3A" "CCR2"   "LYZ"   

$dendritic
[1] "ITGAX"  "CLEC9A" "FLT3"   "XCR1"   "CD1C"  </code></pre>
</div>
</div>
<p>Here’s a spatial plot of the cell types we’ve called so far. We could stop here, or continue in the same manner for subclassifying any other cell types.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb69" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb69-1">met <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">merge</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data.table</span>(sem<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">@</span>meta.data)</span>
<span id="cb69-2">             ,immune_typing<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>post_probs<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>l1[,.(cell_ID, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">celltype_supervised =</span> celltype_granular)]</span>
<span id="cb69-3">             ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_ID"</span>)</span>
<span id="cb69-4"></span>
<span id="cb69-5">colorpal <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#F0A0FF'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#E0FF66'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#C20088'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#00998F'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#426600'</span></span>
<span id="cb69-6">              , <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#4C005C"</span> </span>
<span id="cb69-7">              ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#191919'</span></span>
<span id="cb69-8">              ,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#003380'</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#005C31'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#94FFB5'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#990000'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#0075DC'</span>,<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'#FFA405'</span>)</span>
<span id="cb69-9"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">names</span>(colorpal) <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sort</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>(met[[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltype_supervised"</span>]]))</span>
<span id="cb69-10"></span>
<span id="cb69-11">xyplist_sup <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb69-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">split</span>(met, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"portion"</span>), <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(xx){</span>
<span id="cb69-13">    HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xyplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cluster_column =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltype_supervised"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metadata =</span> xx</span>
<span id="cb69-14">                       , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ptsize =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cls =</span> colorpal</span>
<span id="cb69-15">                       <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#,clusters = c("cd4t", "cd8t", "bcell")</span></span>
<span id="cb69-16"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#                       , ptsize = 0.01, cls = colorpal</span></span>
<span id="cb69-17">                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plotfirst =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"epithelial"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"endothelial"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fibroblast"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"smooth_muscle"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plasma"</span>)</span>
<span id="cb69-18">                       ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>()</span>
<span id="cb69-19">  })  </span>
<span id="cb69-20">xyplot_sup <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb69-21">cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_grid</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plotlist =</span> xyplist_sup,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb69-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'white'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb69-23">  cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">panel_border</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">remove=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) </span>
<span id="cb69-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(xyplot_sup)</span></code></pre></div>
</details>
</div>
<div class="wider-image">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/immune-cell-typing-smooth/figures/xyplot_sup.png" alt="Wide Image"></p>
</div>
<p>Below, we notice several interesting things about the spatial distribution of <code>cd8t</code>, <code>cd4t</code>, and <code>bcell</code> types. The <code>cd4t</code> cells tend to show higher colocalization with <code>bcell</code>s in tertiary lymphoid type structures, while <code>cd8t</code> spatial distribution are more dispersed throughout the tissue. This reflects the role of <code>cd8t</code> cells in seeking out and killing tumor cells, compared to the role of <code>cd4t</code> cells in local antigen presentation.</p>
<div class="cell">
<details class="code-fold">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb70" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb70-1">xyplist_lymph <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb70-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">split</span>(met, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">by=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"portion"</span>), <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">function</span>(xx){</span>
<span id="cb70-3">    HieraType<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">xyplot</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cluster_column =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"celltype_supervised"</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">metadata =</span> xx</span>
<span id="cb70-4">                       , <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ptsize =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.05</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cls =</span> colorpal</span>
<span id="cb70-5">                       ,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">clusters =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd4t"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cd8t"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"bcell"</span>)</span>
<span id="cb70-6">                       ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_fixed</span>()</span>
<span id="cb70-7">  })</span>
<span id="cb70-8"></span>
<span id="cb70-9">lymphplot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> </span>
<span id="cb70-10">cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_grid</span>(</span>
<span id="cb70-11">xyplist_lymph[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>]]  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb70-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>celltype_supervised) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> ggdark<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dark_theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bold'</span>))</span>
<span id="cb70-13">,xyplist_lymph[[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>]]  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb70-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span>celltype_supervised) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> ggdark<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">dark_theme_bw</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">text=</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_text</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">size=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">12</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">face=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'bold'</span>))</span>
<span id="cb70-15">,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">nrow=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span></span>
<span id="cb70-16">,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rel_heights  =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.3</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb70-17">)  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb70-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">plot.background =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_rect</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>,<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">color=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'black'</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb70-19">  cowplot<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">panel_border</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">remove=</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>) </span>
<span id="cb70-20"></span>
<span id="cb70-21"></span>
<span id="cb70-22"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print</span>(lymphplot)</span></code></pre></div>
</details>
</div>
<div class="wider-image">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/immune-cell-typing-smooth/figures/lymphxyplot.png" alt="Wide Image"></p>
</div>
</section>
</section>
<section id="conclusion" class="level1" data-number="7">
<h1 data-number="7"><span class="header-section-number">7</span> Conclusion</h1>
<p>We’ve discussed a method for cell typing that uses predefined sets of marker genes to build cell type specific metagene scores, which are probabilistically clustered into cell types.</p>
<p>Using a predefined set of marker genes has several advantages. For one, this allows users to prespecify the network of genes which are expected to have positive covariance within the cell type, and restricts any undesired influence of non-informative or noisy genes. Because no assumption is made regarding the average expression or level of covariance between any pair of genes, we suspect that in some cases this approach may be more flexible and robust in the presence of batch effects or platform effects compared to using pre-trained models, data transfer, or reference profiles which may have been trained using different sample conditions or technologies.</p>
<p>The NNLS regression framework for estimating celltype metagenes allows for improved prediction power by incorporating information from similar cells through an adjacency network. By restricting the direction of the regression coefficients, we’ve implicitly imposed an assumption of positive covariance between these markers within the corresponding cell type class. Sign constraints have been shown to be as effective in some cases as explicit regularization <span class="citation" data-cites="nnlsref">(Slawski and Hein 2013)</span>.</p>
<p>We use a mixture of overfitted multivariate gaussian mixture models for probabilistic cell type classification. This approach is effectively a non-parametric mixture model, where we assume that the distribution of metagene scores for each cell type can be approximated by a ‘large-enough’ mixture of multivariate gaussians <span class="citation" data-cites="aragam2020identifiability">(Aragam et al. 2020)</span>. The simple selection of anchor cells based on score positivity, and ability to fine tune cell typing by controlling behavior of double positivity should allow for easy user control and flexibility.</p>
<p>While we envision the method to be useful for many cell typing applications, there are several caveats and limitations users should keep in mind. One primary assumption is that the user has a sense of the tissue type they are working with and the cell types that are likely to be present. If the user were to run a “tcell typing pipeline” on myeloid cells, they may see unexpected or poor results. Similarly, the “io pipeline” we used in Example 2, may not perform well in a very different tissue type, like brain for example. If we wanted to apply this method to a tissue type like ‘brain’, we may need to generate a new pipeline, with <code>markerslists</code> for brain specific cell types like <code>neurons</code> and <code>oligodendrocytes</code>. For cases where a major cell type exists in a dataset but does not have a <code>markerslists</code> to be modeled, that cell type could manifest as cells which have “low posterior probability” for all of the other cell type classes included in the pipeline.</p>
<p>There are several future improvements for this method we plan to work on. Simultaneous estimation of metagene scores and clustering (perhaps through a regression-based mixture model) might enhance the power of metagene scores and classification by optimizing the cell allocations to the correct cluster simultaneously during model-fitting. Exploring other frameworks outside of NNLS regression could potentially capture more flexible model structures with interaction and non-linearity.<br>
The ability or freedom to learn additional marker genes from the data, and an extension to a semi-supervised framework where cell types where marker genes are unknown a priori would also be useful.</p>
<p>We’ve implemented the tools presented here in the R package <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/tree/Main/_code/HieraType">HieraType</a>.</p>
</section>
<section id="quick-summary-of-package-functions-used-in-this-post" class="level1" data-number="8">
<h1 data-number="8"><span class="header-section-number">8</span> Quick summary of package functions used in this post</h1>
<p>Below we call out a short list of <code>HieraType</code> package functions which were used throughout this post. Please see the examples throughout the rest of this document for more context on their usage.</p>
<p><em>Model Fitting and Clustering</em></p>
<ul>
<li><p><code>make_markerlist()</code> - Used to create a custom list of cell type markers.</p></li>
<li><p><code>make_pipeline()</code> - Used to create a pipeline, or recipe for hierarchical cell typing.</p></li>
<li><p><code>run_pipeline()</code> - Used to run a hierarchical cell typing pipeline.</p></li>
<li><p><code>fit_metagene_scores()</code> - This function fits cell type metagene scores. Called as a standalone function or automatically within <code>run_pipeline</code>,</p></li>
<li><p><code>cluster_metagenes()</code> - This function clusters cell type metagene scores using overfitted-gaussian mixture models. Also called within <code>run_pipeline</code>.</p></li>
</ul>
<p><em>Plotting and Diagnostics</em></p>
<ul>
<li><p><code>xyplot()</code> - A utility function for plotting cell types in x/y space.</p></li>
<li><p><code>metagene_pairsplot()</code> - Plot pairwise distributions of metagene scores.</p></li>
<li><p><code>metagene_coefficients_plot()</code> - Plot for which genes contribute most to cell type metagene scores.</p></li>
<li><p><code>marker_threshold_plot()</code> - Model diagnostics plot, show specific marker genes and the proportion of cells that express them by cluster, for increasing posterior probability thresholds.</p></li>
<li><p><code>clusterwise_foldchange_metrics()</code> - Computes the fold change, average expression, proportion of cells with at least 1 count for each gene and each cluster. This is the data used as input to a marker gene heatmap.</p></li>
<li><p><code>marker_heatmap()</code> - Makes a bubble-style heatmap plot (clusters x marker genes) showing the proportion of cells with at least one count (bubble size) and relative average expression (bubble color). Easy to add and control the genes shown in the heatmap, and can specify a fixed order for comparing multiple heatmaps.</p></li>
</ul>


<!-- -->


</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-aragam2020identifiability" class="csl-entry">
Aragam, Bryon, Chen Dan, Eric P. Xing, and Pradeep Ravikumar. 2020. <span>“<span class="nocase">Identifiability of nonparametric mixture models and Bayes optimal clustering</span>.”</span> <em>The Annals of Statistics</em> 48 (4): 2277–2302. <a href="https://doi.org/10.1214/19-AOS1887">https://doi.org/10.1214/19-AOS1887</a>.
</div>
<div id="ref-nonnegpca" class="csl-entry">
Sigg, Christian D., and Joachim M. Buhmann. 2008. <span>“Expectation-Maximization for Sparse and Non-Negative PCA.”</span> In <em>Proceedings of the 25th International Conference on Machine Learning</em>, 960–67. ICML ’08. New York, NY, USA: Association for Computing Machinery. <a href="https://doi.org/10.1145/1390156.1390277">https://doi.org/10.1145/1390156.1390277</a>.
</div>
<div id="ref-nnlsref" class="csl-entry">
Slawski, Martin, and Matthias Hein. 2013. <span>“<span class="nocase">Non-negative least squares for high-dimensional linear models: Consistency and sparse recovery without regularization</span>.”</span> <em>Electronic Journal of Statistics</em> 7 (none): 3004–56. <a href="https://doi.org/10.1214/13-EJS868">https://doi.org/10.1214/13-EJS868</a>.
</div>
</div></section></div> ]]></description>
  <category>cell typing</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/immune-cell-typing-smooth/</guid>
  <pubDate>Fri, 20 Jun 2025 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/immune-cell-typing-smooth/figures/hm_tsubtype.png" medium="image" type="image/png" height="56" width="144"/>
</item>
<item>
  <title>smiDE: an open-source package for differential expression analysis with spatially correlated data</title>
  <dc:creator>Dan McGuire</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/smiDE/</link>
  <description><![CDATA[ 





<section id="differential-expression-analysis-with-spatially-correlated-data" class="level1">
<h1>Differential Expression Analysis With Spatially Correlated Data</h1>
<p>Spatially-resolved transcriptomic (SRT) data offers unprecedented insights into gene expression patterns, but analyzing this data requires specialized approaches. Traditional differential expression (DE) methods often falter when applied to spatially correlated data, leading to unreliable results and significant rates of false discovery. To address this challenge, <span class="citation" data-cites="Vasconcelos2024">(Vasconcelos et al. 2024)</span> present a comprehensive analysis of DE methodologies in their preprint, <a href="https://www.biorxiv.org/content/10.1101/2024.08.02.606405v1.full" target="_blank">“Differential Expression Analysis for Spatially Correlated Data”</a> . This work systematically evaluates the performance of various modeling strategies, providing clear recommendations for researchers.</p>
<p>The rest of this post aims to summarize some of the key findings from the paper and provide practical guidance on how to conduct robust DE analysis with spatial data. The accompanying <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/tree/Main/_code/smiDE" target="_blank">smiDE</a> R package offers readily accessible tools for implementing these recommendations.</p>
<section id="opportunities" class="level2">
<h2 class="anchored" data-anchor-id="opportunities">Opportunities</h2>
<p>While DE analysis has long been a core component of gene expression studies, SRT data presents new opportunities for addressing fundamental questions regarding how cells respond to their local environment and interact with other cell types.</p>
<p>As a motivating example, suppose I have annotated cell type and spatial context in my dataset; I might be broadly interested in T cells, cancer cells, and how they behave within different spatial contexts.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/smiDE/figures/fig1_ab.PNG" class="img-fluid figure-img" width="506"></p>
</figure>
</div>
</div>
</div>
<p>Tons of interesting questions along these lines can be phrased as DE problems, for example</p>
<ul>
<li>How does the expression of genes in T cells differ when located in stroma vs.&nbsp;tumor bed? (Left panel, blue vs.&nbsp;purple points)</li>
<li>How does expression of genes in cancer cells in the tumor bed differ based on distance to the nearest T-cell? (middle panel, cancer cells with arrow drawn to nearest T cell and colored by distance)</li>
<li>How is gene expression for T-cells in stroma modulated by distance to the tumor bed? (Right panel, rings highlight benchmarks of “distance from tumor bed”)</li>
</ul>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/smiDE/figures/fig1_thumbnail.PNG" class="img-fluid figure-img" width="790"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="unique-challenges-for-de-analyis-with-srt-data" class="level2">
<h2 class="anchored" data-anchor-id="unique-challenges-for-de-analyis-with-srt-data">Unique challenges for DE analyis with SRT data</h2>
<p>While the types of questions we can tackle with DE are limitless, there are unique challenges associated with SRT technologies that can lead to false discoveries when not properly addressed.</p>
<p>Two primary issues include:</p>
<ul>
<li>segmentation errors<br>
</li>
<li>unmodeled auto-correlation in expression amongst spatially neighboring cells</li>
</ul>
<p>Below, we’ll give a very brief overview of how these problems can lead to biased effects estimates and incorrect inferences in DE.</p>
<section id="segmentation-error" class="level4">
<h4 class="anchored" data-anchor-id="segmentation-error">Segmentation error</h4>
<p>Even minor segmentation errors can distort DE results if the analysis doesn’t properly account for them. For example, suppose I want to analyze the behavior of macrophage cells, and how gene expression differs for macrophages in tumor-infiltrated regions of tissue.</p>
<p>The picture below shows KRT17 transcripts from neighboring epithelial (cancer) cells falsely assigned to the macrophage cell inside a tumor region.</p>
<p>A naiive DE analysis may identify KRT17 as DE in the tumor, while an experienced bioinformatician may immediately recognize that this gene should not be expressed in the macrophage cell type at all (the very presence of the gene would challenge the cell type identity).</p>
<!-- The picture below shows KRT17 transcripts from neighboring epithelial cells falsely assigned to the <span style="color: DeepPink;"> macrophage cell </span>inside a tumor region. -->
<p>The picture below shows KRT17 transcripts from neighboring cancer cells falsely assigned to the macrophage cell inside a tumor region.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/smiDE/figures/napari_contam_example.png" class="img-fluid figure-img" width="1102"></p>
</figure>
</div>
</div>
</div>
<p>Even if the number of falsely assigned transcripts is small, these errors are correlated with our DE question in a way that confounds the analysis. Namely, the false positive KRT17 transcripts are more likely than not to occur in tumor regions compared to elsewhere because they come from the cancer cells!</p>
<p>We could describe this dilemma for a DE analysis through a directed-acyclic graph, where the neighboring KRT17 expression in cancer cells acts as a confounder.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/smiDE/figures/contam_example_dag.png" class="img-fluid figure-img" width="250"></p>
</figure>
</div>
</div>
</div>
<p>In the paper, we propose two approaches to deal with this issue.</p>
<ol type="1">
<li><p>A ‘overlapping cells metric’: Used to identify genes which may be expressed within specific cell types due primarily due to overlapping cells / segmentation errors , and exclude them from cell-type specific DE analysis. The metric computes the average expression in “macrophage cells”, and the average expression in <em>spatial neighbors</em> of macrophage cells among all non-macrophage cell types. The ratio of these two average expression vectors is a quick and useful way to discard implausible genes.</p></li>
<li><p>Covariate adjustment: We can compute the total expression of ‘KRT17’ in the spatial neighbors of macrophage cells among all non-macrophage neighbors, and include this as a control variable in the regression model.</p></li>
</ol>
<p>Below is a side-by-side summary of volcano plots before and after implementing these approaches, where genes are colored by their plausible cell type annotation from the Human Protein Atlas, and marked by whether or not the gene passes the overlapping cells metric.</p>
<p>On the left, a number of implausible brown genes which should be “Not detected in immune cells” are falsely identified as being upregulated in macrophages in the tumor region. Nearly all of these genes could be pre-filtered before DE is conducted, by nature of “failing the filter” metric.<br>
On the right-hand side, we see the significance and fold change for a large number of genes is largely attenuated if we employ the covariate-adjustment approach; controlling for expression in neighboring cells of other cell types.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/smiDE/figures/contamination_volcano.png" class="img-fluid figure-img" width="1452"></p>
</figure>
</div>
</div>
</div>
</section>
<section id="spatial-correlation" class="level4">
<h4 class="anchored" data-anchor-id="spatial-correlation">Spatial Correlation</h4>
<p>Spatial auto-correlation is another way in which gene expression could inflate statistical significance in DE. Intuitively, neighboring cells may have more similar gene expression profiles compared to cells located at greater distances, due to factors which may be unrelated to our covariate of interest. A solution we propose is to include a spatially correlated random effect (SRE) in the DE model, which can account for the un-modeled spatial correlations in expression.</p>
<p>For example, suppose I am working with a colon-cancer dataset, and am interested in researching how gene expression changes in B cells as they approach the center of tertiary lymphoid structures.</p>
<p>I may count the number of immune cells neighboring the B-cells as a continuous measurement of how close the B cell is to the center of the TLS.</p>
<p>Below, the left hand plot highlights two densely packed clusters of B cells in TLS regions, and on the right, these B cells are annotated by the covariate (# of immune cell neighbors).</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/smiDE/figures/colon_cancer_sre.png" class="img-fluid figure-img" width="1888"></p>
</figure>
</div>
</div>
</div>
<p>Below, we show how inference can change from a naiive DE analysis (left), to a ‘segmentation-aware’ analysis (middle), to a DE analysis which also includes the spatial random effect (right). The model with SRE identifies a set of 9 high-confidence DE genes with up-regulated expression in TLS interior, down from 141 DE genes identified through the naiive approach.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/smiDE/figures/colon_cancer_volcanos.png" class="img-fluid figure-img" width="1976"></p>
</figure>
</div>
</div>
</div>
<p>The ability to visually assess the behavior of the random effects can provide further context for the analysis. For example, CD79A retains significance in the SRE model, showing several concentrated regions of high expression captured by the random effect. For WNT7A, numerous small regions of autocorrelated expression reduce the significance of the gene when taken into context of the model.</p>
<div class="cell">
<div class="cell-output-display">
<div>
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/smiDE/figures/visual_sre.png" class="img-fluid figure-img" width="1444"></p>
</figure>
</div>
</div>
</div>
</section>
</section>
</section>
<section id="conclusions" class="level1">
<h1>Conclusions</h1>
<p>Here we’ve discussed opportunities for DE analysis with SRT datasets, along with unique challenges this data type poses. All of the analysis tools described here are implemented in the <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/tree/Main/_code/smiDE" target="_blank">smiDE R package</a>, with syntax examples and vignettes which can be found on the github page. We hope the reader will also check out the <a href="https://www.biorxiv.org/content/10.1101/2024.08.02.606405v1.full" target="_blank">preprint</a> for more thorough detail on the our study of DE with spatially correlated data.</p>
</section>
<section id="resources" class="level1">
<h1>Resources</h1>
<ul>
<li><a href="https://www.biorxiv.org/content/10.1101/2024.08.02.606405v1.full" target="_blank">preprint</a></li>
<li><a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/tree/Main/_code/smiDE" target="_blank">smiDE R package</a></li>
</ul>



</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-Vasconcelos2024" class="csl-entry">
Vasconcelos, Ana Gabriela, Daniel McGuire, Noah Simon, Patrick Danaher, and Ali Shojaie. 2024. <span>“Differential Expression Analysis for Spatially Correlated Data.”</span> <em>bioRxiv</em>. <a href="https://doi.org/10.1101/2024.08.02.606405">https://doi.org/10.1101/2024.08.02.606405</a>.
</div>
</div></section></div> ]]></description>
  <category>differential expression</category>
  <category>DE</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/smiDE/</guid>
  <pubDate>Wed, 21 May 2025 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/smiDE/figures/fig1_thumbnail.PNG" medium="image"/>
</item>
<item>
  <title>Cheat sheets for cell typing, powered by LLMs and the Human Protein Atlas</title>
  <dc:creator>Patrick Danaher</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/cell-typing-cheat-sheets/</link>
  <description><![CDATA[ 





<section id="introduction" class="level2" data-number="1">
<h2 data-number="1" class="anchored" data-anchor-id="introduction"><span class="header-section-number">1</span> Introduction</h2>
<p>A key part of any cell typing attempt is examination of each cell type’s spatial distributions. These patterns can strongly suggest which cell type an unknown cluster is, and they are useful for confirming putative cell type assignments.</p>
<p>The Human Protein Atlas is a powerful resource for these exercises. For almost every cell type in the human body, the HPA contains high-res IHC images of a protein that is highly specific to the cell type.</p>
<p>Here, with the help of LMMs, we have compiled “cheat sheets” for a small collection of tissues. Each sheet delineates the cell types present in a tissue type, suggests a marker protein that can be found in the HPA, and links to the relevant HPA page and to a relevant IHC image.</p>
<p>Here’s a glance at one:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/cell-typing-cheat-sheets/images/example.png" class="img-fluid figure-img"></p>
<figcaption>Lung cheat sheet</figcaption>
</figure>
</div>
<p>Caveat: this information was generated by an LLM and reviewed/edited by humans. As with any product of an LMM (or a human), give any individual claim less than total credence.</p>
<p>We are posting this now with just 3 tissues covered, with the plan to add more later. If you mimic our approach for another tissue, feel free to send us your own cheat sheets, and we’ll host them here for the community.</p>
</section>
<section id="cheat-sheets-for-tissue-specific-cell-typing" class="level2" data-number="2">
<h2 data-number="2" class="anchored" data-anchor-id="cheat-sheets-for-tissue-specific-cell-typing"><span class="header-section-number">2</span> Cheat sheets for tissue-specific cell typing:</h2>
<ul>
<li><a href="resources/kidney cell types cheat sheet.html" target="_blank">Kidney</a></li>
<li><a href="resources/pancreas cheat sheet.html" target="_blank">Pancreas</a></li>
<li><a href="resources/lung cheat sheet.html" target="_blank">Lung</a></li>
</ul>
</section>
<section id="example-llm-prompts-for-generating-your-own-cheat-sheet" class="level2" data-number="3">
<h2 data-number="3" class="anchored" data-anchor-id="example-llm-prompts-for-generating-your-own-cheat-sheet"><span class="header-section-number">3</span> Example LLM prompts for generating your own cheat sheet:</h2>
<p>We employed variations of the below to elicit these cheat sheets from a LLM. The whole exercise should take ~2 minutes per cell type.</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Prompt to get good markers
</div>
</div>
<div class="callout-body-container callout-body">
<p>Can you please give me a table of the major cell types in the human lung, and 1-3 good marker genes or proteins for each one? (Marker proteins are better - we’ll be looking them up in the Human protein atlas next.)</p>
</div>
</div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Prompt to get HPA links
</div>
</div>
<div class="callout-body-container callout-body">
<p>Now please add links to the Human Protein Atlas tissue page for the best marker for each cell type</p>
</div>
</div>
<p>Here we exercised some curatorial judgment and selected the best IHC image by eye. We appended the links to those images to the table generated from the previous prompt. See the final column below:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/cell-typing-cheat-sheets/images/tableexample.png" class="img-fluid figure-img"></p>
<figcaption>Adding links to IHC images</figcaption>
</figure>
</div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Prompt to compile into HTML file
</div>
</div>
<div class="callout-body-container callout-body">
<p>OK, now make me an html please from the below table. The links to images should be thumbnails.</p>
</div>
</div>
<p>Now copy the response to notepad, save as .html, and you’re done!</p>


</section>

 ]]></description>
  <category>cell typing</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/cell-typing-cheat-sheets/</guid>
  <pubDate>Fri, 02 May 2025 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/cell-typing-cheat-sheets/images/thumbnail.png" medium="image" type="image/png" height="131" width="144"/>
</item>
<item>
  <title>Programmatic stitching of protein images with napari-cosmx</title>
  <dc:creator>Evelyn Metzger</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-protein-stitching/napari-cosmx-protein-stitching.html</link>
  <description><![CDATA[ 





<div class="cell">
<div class="cell-output-display">
<div id="fig-example" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-example-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-protein-stitching/figures/fig-protein-example.png" class="img-fluid figure-img" width="749">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-example-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: A small section of CosMx SMI data showing DNA (blue), PanCK (green) and the CD3 protein (yellow).
</figcaption>
</figure>
</div>
</div>
</div>
<p>The <code>napari-cosmx</code> plugin can be used to view CosMx<sup>®</sup> Spatial Molecular Imager (SMI) RNA and protein data. In a <a href="../../posts/napari-stitching/napari-cosmx-stitching.html">previous post</a>, I showed users how to programmatically stitch RNA exports from AtoMx<sup>®</sup> Spatial Informatics Platform (SIP). The process used to stitch protein is similar to RNA with some adjustments that are found below.</p>
<p>This tutorial uses version 0.4.17.3 of the <code>napari-cosmx</code> plugin. This version is available as a <code>whl</code> file in the assets folder of the <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/blob/Main/assets/napari-cosmx%20releases/napari_CosMx-0.4.17.3-py3-none-any.whl">Scratch Space repository</a>. The tutorial below also builds upon the RNA-based post that more broadly covers how to create the napari environment, installing the plugin, and running scripts.</p>
<p>When <code>napari-cosmx</code> is installed, we get a few package scripts that can be called directly. The ones needed to stitch protein are:</p>
<ul>
<li><code>stitch-images</code>, which builds the IF zarr stores</li>
<li><code>stitch-expression</code>, which creates the zarr stores for each protein</li>
</ul>
<section id="exporting-protein-data" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Exporting protein data</h1>
<p>When exporting data from AtoMx SIP, be sure to select “Raw Files” and include Morphology2D, Miscellaneous, and ProteinDir (Figure&nbsp;2).</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-export-options" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-export-options-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-protein-stitching/figures/fig-export-options.png" class="img-fluid figure-img" width="548">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-export-options-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;2: Export these components to stitch protein.
</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="stitching-immunofluorescence-images" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Stitching immunofluorescence images</h1>
<p>This step is identical for RNA and protein.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">stitch-images</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--help</span></span></code></pre></div>
<pre><code>usage: stitch-images [-h] [-i INPUTDIR] [--imagesdir IMAGESDIR] [-o OUTPUTDIR] [-f OFFSETSDIR] [-l] [-u UMPERPX] [-z ZSLICE] [--dotzarr]

Tile CellLabels and morphology TIFFs.

optional arguments:
  -h, --help            show this help message and exit
  -i INPUTDIR, --inputdir INPUTDIR
                        Required: Path to CellLabels and morphology images.
  --imagesdir IMAGESDIR
                        Optional: Path to morphology images, if different than inputdir.
  -o OUTPUTDIR, --outputdir OUTPUTDIR
                        Required: Where to create zarr output.
  -f OFFSETSDIR, --offsetsdir OFFSETSDIR
                        Required: Path to directory location containing a file ending in FOV_Locations.csv or legacy format latest.fovs.csv.
  -l, --labels          
                        Optional: Only stitch labels.
  -u UMPERPX, --umperpx UMPERPX
                        Optional: Override image scale in um per pixel.
                        Instrument-specific values to use:
                        -&gt; beta04 = 0.1228
  -z ZSLICE, --zslice ZSLICE
                        Optional: Z slice to stitch.
  --dotzarr             
                        Optional: Add .zarr extension on multiscale pyramids.</code></pre>
<p>Example:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">stitch-images</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> path/to/CellStatsDir <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> path/to/napari_zarr <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-f</span> /path/to/RunSummary</span></code></pre></div>
</section>
<section id="stitch-protein-images" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Stitch Protein Images</h1>
<p>RNA uses <code>read-targets</code> to create a file that stores the spatial location of RNA transcripts. In contrast, Protein SMI data are more similar to IF TIFF files and so we use the <code>stitch-expression</code> package script to stitch together individual protein files. When complete, protein data will be found in the <code>images/protein</code> subfolder.</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">stitch-expression</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--help</span></span></code></pre></div>
<pre><code>usage: stitch-expression [-h] [-i INPUTDIR] [-o OUTPUTDIR] [-t TAG] [-u UMPERPX] [-s SCALE] [-c CYCLE] [--dotzarr]

Tile protein expression images

optional arguments:
  -h, --help            show this help message and exit
  -i INPUTDIR, --inputdir INPUTDIR
                        Required: Path to parent directory containing CellStatsDir, RunSummary, AnalysisResults, and ProteinDir.
  -o OUTPUTDIR, --outputdir OUTPUTDIR
                        Required: Where to create zarr output.
  -t TAG, --tag TAG     
                        Optional: Tag to append to end of protein names.
  -u UMPERPX, --umperpx UMPERPX
                        Optional: Override image scale in um per pixel.
                        Instrument-specific values to use:
                        -&gt; beta04 = 0.1228
  -s SCALE, --scale SCALE
                        Optional: Scale of expression images relative to raw,
                          use if decoded images are binned.
  -c CYCLE, --cycle CYCLE
                        Optional: Cycle to use, default is 1.
  --dotzarr             
                        Optional: Add .zarr extension on multiscale pyramids.</code></pre>
<p>Example:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">stitch-expression</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> path/to/parent/slide_folder <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> path/to/napari_zarr</span></code></pre></div>


</section>

 ]]></description>
  <category>napari</category>
  <category>how-tos</category>
  <category>python</category>
  <category>protein</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-protein-stitching/napari-cosmx-protein-stitching.html</guid>
  <pubDate>Fri, 21 Feb 2025 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-protein-stitching/figures/fig-protein-example.png" medium="image" type="image/png" height="140" width="144"/>
</item>
<item>
  <title>Exporting napari-cosmx Zarr stores to OME-TIFF</title>
  <dc:creator>Evelyn Metzger</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-ome-tiff/cosmx-ome-tiff.html</link>
  <description><![CDATA[ 





<div class="cell">
<div class="cell-output-display">
<div id="fig-gc" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-gc-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-ome-tiff/figures/fig-gc.png" class="img-fluid figure-img" width="769">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-gc-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: A regressed germinal center within a lymph node sample visualized with the <code>napari-cosmx</code> plugin. Membrane = Grey; DAPI = blue, cell segementation = cyan.
</figcaption>
</figure>
</div>
</div>
</div>
<section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>Immunofluorescence (IF) and protein data exported from AtoMx<sup>®</sup> Spatial Informatics Platform (SIP) are provided as multi-channel TIFF files, where each field of view (FOV) is contained in a separate file. Our <code>napari-cosmx</code> plugin offers one method to stitch these individual TIFF files, organizing them according to their spatial location. This stitching process within <code>napari-cosmx</code> generates a Zarr store for each IF or protein image. For visualization of tissue microscopy data, <a href="https://docs.openmicroscopy.org/ome-model/5.6.3/ome-tiff/">OME-TIFF</a> is a widely used format. The Zarr stores generated with <code>napari-cosmx</code> can be converted to OME-TIFF for viewing in other applications and this short blog post demonstrates how to perform this conversion.</p>
<p>This blog post is the fifth in our <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/#category=napari"><code>napari series</code></a>. For details on generating these napari Zarr stores, refer to either the GUI-based <a href="../../posts/napari-cosmx-intro/index.html">napari-cosmx plugin introduction</a> or the command-line tutorial on <a href="../../posts/napari-stitching/napari-cosmx-stitching.html">stitching</a>.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>While Napari and <code>napari-cosmx</code> can be installed on many systems, CosMx SMI data can be quite large. A slide with numerous FOVs may exceed the capabilities of a standard laptop.</p>
<p><code>napari-cosmx</code> is actively and continuously under development in the RnD groups at Bruker Spatial Biology. We do not (yet) have the source code for <code>napari-cosmx</code> opened-source. Please be aware that there may be bugs and that it has not gone through the regular level of quality and testing. Our goal here is to bring the capabilities of napari to CosMx SMI users as fast as possible.</p>
</div>
</div>
</section>
<section id="installation" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Installation</h1>
<p>This tutorial uses version 0.4.17.3 of the <code>napari-cosmx</code> plugin. This version is available as a <code>whl</code> file in the assets folder of the <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/blob/Main/assets/napari-cosmx%20releases/napari_CosMx-0.4.17.3-py3-none-any.whl">Scratch Space repository</a>.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>It is encouraged to use a virtual environment for these steps as there can be conflicting package and Python versions and this script has not been installed nor tested on all configurations. The example below used Python 3.9.13 within <code>pyenv</code>. In general, it is recommended to use Python &gt; 3.8 and Python &lt; 3.11 for the <code>napari-cosmx</code> plugin as newer versions of napari are not yet integrated into the plugin.</p>
</div>
</div>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-1-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-1" aria-controls="tabset-1-1" aria-selected="true">MacOS/Unix Install</a></li><li class="nav-item"><a class="nav-link" id="tabset-1-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-1-2" aria-controls="tabset-1-2" aria-selected="false">Windows</a></li></ul>
<div class="tab-content">
<div id="tabset-1-1" class="tab-pane active" aria-labelledby="tabset-1-1-tab">
<p>Assuming you have a <code>pyenv</code> virtual environment named napari_env:</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># terminal</span></span>
<span id="cb1-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyenv</span> activate napari_env</span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"napari[all]"</span></span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Optional use wget to download whl file directly.</span></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># wget https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/raw/refs/heads/Main/assets/napari-cosmx%20releases/napari_CosMx-0.4.17.3-py3-none-any.whl</span></span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install /path/to/your/whl/file</span></code></pre></div>
<p>You can confirm that the install worked with <code>pip freeze</code> or by directly accessing the package script:</p>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb2-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">which</span> export-tiff</span></code></pre></div>
<p>which should return the path to <code>export-tiff</code>.</p>
</div>
<div id="tabset-1-2" class="tab-pane" aria-labelledby="tabset-1-2-tab">
<p>For windows, <a href="https://github.com/pyenv-win/pyenv-win"><code>pyenv-win</code></a> and <a href="https://github.com/pyenv-win/pyenv-win-venv"><code>pyenv-win-venv</code></a> may be a good option but this has not been extensively tested.</p>
<p>Assuming you have a <code>pyenv-venv</code> virtual environment named napari_env:</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># terminal</span></span>
<span id="cb3-2"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyenv-venv</span> activate napari_env</span>
<span id="cb3-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"napari[all]"</span></span>
<span id="cb3-4"></span>
<span id="cb3-5"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pip</span> install /path/to/your/whl/file</span></code></pre></div>
</div>
</div>
</div>
</section>
<section id="usage" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Usage</h1>
<p>For help, type <code>export-tiff --help</code> in your terminal (unix/macOS) or PowerShell (Windows).</p>
<div class="sourceCode" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb4-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">export-tiff</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--help</span></span></code></pre></div>
<pre><code>usage: export-tiff [-h] [-i INPUTDIR] [-o OUTPUTDIR] [--filename FILENAME] [--compression COMPRESSION] [-b BATCHSIZE]
                   [-s] [-c [CHANNELS ...]] [-p [PROTEINS ...]] [--levels LEVELS] [-v] [--libvips]
                   [--vipshome VIPSHOME] [--vipsconcurrency VIPSCONCURRENCY]

Export stitched Zarr to OME-TIFF

optional arguments:
  -h, --help            show this help message and exit
  -i INPUTDIR, --inputdir INPUTDIR
                        Required: Path to existing stitched output.
  -o OUTPUTDIR, --outputdir OUTPUTDIR
                        Required: Path to write OME-TIFF file.
  --filename FILENAME   Name for OME-TIFF file, use ome.tif extension.
  --compression COMPRESSION
                        Passed to TiffWriter, default is 'zlib'. Other options include 'lzma' (smallest), 'lzw', and
                        'none'
  -b BATCHSIZE, --batchsize BATCHSIZE
                        Required: the number of elements to put into each ome-tiff file. Recommended = 5 or fewer.
  -s, --segmentation    Optional: Create TIFF for segmentation mask.
  -c [CHANNELS ...], --channels [CHANNELS ...]
                        Optional: Output only specific morphology channels
  -p [PROTEINS ...], --proteins [PROTEINS ...]
                        Optional: Output only specific proteins
  --levels LEVELS       Optional: Specify number of pyramid levels.
  -v, --verbose         Print verbose output?
  --libvips             Optional: Use libvips to create pyramidal image, will be slower but more memory-efficient.
  --vipshome VIPSHOME   Optional: Path to vips binaries. Required in Windows if vips and associated DLLs are not in
                        PATH
  --vipsconcurrency VIPSCONCURRENCY
                        Optional: Specify number of threads for vips.</code></pre>
<p>Since CosMx SMI data with hundreds of FOVs can be large (<em>e.g.</em>, &gt;50 GBs for RNA and larger still for protein data), the <code>--batchsize</code> flag can be used to create batches of smaller OME-TIFF files. The <code>--batchsize</code> flag specifies the upper limit of the number of channels/proteins that are included in a given OME-TIFF. For example, if <code>--batchsize</code> was set to <code>5</code>, and <code>-c</code> (channels) was also selected, the OME-TIFF file would include all five IF channels.</p>
<p>Note that the segmentation (<code>-s</code>) layer does not count toward the batch size. In other words, if selecting <code>-b 5 -c -s</code>, the resulting OME-TIFF file will include the cell borders and the five channels.</p>
<p>If you would like to generate an OME-TIFF file with only DNA, GFAP, and proteins Amyloid-Beta-1-40 and Phospho-Tau-S199, with cell borders:</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb6-1"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">export-tiff</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> /path/to/images/folder <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> /path/to/output/folder <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> DNA,GFAP <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-p</span> Amyloid-Beta-1-40,Phospho-Tau-S199</span></code></pre></div>
</section>
<section id="human-6k-lymph-node-example" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Human 6K Lymph Node Example</h1>
<p>Let’s test this script with an example. Here I used the Human Lymph Node FFPE dataset napari files that are <a href="https://nanostring.com/products/cosmx-spatial-molecular-imager/ffpe-dataset/cosmx-human-lymph-node-ffpe-dataset/">publicly available</a>. This dataset has a scan area of 104 <img src="https://latex.codecogs.com/png.latex?mm%5E2">, 400 FOVs, and ~1.8M cells. I am using an AWS r5b.8xlarge EC2 instance (32 vCPUs, 256 GB RAM) running Linux (Amazon Linux 2).</p>
<p>Navigate to the location of <code>napari.zip</code> and unzip it.</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb7-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Terminal</span></span>
<span id="cb7-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unzip</span> napari.zip</span></code></pre></div>
<p>To convert all the channels and the cell segmentation boundaries:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Terminal</span></span>
<span id="cb8-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># TIME="%e %U %S" time export-tiff -i ./napari -o output -s -c -b 5</span></span>
<span id="cb8-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">export-tiff</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> ./napari <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> output <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-b</span> 5</span></code></pre></div>
<blockquote class="blockquote">
<p>5352.18 50467.38 11061.83 10366568</p>
</blockquote>
<p>This script converted a single OME-TIFF file in just under 1.5 hours (5352/3600 = 1.49).</p>
<p>The size of the OME-TIFF file, which contains five IF channels plus the segmentation layer, is 54 GBs (<em>i.e.</em>, about 91% of the size of the Zarr stores).</p>
<p>The default method to convert Zarr to OME-TIFF can require more memory than your system has. If you run into memory issues, you can try the secondary method that uses <code>pyvips</code> (see Appendix).</p>
</section>
<section id="appendix" class="level1 unnumbered">
<h1 class="unnumbered">Appendix</h1>
<p>The <code>export-tiff</code> utility script runs in two different modes. The first one (default) is generally the quicker of the two. However, if you are running into memory issues, you can try the second option that is memory-optimized but runs slower and requires more disk space.</p>
<section id="installing-optional-dependency" class="level2 unnumbered">
<h2 class="unnumbered anchored" data-anchor-id="installing-optional-dependency">Installing optional dependency</h2>
<div class="tabset-margin-container"></div><div class="panel-tabset">
<ul class="nav nav-tabs"><li class="nav-item"><a class="nav-link active" id="tabset-2-1-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-1" aria-controls="tabset-2-1" aria-selected="true">MacOS/Unix Install</a></li><li class="nav-item"><a class="nav-link" id="tabset-2-2-tab" data-bs-toggle="tab" data-bs-target="#tabset-2-2" aria-controls="tabset-2-2" aria-selected="false">Windows</a></li></ul>
<div class="tab-content">
<div id="tabset-2-1" class="tab-pane active" aria-labelledby="tabset-2-1-tab">
<p>For macOS, I have had success with using brew following libvips’ <a href="https://www.libvips.org/install.html">recommendation</a>.</p>
<p>For Linux, be sure that the appropriate libraries are installed for your distribution. Check out libvips’ <a href="https://github.com/libvips/libvips/wiki/#building-and-installing">github wiki</a> for more tips.</p>
</div>
<div id="tabset-2-2" class="tab-pane" aria-labelledby="tabset-2-2-tab">
<p>Download and install <code>vips-dev-w64-all-8.16.0.zip</code> from <a href="https://github.com/libvips/build-win64-mxe/releases/">here</a></p>
<p>Unzip it and move its contents to your desired location. Add the folder to a convenient location and add the location of the binaries (<em>e.g.</em>, <code>C:\vips-dev-8.16.0\bin</code>) to your Path. Restart your computer.</p>
<p>When using the <code>--libvips</code> flag within the <code>export-tiff</code> package script, python will look for these binaries.</p>
</div>
</div>
</div>
<section id="running-with---libvips" class="level3 unnumbered">
<h3 class="unnumbered anchored" data-anchor-id="running-with---libvips">Running with <code>--libvips</code></h3>
<p>Rerunning the previous Lymph Node example with <code>--libvips</code>:</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb9-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Terminal</span></span>
<span id="cb9-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># TIME="%e %U %S" time export-tiff -i ./napari -o output -s -c -b 5</span></span>
<span id="cb9-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">export-tiff</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-i</span> ./napari <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-o</span> output <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-s</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-c</span> <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">-b</span> 5 <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">--libvips</span></span></code></pre></div>
<blockquote class="blockquote">
<p>16894.29 16987.47 438.18 16905396</p>
</blockquote>
<p>or about 4.6 hours.</p>


</section>
</section>
</section>

 ]]></description>
  <category>napari</category>
  <category>how-tos</category>
  <category>python</category>
  <category>OME-TIFF</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-ome-tiff/cosmx-ome-tiff.html</guid>
  <pubDate>Fri, 21 Feb 2025 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-ome-tiff/figures/fig-gc.png" medium="image" type="image/png" height="135" width="144"/>
</item>
<item>
  <title>Cell typing with CosMx® SMI Cell Profiles</title>
  <dc:creator>Megan Vandenberg</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/cosmx-cell-profiles/</link>
  <description><![CDATA[ 





<div class="cell">
<style type="text/css">
.center {
  display: block;
  margin-left: auto;
  margin-right: auto;
  width: 50%;
}

</style>
</div>
<section id="cosmx-smi-cell-profiles" class="level1">
<h1>CosMx SMI Cell Profiles</h1>
<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>Cell typing CosMx Spatial Molecular Imager (SMI) data can be done in <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/cell-typing-basics/" target="_blank">several ways</a>. One of these is to employ a reference matrix of known cell type profiles using our <code>Insitutype</code> package (<a href="https://www.biorxiv.org/content/10.1101/2022.10.19.512902v1" target="_blank">manuscript</a>, <a href="https://github.com/Nanostring-Biostats/insitutype" target="_blank">GitHub repository</a>, and <a href="https://github.com/Nanostring-Biostats/InSituType/blob/main/FAQs.md" target="_blank">GitHub FAQ</a>). While spatially-naive scRNAseq-derived profiles work well (e.g., <a href="https://github.com/Nanostring-Biostats/CellProfileLibrary" target="_blank">Cell Profile Library</a>), platform differences can extend the iterative process of celltyping <span class="citation" data-cites="Danaher2022">(Danaher et al. 2022)</span>. To that end, we present CosMx SMI-derived cell profiles, available on the GitHub repository <a href="https://github.com/Nanostring-Biostats/CosMx-Cell-Profiles" target="_blank">CosMx-Cell-Profiles</a>.</p>
</section>
<section id="overview" class="level2">
<h2 class="anchored" data-anchor-id="overview">Overview</h2>
<p>The <a href="https://github.com/Nanostring-Biostats/CosMx-Cell-Profiles" target="_blank">CosMx-Cell-Profiles</a> repository contains a library of cell profile matrices with accompanying statistics and metadata. For each featured tissue, the profiles matrix gives the average expression of a variety of relevant cell types. Each matrix in the library was derived from one or more CosMx SMI experiments of a mix of panels. There are profiles from healthy and cancerous adult human samples as well as mouse brain.</p>
<p>Each profile contains the following components:</p>
<ol type="1">
<li>Cell profiles matrix</li>
<li>Cell type annotations</li>
<li>Basic statistics</li>
<li>Target statistics</li>
<li>Metadata</li>
</ol>
</section>
<section id="file-types" class="level2">
<h2 class="anchored" data-anchor-id="file-types">File Types</h2>
<section id="cell-profiles-matrix" class="level3">
<h3 class="anchored" data-anchor-id="cell-profiles-matrix">Cell Profiles Matrix</h3>
<p>Each cell profiles matrix is a CSV file of targets by cell types. Each cell type’s profile is a unique column. Each target is a unique row. Where multiple experiments were combined, only the intersection of targets was used. The profiles were generated using <code>InSituType::Estep()</code>, which removes background readout (negative probes) when calculating the net expression profile for each cell type. For details, refer to the <a href="https://github.com/Nanostring-Biostats/InSituType">InSituType manual</a>.</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/cosmx-cell-profiles/figures/cell_profiles.png" class="img-fluid figure-img" width="600"></p>
<figcaption>Snippet of a cell profiles matrix.</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="cell-type-annotations" class="level3">
<h3 class="anchored" data-anchor-id="cell-type-annotations">Cell Type Annotations</h3>
<p>To put cell types in context, we offer both cell type hierarchies and ontology terms.</p>
<p>R file defining a nested list object so users can group cell type categories. Human-readable ensures non-R users (e.g., Python) can parse and use.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Note that some inner nodes on the hierarchies are both lower-granularity categorizations as well as a final cell type included in the profiles themselves.</p>
</div>
</div>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/cosmx-cell-profiles/figures/cell_type_hierarchy.png" class="img-fluid figure-img" width="400"></p>
<figcaption>Snippet of a cell type hierarchy.</figcaption>
</figure>
</div>
</div>
</div>
<p><a href="https://obofoundry.org/ontology/cl.html">Cell Ontology</a> annotations are also provided for all nodes on the hierarchies. Where applicable, the identified match and/or parent (more general) matches are provided. For other cell types, where no node or parent node matches are found, we instead provide the closest term. Finally, the column <code>in_profiles</code> indicates whether the table row corresponds to a cell type present in the profiles (independent of whether it is an internal or terminal node within the hierarchies).</p>
</section>
<section id="basic-statistics" class="level3">
<h3 class="anchored" data-anchor-id="basic-statistics">Basic Statistics</h3>
<p>CSV files of basic statistics on the profiles: number of input cells of each type per profile, standard deviation for each target, etc.</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/cosmx-cell-profiles/figures/basic_stats.png" class="img-fluid figure-img" width="400"></p>
<figcaption>Snippet of basic statistics for a set of profiles.</figcaption>
</figure>
</div>
</div>
</div>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/cosmx-cell-profiles/figures/cell_counts.png" class="img-fluid figure-img" width="400"></p>
<figcaption>Snippet of input cell counts of each cell type for a set of profiles.</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="target-statistics" class="level3">
<h3 class="anchored" data-anchor-id="target-statistics">Target Statistics</h3>
<p>CSV files of average and standard deviation of targets in profiles so that users may remove targets as desired. Unlike the cell profiles, the average values by cell type and target here are simple means that do not use the negative probe values.</p>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/cosmx-cell-profiles/figures/cell_stdevs.png" class="img-fluid figure-img" width="600"></p>
<figcaption>Snippet of input cell standard deviations matrix of each cell type for a set of profiles.</figcaption>
</figure>
</div>
</div>
</div>
</section>
<section id="metadata" class="level3">
<h3 class="anchored" data-anchor-id="metadata">Metadata</h3>
<p>JSON file on experimental design and attribution, including collaborators (if applicable), species, tissue type/substructure, CosMx SMI instrument version, input panel, etc.</p>
<div class="callout callout-style-default callout-caution callout-titled" title="Important note">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important note
</div>
</div>
<div class="callout-body-container callout-body">
<p>If you use the cell profiles in your work, please include citations applicable for the relevant tissue(s).</p>
</div>
</div>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/cosmx-cell-profiles/figures/metadata.png" class="img-fluid figure-img" width="600"></p>
<figcaption>Snippet of input metadata for a set of cell profiles.</figcaption>
</figure>
</div>
</div>
</div>
</section>
</section>
<section id="usage" class="level2">
<h2 class="anchored" data-anchor-id="usage">Usage</h2>
<div class="callout callout-style-default callout-caution callout-titled" title="Important note">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Important note
</div>
</div>
<div class="callout-body-container callout-body">
<p>If you use the cell profiles in your work, please include citations applicable for the relevant tissue(s). See the Metadata file for more information.</p>
</div>
</div>
<p>These matrices can be downloaded directly and loaded into environments for analysis with Insitutype.</p>
<p>Caution:</p>
<ul>
<li>We do not recommend combining CosMx SMI-derived cell type profiles with scRNA-seq derived profiles in cell typing. For example, we advise against combining the CosMx SMI IO profiles with scRNA-seq profiles for the tissue type.</li>
<li>Note that some inner nodes on the hierarchies are both lower-granularity categorizations as well as a final cell type included in the profiles themselves.</li>
<li>If you choose to combine multiple CosMX SMI-derived profiles into a single hybrid reference, please see our <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/hybrid-reference-profiles/" target="_blank">Scratch Space post here</a> for guidance.</li>
</ul>
</section>
<section id="methodology" class="level2">
<h2 class="anchored" data-anchor-id="methodology">Methodology</h2>
<p>All profiles were derived from CosMx SMI experiments. Projects with high-confidence cell typing were identified and permission obtained from collaborators/customers where necessary. Cell type names were corrected for consistent style. Where necessary, poor-confidence typed cells as well as genes with high discordance between CosMx SMI-derived and scRNA-seq derived profiles were removed. In profiles built from multiple experiments, only the intersection of targets was used. <code>InSituType::Estep()</code> was run to generate mean expression profiles from the raw counts of cells x targets, negative probe counts, and given cell types.</p>
<p>Please note the profiles, while derived from CosMx SMI experiments, may not contain the exact suite of targets of current CosMx SMI panel products.</p>
</section>
<section id="contribution" class="level2">
<h2 class="anchored" data-anchor-id="contribution">Contribution</h2>
<p>If you would like to contribute to the <code>CosMx Cell Profiles</code> repository with data from your experiments, please contact us at support.spatial@bruker.com. Broadly speaking, the process involves a license agreement, finalized cell typing, and generation of the standardized file types of the repository as outlined above.</p>



</section>
</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-Danaher2022" class="csl-entry">
Danaher, Patrick, Edward Zhao, Zhi Yang, David Ross, Mark Gregory, Zach Reitz, Tae K. Kim, et al. 2022. <span>“Insitutype: Likelihood-Based Cell Typing for Single Cell Spatial Transcriptomics.”</span> <em>bioRxiv</em>. <a href="https://doi.org/10.1101/2022.10.19.512902">https://doi.org/10.1101/2022.10.19.512902</a>.
</div>
</div></section></div> ]]></description>
  <category>cell typing</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/cosmx-cell-profiles/</guid>
  <pubDate>Thu, 23 Jan 2025 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/cosmx-cell-profiles/figures/square-cells-pic.png" medium="image" type="image/png" height="124" width="144"/>
</item>
<item>
  <title>Cell typing: advanced strategies</title>
  <dc:creator>Patrick Danaher</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/cell-typing-strategies/cell-typing-strategies.html</link>
  <description><![CDATA[ 





<section id="background" class="level1">
<h1>Background</h1>
<p>Cell typing is always critical and occasionally difficult. Here we’ll discuss what to do when straightforward approaches fail.</p>
<p>Before exploring the options here, you should:</p>
<ol type="1">
<li>Attempt <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/cell-typing-basics/" target="_blank">the standard approaches</a> - InSituType, Leiden clustering and label transfer.</li>
<li>If you’re using InSituType, attempt the workflows described in the <a href="https://github.com/Nanostring-Biostats/InSituType/blob/main/FAQs.md" target="_blank">InSituType FAQS</a>. This last document provides detailed guidance on using InSituType’s many options, and its contents should be enough to guide you through most cell typing exercises.</li>
<li>Confirm your cell segmentation was successful. Use AtoMx or your favorite viewer to confirm that segmentation errors aren’t widespread.</li>
</ol>
<p>In this document, we’ll address four common difficulties:</p>
<ol type="1">
<li>Fine subtyping, especially for immune cells</li>
<li>Cell typing based on marker genes</li>
<li>Studies with batch effects</li>
<li>Failure to find anchor cells / difficulties mapping reference profiles</li>
<li>Reference cell types claiming the wrong cells</li>
</ol>
</section>
<section id="fine-subtyping-take-a-hierarchical-approach-and-rely-on-gene-selection" class="level1">
<h1>Fine subtyping: take a hierarchical approach and rely on gene selection</h1>
<p>Broad cell typing, e.g.&nbsp;discerning cancer cells vs.&nbsp;fibroblasts vs.&nbsp;immune cells, does best using a large number of genes - the whole panel for 1k data, and at least half the 6k panel. But when we turn to fine subtyping, e.g.&nbsp;discerning CD4 T-cells vs.&nbsp;Tregs, a much smaller gene set is relevant. If we use a complete high-plex panel for this problem, we’ll rely on potentially thousands of unhelpful genes: genes that are mainly in the background for our cell types of interest, genes for which cell segmentation errors have introduced high levels of contaminating signal into our cell types of interest, and genes with minimal variability among our cell types of interest. These genes make fine cell typing harder by introducing noise, or, in the case of segmentation errors, bias. You may find your subclusters to be driven by sample ID or by spatial context.</p>
<p>The solution is simple: after establishing your broad cell types, perform fine cell typing among related cell types using a useful subset of genes. Hierarchical approaches like this are common in the single cell world. Defining the “useful subset of genes” is straightforward: we want genes that differ meaningfully between our closely-related cell types, and we want to avoid genes at risk of contamination from segmentation errors. We advise using a generous gene list: including at least 1/3-1/2 of the genes in the 1k and 6k panels seems to work well.</p>
<p>The below code shows how this approach would work for supervised cell typing. Here, we’ll perform just one filter, removing genes at risk of bias from cell segmentation errors:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">#### assumed data ---------------------------------------</span></span>
<span id="cb1-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># xy: 2-column matrix of cells' xy positions</span></span>
<span id="cb1-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># refprofiles: matrix of expected expression in genes * cells types, as </span></span>
<span id="cb1-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   is expected by InSituType.</span></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># counts: counts matrix, cells * genes.</span></span>
<span id="cb1-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># clust: vector of broad cell type assignments.</span></span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">#### source functions for gene selection --------------------------------------- </span></span>
<span id="cb1-9"></span>
<span id="cb1-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">source</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">url</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/tree/Main/_code/cell-typing-advanced-strategies/getSubtypingGenes.R"</span>))</span>
<span id="cb1-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (if the above doesn't work, just download the file at that url then source it locally)</span></span>
<span id="cb1-12"></span>
<span id="cb1-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">#### supervised subtyping workflow ---------------------------------------</span></span>
<span id="cb1-14"></span>
<span id="cb1-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## get genes safe from contamination:</span></span>
<span id="cb1-16">safegenes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">findSafeGenes</span>(</span>
<span id="cb1-17">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">counts =</span> counts,                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># note we're entering info for all cells           </span></span>
<span id="cb1-18">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xy =</span> xy,                            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># again entering info for all cells</span></span>
<span id="cb1-19">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ismycelltype =</span> (clust <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T-cell"</span>), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># logical indicating the cells to subtype</span></span>
<span id="cb1-20">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tissue =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># specify if tissues have xy overlap</span></span>
<span id="cb1-21">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">self_vs_neighbor_threshold =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.75</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># min ratio of expression in the cell type vs. in its neighbors</span></span>
<span id="cb1-22">  )<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>safegenes            </span>
<span id="cb1-23"></span>
<span id="cb1-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print0</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(safegenes), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" genes kept from a panel of "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(counts), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">". Try to use at least 1/3 the panel."</span>))</span>
<span id="cb1-25"></span>
<span id="cb1-26"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## supervised subtyping of T-cells:</span></span>
<span id="cb1-27">res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">insitutype</span>(</span>
<span id="cb1-28">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> counts[sub, ],</span>
<span id="cb1-29">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">reference_profiles =</span> refprofiles[Tcellgenes, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD4"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD8"</span>, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Treg"</span>)],</span>
<span id="cb1-30">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_clusts =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb1-31"></span>
<span id="cb1-32"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## update the cluster assignments:</span></span>
<span id="cb1-33">clust[sub] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> res<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>clust</span></code></pre></div>
</div>
<p>And for unsupervised clustering, we’ll filter on both risk of segmentation errors and for informativeness in our data. For “informativeness”, we’ll search for highly variable genes, as described by Stuart et al.&nbsp;(2019), and implemented in <code>Seurat::FindVariableFeatures</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">#### assumed data ---------------------------------------</span></span>
<span id="cb2-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># xy: 2-column matrix of cells' xy positions</span></span>
<span id="cb2-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># refprofiles: matrix of expected expression in genes * cells types, as </span></span>
<span id="cb2-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   is expected by InSituType.</span></span>
<span id="cb2-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># counts: counts matrix, cells * genes.</span></span>
<span id="cb2-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># clust: vector of broad cell type assignments.</span></span>
<span id="cb2-7"></span>
<span id="cb2-8"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">#### source functions for gene selection --------------------------------------- </span></span>
<span id="cb2-9"></span>
<span id="cb2-10"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">source</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">url</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/tree/Main/_code/cell-typing-advanced-strategies/getSubtypingGenes.R"</span>))</span>
<span id="cb2-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># (if the above doesn't work, just download the file at that url then source it locally)</span></span>
<span id="cb2-12"></span>
<span id="cb2-13"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">#### unsupervised subclustering workflow ---------------------------------------</span></span>
<span id="cb2-14"></span>
<span id="cb2-15"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## get genes safe from contamination:</span></span>
<span id="cb2-16">safegenes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">findSafeGenes</span>(</span>
<span id="cb2-17">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">counts =</span> counts,                    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># note we're entering info for all cells           </span></span>
<span id="cb2-18">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xy =</span> xy,                            <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># again entering info for all cells</span></span>
<span id="cb2-19">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ismycelltype =</span> (clust <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T-cell"</span>), <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># logical indicating the cells to subtype</span></span>
<span id="cb2-20">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">tissue =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,                      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># specify if tissues have xy overlap</span></span>
<span id="cb2-21">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">self_vs_neighbor_threshold =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.75</span>   <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># min ratio of expression in the cell type vs. in its neighbors</span></span>
<span id="cb2-22">  )<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>safegenes           </span>
<span id="cb2-23"></span>
<span id="cb2-24"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## Get highly variable genes in your subset:</span></span>
<span id="cb2-25">sub <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> clust <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T-cell"</span>                                 </span>
<span id="cb2-26">subsetHVGs <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">getSubclusteringGenes</span>(</span>
<span id="cb2-27">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">mat =</span> counts[sub, ],     <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># raw counts from only the cell type of interest</span></span>
<span id="cb2-28">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">varratiothresh =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,      <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># how much var beyond what mean expression predicts</span></span>
<span id="cb2-29">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">expressionthresh =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.2</span>)  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># min expression level</span></span>
<span id="cb2-30"></span>
<span id="cb2-31"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## keep genes meeting both the above criteria:</span></span>
<span id="cb2-32">usegenes <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">intersect</span>(subsetHVGs, safegenes)</span>
<span id="cb2-33"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">message</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">print0</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(usegenes), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">" genes kept from a panel of "</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ncol</span>(counts), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">". Try to use at least 1/3 the panel."</span>))</span>
<span id="cb2-34"></span>
<span id="cb2-35"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## supervised subtyping of T-cells:</span></span>
<span id="cb2-36">res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">insitutype</span>(</span>
<span id="cb2-37">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> counts[sub, usegenes],</span>
<span id="cb2-38">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">n_clusts =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>)</span>
<span id="cb2-39"></span>
<span id="cb2-40"><span class="do" style="color: #5E5E5E;
background-color: null;
font-style: italic;">## update the cluster assignments:</span></span>
<span id="cb2-41">clust[sub] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste0</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T-cell cluster "</span>, res<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>clust)</span></code></pre></div>
</div>
</section>
<section id="cell-typing-based-on-marker-genes" class="level1">
<h1>Cell typing based on marker genes</h1>
<p>We generally advise against <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/on-cell-typing-with-marker-genes/" target="_blank">relying on raw marker gene expression</a> for cell typing. However, a marker-centered view can occasionally be appropriate. For example, you might insist on only restricting your analysis to Treg’s to cells that are demonstrably FOXP3+. If you do want to base your cell typing on a marker gene, we recommend using smoothing/imputation to get cleaner marker gene expression values. The idea is to obtain more accurate expression values for a marker gene by borrowing information from other genes in its profile. This intuition is simple: if you see FOXP3 expression in all the cells with highly similar expression profiles to a cell in question, then the cell in question is very probably FOXP3+ itself, whether or not you observed any FOXP3 counts in it. Or, more formally, this approach negotiates a favorable variance-bias tradeoff: in this example, we bias cells’ FOXP3 expression values to resemble their nearest neighbors in expression space, while greatly reducing sampling variability compared to that of a single gene’s count value.</p>
<p>We demonstrate a smoothing/imputation approach to marker genes <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/marker-gene-smoothing/" target="_blank">here</a>. You can also use SAVER (Huang et al, 2018) or scImpute (Li &amp; Li, 2018) or any of the many other published single cell imputation methods. Do note that performing deeper analyses of imputed expression values, e.g.&nbsp;differential expression testing, is hazardous (Andrews &amp; Hemberg, 2019), though imputed counts can be useful for plotting.</p>
</section>
<section id="batch-effects-well-considered-workflows" class="level1">
<h1>Batch effects: well-considered workflows</h1>
<p>InSituType is quite, but not completely, robust to batch effects. Leiden clustering and other methods relying on principal components of the data can be highly sensitive to them. If you see evidence of batch effects in your data, for example strong batch dependence in your cell typing results or your UMAP projection, consider the below strategies.</p>
<ul>
<li>Unsupervised clustering: InSituType will generally work even in the presence of batch effects. To run Leiden clustering, just begin by using any standard batch-correction method, e.g.&nbsp;Harmony (Korsunsky et al, 2019). <a href="https://satijalab.org/seurat/archive/v3.0/integration.html" target="_blank">Seurat’s label transfer functions</a> offer another approach. Batch corrected data isn’t well-suited InSituType, which ingests raw data.</li>
<li>Supervised cell typing with InSituType: run InSituType separately on each tissue/batch, using the rescale=TRUE option. This will perform a batch adjustment from the reference to each new tissue. We used this approach successfully in a study of lupus nephritis (Danaher et al., 2024). You can see the code we used <a href="https://github.com/Nanostring-Biostats/childhood-onset-lupus-nephritis-analyses/blob/main/3.%20cell%20typing%20by%20batch.R" target="_blank">here</a>.</li>
<li>Semi-supervised cell typing with InSituType: initially analyze a single batch of data. Once you’re satisfied that you’ve captured all the unknown and reference cell types in that batch, use it to derive a new reference matrix (use <code>InSituType::getRNAprofiles</code>). Then apply the above supervised cell typing strategy using this reference matrix.</li>
</ul>
</section>
<section id="failure-to-find-anchor-cells" class="level1">
<h1>Failure to find anchor cells</h1>
<p>InSituType has the option of using anchor cells to calibrate reference profiles for CosMx data. This calibration is generally helpful for supervised cell typing and usually essential for semi-supervised cell typing, at least if the reference came from scRNA-seq data. (For details on this calibration, see the “Updating reference profiles” section of the <a href="https://github.com/Nanostring-Biostats/InSituType/blob/main/FAQs.md" target="_blank">InSituType FAQs</a>.)</p>
<p>Sometimes, InSituType will fail to discover enough “anchor cells” to perform this calibration. In this case, there are several simple next steps.</p>
<ul>
<li>Lower the thresholds for anchor selection (<code>min_anchor_cosine</code> and <code>min_anchor_llr</code>). This is often needed in high-plex studies - the defaults were optimized for 1000-plex data.</li>
<li>If you only find anchors for a few cell types: use rescale = TRUE, refit = FALSE. This performs a softer calibration: it rescales each row/gene of the reference matrix, but doesn’t fully refit each profile. This operation can be powered using only a few cell types.</li>
<li>If you have a whole single cell reference dataset, not just profiles, then try a label transfer algorithm, e.g.&nbsp;Seurat’s or MaxFuse (Chen et al 2023). If you do cell type with label transfer, then using InSituType::spatialUpdate can further improve these initial results.</li>
</ul>
</section>
<section id="reference-cell-types-claiming-the-wrong-cells" class="level1">
<h1>Reference cell types claiming the wrong cells</h1>
<p>InSituType will occasionally assign a cell type to the wrong reference profile, e.g.&nbsp;we’ve seen some cancer cells get assigned to the “NK cells” profiles. Fortunately, this kind of event is easy to detect with even cursory QC of your cell type results, and easy to fix: just use <code>InSituType::refineClusters</code>. Correcting this kind of error should be thought of as a part of routine human-guided cell typing, an operation to perform alongside all the other renaming, merging, and subclustering operations performed with <code>refineClusters</code>.</p>
</section>
<section id="references" class="level1">
<h1>References</h1>
<ul>
<li>Stuart T, Butler A, Hoffman P, Hafemeister C, Papalexi E, Mauck WM, Hao Y, Stoeckius M, Smibert P, Satija R. Comprehensive integration of single-cell data. cell. 2019 Jun 13;177(7):1888-902.</li>
<li>Danaher P, Hasle N, Nguyen ED, Roberts JE, Rosenwasser N, Rickert C, Hsieh EW, Hayward K, Okamura DM, Alpers CE, Reed RC. Childhood-onset lupus nephritis is characterized by complex interactions between kidney stroma and infiltrating immune cells. Science Translational Medicine. 2024 Nov 27;16(775):eadl1666.</li>
<li>Korsunsky I, Millard N, Fan J, Slowikowski K, Zhang F, Wei K, Baglaenko Y, Brenner M, Loh PR, Raychaudhuri S. Fast, sensitive and accurate integration of single-cell data with Harmony. Nature methods. 2019 Dec;16(12):1289-96.</li>
<li>Huang M, Wang J, Torre E, Dueck H, Shaffer S, Bonasio R, Murray JI, Raj A, Li M, Zhang NR. SAVER: gene expression recovery for single-cell RNA sequencing. Nature methods. 2018 Jul;15(7):539-42.</li>
<li>Li WV, Li JJ. An accurate and robust imputation method scImpute for single-cell RNA-seq data. Nature communications. 2018 Mar 8;9(1):997.</li>
<li>Andrews TS, Hemberg M. False signals induced by single-cell imputation. F1000Research. 2019 Mar 5;7:1740.</li>
<li>Chen S, Zhu B, Huang S, Hickey JW, Lin KZ, Snyder M, Greenleaf WJ, Nolan GP, Zhang NR, Ma Z. Integration of spatial and single-cell data across modalities with weakly linked features. Nature Biotechnology. 2024 Jul;42(7):1096-106.</li>
</ul>


</section>

 ]]></description>
  <category>cell typing</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/cell-typing-strategies/cell-typing-strategies.html</guid>
  <pubDate>Wed, 18 Dec 2024 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/cell-typing-strategies/figures/celltyping-tile.png" medium="image" type="image/png" height="130" width="144"/>
</item>
<item>
  <title>Using a tree-based approach to cell type CosMx® datasets</title>
  <dc:creator>Claire Williams</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/tree-cell-typing/</link>
  <description><![CDATA[ 





<section id="introduction" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introduction</h1>
<p>We developed the <a href="https://www.biorxiv.org/content/10.1101/2022.10.19.512902v1.abstract" target="_blank"><code>InSituType</code></a> <span class="citation" data-cites="Danaher2022">(Danaher et al. 2022)</span> algorithm to perform cell typing on spatial transcriptomics data, based on a likelihood model that weighs the evidence from every transcript, and this has been shown to work well for many datasets. However, when working with higher-plex datasets or attempting to perform fine-grained cell typing, we have found that a nested approach can generate more satisfactory results than the original implementation in some data sets. Here we provide a small package, <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/tree/Main/_code/InSituTree" target="_blank"><code>InSituTree</code></a>, that extends <a href="https://github.com/Nanostring-Biostats/InSituType/" target="_blank"><code>InSituType</code></a> and provides a specialized application for its use. For more ideas and suggestions on cell typing, please see <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/#category=cell%20typing">other cell typing posts on the Scratch Space blog</a> and <a href="https://github.com/Nanostring-Biostats/InSituType/blob/main/FAQs.md" target="_blank">the FAQs provided with the InSituType package</a>.</p>
<p>Like other items in our <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/about.html" target="_blank">CosMx Analysis Scratch Space</a>, the usual caveats and <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/license.html" target="_blank">license</a> apply.</p>
<ul>
<li>Section&nbsp;2 Overview of <code>InSituTree</code> approach</li>
<li>Section&nbsp;3 Example usage of <code>InSituTree</code></li>
<li>Section&nbsp;4 Additional recommendations</li>
<li>Section&nbsp;5 Conclusions</li>
</ul>
</section>
<section id="sec-package-overview" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> InSituTree Overview: How does it work?</h1>
<p>This package is an extension for the <code>InSituType</code> package and takes a nested approach to perform hierarchical supervised cell typing. Rather than immediately trying to assign cells to all subtypes available, it first starts by classifying cells into broad categories and then assigns cells to finer subtypes.</p>
<p>There are two core concepts that underlie this tree approach and differentiate it from the standard supervised <code>InSituType</code>:</p>
<ol type="1">
<li><strong>Hierarchical annotation</strong> Here, we break up the cell typing into a series of annotation decisions, starting at coarse cell type categories and proceeding down to fine categories
<ul>
<li>Example: Immune -&gt; Lymphoid -&gt; T-cell -&gt; T4 -&gt; Treg</li>
</ul></li>
<li><strong>Automatic feature selection</strong> The genes used for each decision point are optimized for maximum contrast given the cell types under consideration.</li>
</ol>
<p>Aligned with these two core concepts, there are two additional types of input that need to be provided to the <code>InSituTree</code> function call beyond what is required for supervised <code>InSituType</code>:</p>
<ul>
<li><code>cth</code>: <strong>c</strong>ell <strong>t</strong>ype <strong>h</strong>ierarchy, a nested list object that describes the relationship between cell types</li>
<li><code>quantile_absolute_expression_difference_param</code> and <code>quantile_percent_expression_difference_param</code>: feature selection parameters based on reference profile expression of each gene at absolute level and percentile across the entire dataset.</li>
</ul>
</section>
<section id="sec-example-implementation" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> <code>InSituTree</code> Example: Running the package</h1>
<p>You can find the <code>InSituTree</code> package <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/tree/Main/_code/InSituTree" target="_blank">here</a>. See the corresponding <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/tree/Main/_code/InSituTree/vignettes/InSituTree_basicVignette.html" target="_blank">vignette</a> inside the package for more details.</p>
<p>For this example we work with the immune-focused cell type profiles as well as the CosMx<sup>®</sup> spatial molecular imager (SMI) RNA non-small cell lung cancer dataset included in the <code>InSituType</code> package.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load libraries</span></span>
<span id="cb1-2"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(InSituType)</span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(InSituTree)</span>
<span id="cb1-4"></span>
<span id="cb1-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Read in io profiles</span></span>
<span id="cb1-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">data</span>(ioprofiles)</span>
<span id="cb1-7"></span>
<span id="cb1-8"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(ioprofiles)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>                 B-cell endothelial fibroblast macrophage mast          mDC
FAM138A    2.096034e+01    0.000000   0.000000  0.0000000    0 1.390347e+01
OR4F5      4.585635e-04    0.000000   0.000000  0.0000000    0 4.959941e-04
RNU6-1100P 2.131342e-02    0.000000   0.000000  0.0000000    0 3.364625e-02
AC114498.1 4.585635e-04    0.000000   0.000000  0.0000000    0 4.959941e-04
RNU6-1199P 4.145011e-03    0.000000   0.000000  0.0000000    0 4.959941e-04
FAM87B     2.141077e+00    3.212228   2.771648  0.9166156    0 5.171742e+00
               monocyte   neutrophil           NK          pDC  plasmablast
FAM138A    1.525272e+01  47.51214042 13.700490052 14.709188917 11.922652363
OR4F5      5.048288e-04   0.00107558  0.000374971  0.000468242  0.001279865
RNU6-1100P 2.395197e+01 333.72730875  0.000374971  0.028842730  0.432247095
AC114498.1 5.048288e-04   0.00107558  0.000374971  0.000468242  0.001279865
RNU6-1199P 5.048288e-04   0.00107558  0.000374971  0.007623073  0.001279865
FAM87B     2.316419e+00   2.68456642  2.033347728  4.161899008  1.184949893
           T CD4 memory  T CD4 naive T CD8 memory  T CD8 naive         Treg
FAM138A    1.494321e+01 1.122716e+01 5.3871876931 0.9259157510 1.354705e+01
OR4F5      4.071673e-04 4.089748e-04 0.0004038248 0.0004066689 3.847774e-04
RNU6-1100P 4.514122e-02 3.990783e-03 0.0203505401 0.0031968972 1.260998e-01
AC114498.1 6.060066e-04 4.089748e-04 0.0019765979 0.0004066689 3.847774e-04
RNU6-1199P 1.520570e-03 4.089748e-04 0.0010411853 0.0004066689 1.938572e-02
FAM87B     3.127699e+00 4.132383e+00 1.3184299727 3.6087853343 4.304584e+00</code></pre>
</div>
</div>
<p>We start by setting up a nested list of cell types, visualized with the helper function <code>printTree()</code>. The nested list should have names for major cell types (for example, “B-lymphoid” or “structural” below), and should include all cell types in the reference profile as endpoints (for example, “B-cell” or “endothelial” below). The endpoint cell types can be set as vectors instead of a list (see “NK” below which is set as an unnamed character vector of length 1), though setting them as lists will not cause errors.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Establish a nested list of cell types</span></span>
<span id="cb3-2">celltype_hierarchy_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb3-3">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"structural"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb3-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"endothelial"</span>, </span>
<span id="cb3-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fibroblast"</span>),</span>
<span id="cb3-6">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myeloid"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb3-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"macrophage"</span>, </span>
<span id="cb3-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mast"</span>, </span>
<span id="cb3-9">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mDC"</span>, </span>
<span id="cb3-10">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"monocyte"</span>, </span>
<span id="cb3-11">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"neutrophil"</span>),</span>
<span id="cb3-12">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lymphoid"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb3-13">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B-lymphoid"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb3-14">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B-cell"</span>, </span>
<span id="cb3-15">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pDC"</span>,</span>
<span id="cb3-16">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plasmablast"</span>),</span>
<span id="cb3-17">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T-lymphoid"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb3-18">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T4"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb3-19">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T CD4 memory"</span>, </span>
<span id="cb3-20">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T CD4 naive"</span>, </span>
<span id="cb3-21">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Treg"</span>),</span>
<span id="cb3-22">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T8"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb3-23">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T CD8 memory"</span>, </span>
<span id="cb3-24">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T CD8 naive"</span>),</span>
<span id="cb3-25">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NK"</span>)</span>
<span id="cb3-26">    )</span>
<span id="cb3-27">)</span>
<span id="cb3-28"></span>
<span id="cb3-29"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">printTree</span>(celltype_hierarchy_list, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prefix =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"|-"</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>|- structural 
  |- endothelial 
  |- fibroblast 
|- myeloid 
  |- macrophage 
  |- mast 
  |- mDC 
  |- monocyte 
  |- neutrophil 
|- lymphoid 
  |- B-lymphoid 
    |- B-cell 
    |- pDC 
    |- plasmablast 
  |- T-lymphoid 
    |- T4 
      |- T CD4 memory 
      |- T CD4 naive 
      |- Treg 
    |- T8 
      |- T CD8 memory 
      |- T CD8 naive 
    |- NK </code></pre>
</div>
</div>
<p>Importantly, any middle nodes that have only a single child will act as end points for cell type assignments. See the example below:</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Example of a tree with a single child node</span></span>
<span id="cb5-2">cth_single_child_node <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb5-3">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"structural"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb5-4">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"endothelial"</span>, </span>
<span id="cb5-5">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fibroblast"</span>),</span>
<span id="cb5-6">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"myeloid"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb5-7">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"macrophage"</span>, </span>
<span id="cb5-8">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"monocyte"</span>),</span>
<span id="cb5-9">  <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"lymphoid"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>( <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This is a single child node: all cells annotated as </span></span>
<span id="cb5-10">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># lymphoid would also be 'B and T cells' and so annotations will not</span></span>
<span id="cb5-11">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># continue beyond this point.</span></span>
<span id="cb5-12">    <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B and T cells"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb5-13">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B-lymphoid"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb5-14">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B-cell"</span>, </span>
<span id="cb5-15">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pDC"</span>,</span>
<span id="cb5-16">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plasmablast"</span>),</span>
<span id="cb5-17">      <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T-lymphoid"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>(</span>
<span id="cb5-18">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T4"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb5-19">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T CD4 memory"</span>, </span>
<span id="cb5-20">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T CD4 naive"</span>, </span>
<span id="cb5-21">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Treg"</span>),</span>
<span id="cb5-22">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T8"</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">=</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(</span>
<span id="cb5-23">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T CD8 memory"</span>, </span>
<span id="cb5-24">          <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"T CD8 naive"</span>),</span>
<span id="cb5-25">        <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NK"</span>)</span>
<span id="cb5-26">    )</span>
<span id="cb5-27">  )</span>
<span id="cb5-28">)</span>
<span id="cb5-29"></span>
<span id="cb5-30"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">printTree</span>(cth_single_child_node, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">prefix =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"|-"</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>|- structural 
  |- endothelial 
  |- fibroblast 
|- myeloid 
  |- macrophage 
  |- monocyte 
|- lymphoid 
  |- B and T cells 
    |- B-lymphoid 
      |- B-cell 
      |- pDC 
      |- plasmablast 
    |- T-lymphoid 
      |- T4 
        |- T CD4 memory 
        |- T CD4 naive 
        |- Treg 
      |- T8 
        |- T CD8 memory 
        |- T CD8 naive 
      |- NK </code></pre>
</div>
</div>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>If you’re working from a CosMx-derived cell profile from our <a href="https://github.com/Nanostring-Biostats/CosMx-Cell-Profiles/tree/main" target="_blank">CosMx Cell Profile library</a>, formatted nested cell type lists are available as <code>*celltypeslist.R</code> files. Alternatively, if you’d like to create your own reference profile, see <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/hybrid-reference-profiles">this</a> Scratch Space Post for additional guidance on generating reference profiles.</p>
</div>
</div>
<p>To make your own cell type hierarchy, we recommend examining the similarity between end-point cell types within your reference profile as a starting point. After that, further adjust the hierarchy based on subject matter expertise. The cell type hierarchy should reflect similarity in gene expression, which may or may not correspond to cell type lineages. For a convenient way to visualize the similarity of cell types in your reference profile, use the function <code>plotProfileSimilarity()</code>.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plotProfileSimilarity</span>(ioprofiles)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output-display">
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/tree-cell-typing/figures/io_profile_similarity_heatmap.png" class="img-fluid figure-img" width="1200"></p>
<figcaption>Similarity matrix of reference profile cell types can be used to help inform cell type hierarchy.</figcaption>
</figure>
</div>
</div>
</div>
<p>As two examples from this heatmap, we can see that T cell subtypes as well as NK cells have high similarity and so should be grouped together. Additionally, endothelial and fibroblast cell types are highly similar, supporting our grouping of them into a ‘structural’ major cell type.</p>
<p>Once we have this cell type tree, we can use <code>InSituTree</code> to run supervised cell typing with a nested approach.</p>
<div class="cell">
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Load basic data consisting of:</span></span>
<span id="cb8-2"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   - counts: cell x gene count matrix</span></span>
<span id="cb8-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#   - negmeans: vector of mean negative probe counts per cell</span></span>
<span id="cb8-4"></span>
<span id="cb8-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">load</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"mini_nsclc"</span>)</span>
<span id="cb8-6"></span>
<span id="cb8-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run InSituTree with basic options</span></span>
<span id="cb8-8">res <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">runInSituTree</span>(</span>
<span id="cb8-9">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> mini_nsclc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>counts,</span>
<span id="cb8-10">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">neg =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">rowMeans</span>(mini_nsclc<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>neg),</span>
<span id="cb8-11">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">full_profiles =</span> ioprofiles,</span>
<span id="cb8-12">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cth =</span> celltype_hierarchy_list,</span>
<span id="cb8-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cohort =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb8-14">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">excluded_genes =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>,</span>
<span id="cb8-15">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quantile_absolute_expression_difference_param =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Include genes in the top 0.5 fraction in absolute expression differences</span></span>
<span id="cb8-16">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">quantile_percent_expression_difference_param =</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.5</span>, <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Include genes in the top 0.5 fraction in percentage expression differences</span></span>
<span id="cb8-17">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">return_summary_annotation =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span></span>
<span id="cb8-18">)</span>
<span id="cb8-19"></span>
<span id="cb8-20"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Access the final summarized cell typing results</span></span>
<span id="cb8-21"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(res<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>summaryAnnotation, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">10</span>)</span></code></pre></div>
</div>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>          annotLevel_1 probs_annotLevel_1 annotLevel_2 probs_annotLevel_2
c_3_18_2       myeloid          1.0000000   macrophage          0.7109515
c_3_18_3       myeloid          1.0000000   macrophage          0.9570978
c_3_18_4       myeloid          1.0000000   macrophage          1.0000000
c_3_18_5       myeloid          0.9999974   macrophage          0.8044057
c_3_18_6    structural          1.0000000  endothelial          1.0000000
c_3_18_7       myeloid          0.9999948   macrophage          0.9950331
c_3_18_10   structural          1.0000000  endothelial          1.0000000
c_3_18_11     lymphoid          0.9999996   B-lymphoid          1.0000000
c_3_18_12   structural          1.0000000  endothelial          0.9981063
c_3_18_19     lymphoid          1.0000000   B-lymphoid          1.0000000
          annotLevel_3 probs_annotLevel_3 annotLevel_4 probs_annotLevel_4
c_3_18_2    macrophage          0.7109515   macrophage          0.7109515
c_3_18_3    macrophage          0.9570978   macrophage          0.9570978
c_3_18_4    macrophage          1.0000000   macrophage          1.0000000
c_3_18_5    macrophage          0.8044057   macrophage          0.8044057
c_3_18_6   endothelial          1.0000000  endothelial          1.0000000
c_3_18_7    macrophage          0.9950331   macrophage          0.9950331
c_3_18_10  endothelial          1.0000000  endothelial          1.0000000
c_3_18_11       B-cell          1.0000000       B-cell          1.0000000
c_3_18_12  endothelial          0.9981063  endothelial          0.9981063
c_3_18_19  plasmablast          1.0000000  plasmablast          1.0000000</code></pre>
</div>
</div>
<p>This summary annotation results data frame contains cell typing results at each level of annotation in separate columns, with both the cell type annotation and the posterior probability of that assignment <em>among the cell types considered at a given branch</em>. The final, most resolved, cell typing results will be found in the rightmost two columns. Cells which have no counts among the selected genes for the first level of annotations will appear with <code>NA</code> values for all columns. Otherwise, final annotations will be cascaded right in the summary table.</p>
</section>
<section id="sec-additional-recommendations" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Additional recommendations</h1>
<p>The structure of the cell type hierarchy list is a key determinant of how well this approach works. Major cell types that are unnecessarily broad may lead to poor cell typing if the average gene expression is too distinct from the expression of individual cells. The cell type lists available at our <a href="https://github.com/Nanostring-Biostats/CosMx-Cell-Profiles/tree/main" target="_blank">CosMx Cell Profile library</a> often contain an initial grouping of cell types into ‘Tissue’ or ‘Immune’; we would recommend removing that large group and providing the next level down as top annotations. As an example, we here show the original <a href="https://github.com/Nanostring-Biostats/CosMx-Cell-Profiles/blob/main/Human/Liver/Liver.celltypeslist.R" target="_blank">liver cell type hierarchy</a> on the left and on the right a refined version where the top broad groupings have been removed. For liver samples, we recommend using the refined version on the right.</p>
<div class="columns">
<div class="column">
<section id="original-hierachy" class="level2" data-number="4.1">
<h2 data-number="4.1" class="anchored" data-anchor-id="original-hierachy"><span class="header-section-number">4.1</span> Original hierachy</h2>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>|- Tissue 
  |- Cholangiocyte 
  |- Stellate cell 
  |- Hepatocyte 
    |- Hepatocyte A 
    |- Hepatocyte B 
    |- Hepatocyte C 
    |- Hepatocyte D 
    |- Hepatocyte E 
  |- Endothelial cells 
    |- Portal endothelial cells 
    |- Periportal LSEC 
    |- Central venous LSEC 
|- Immune 
  |- Lymphoid 
    |- B cell 
    |- NK like cells 
    |- T cell 
      |- T cell CD3 alpha beta 
      |- T cell gamma delta 
  |- Macrophage 
    |- Non-inflammatory macrophage 
    |- Inflammatory macrophage 
|- Other 
  |- Erythroid </code></pre>
</div>
</div>
</section>
</div><div class="column">
<section id="refined-hierarchy" class="level2" data-number="4.2">
<h2 data-number="4.2" class="anchored" data-anchor-id="refined-hierarchy"><span class="header-section-number">4.2</span> Refined hierarchy</h2>
<div class="cell">
<div class="cell-output cell-output-stdout">
<pre><code>|- Cholangiocyte 
|- Stellate cell 
|- Hepatocyte 
  |- Hepatocyte A 
  |- Hepatocyte B 
  |- Hepatocyte C 
  |- Hepatocyte D 
  |- Hepatocyte E 
|- Endothelial cells 
  |- Portal endothelial cells 
  |- Periportal LSEC 
  |- Central venous LSEC 
|- Lymphoid 
  |- B cell 
  |- NK like cells 
  |- T cell 
    |- T cell CD3 alpha beta 
    |- T cell gamma delta 
|- Macrophage 
  |- Non-inflammatory macrophage 
  |- Inflammatory macrophage 
|- Erythroid </code></pre>
</div>
</div>
</section>
</div>
</div>
<p><code>InSituTree</code> runs quickly, so in cases of uncertainty we would recommend running the algorithm with multiple cell type hierarchies and choosing the one that gives the best cell typing. Evaluate the results as cell typing is typically evaluated, as described <a href="https://github.com/Nanostring-Biostats/InSituType/blob/main/FAQs.md#interpreting-clustering-results" target="_blank">here</a>: spatial distribution of cell types, top markers for each cell type, and clustering of similar cell types in UMAP space.</p>
<p><code>InSituTree</code> is designed to work for fully supervised cell typing only. In datasets where you have novel cell types not captured in your reference profile, one option is to first run semi-supervised <code>InSituType</code> on your whole dataset to separate out novel cell types from the rest. Following this, you can create a reference profile from that semi-supervised cell typing result from the CosMx data and redo cell typing via <code>InSituTree</code> using the new reference profiles and a <code>cell_type_hierachy</code> list.</p>
<p>Another helpful use case for <code>InSituTree</code> is to do fine cell typing between closely related subtypes. For a dataset that has been through one iteration of cell typing, one could select out only cells of interest from the full dataset cell typing annotations, for example only the immune cells, and run targeted subclustering with <code>InSituTree</code> on those cells only.</p>
</section>
<section id="sec-conclusions" class="level1" data-number="5">
<h1 data-number="5"><span class="header-section-number">5</span> Conclusions</h1>
<p>The nested approach to supervised cell typing presented here adds another layer of control for cell typing, particularly useful when looking to identify fine cell subtypes. This approach is one of many, and users are encouraged to consider this tool in concert with other approaches including unsupervised clustering, <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/marker-gene-smoothing/">gene smoothing</a>, <a href="https://github.com/Nanostring-Biostats/InSituType/blob/main/FAQs.md">cell type refinement</a>, and label transfer approaches.</p>
</section>
<section id="acknowledgements" class="level1" data-number="6">
<h1 data-number="6"><span class="header-section-number">6</span> Acknowledgements</h1>
<p>The initial idea and code for this nested approach of <code>InSituType</code>-based cell typing were developed largely by <a href="https://github.com/mtgregory" target="_blank">Mark Gregory</a>.</p>



</section>

<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents" id="quarto-bibliography"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent" data-entry-spacing="0">
<div id="ref-Danaher2022" class="csl-entry">
Danaher, Patrick, Edward Zhao, Zhi Yang, David Ross, Mark Gregory, Zach Reitz, Tae K. Kim, et al. 2022. <span>“Insitutype: Likelihood-Based Cell Typing for Single Cell Spatial Transcriptomics.”</span> <em>bioRxiv</em>. <a href="https://doi.org/10.1101/2022.10.19.512902">https://doi.org/10.1101/2022.10.19.512902</a>.
</div>
</div></section></div> ]]></description>
  <category>cell typing</category>
  <category>algorithms</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/tree-cell-typing/</guid>
  <pubDate>Thu, 12 Dec 2024 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/tree-cell-typing/figures/Fig1-CellTypeTree.png" medium="image" type="image/png" height="144" width="144"/>
</item>
<item>
  <title>InSituDiff: perturbation analysis for spatial transcriptomics</title>
  <dc:creator>Patrick Danaher</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/insitudiff/</link>
  <description><![CDATA[ 





<section id="background" class="level1">
<h1>Background</h1>
<p>A typical study design will contrast several disease or treated samples with one or more controls. In these studies, it can be difficult to identify the (interesting) ways in which the disease samples are perturbed compared to the controls. To this end, we have created an R package, “InSituDiff”, containing a suite of tools for exploring how cellular neighborhoods are perturbed in disease compared to controls.</p>
<p>The heart of InSituDiff is the measurement of how “cellular neighborhoods” (a target cell and its nearest neighbors) contrast with their <em>most similar control cellular neighborhood</em>. This analysis produces a perturbation score for all cells * genes. With these perturbation scores in hand, numerous useful analyses become possible:</p>
<ol type="1">
<li>Spatial maps of gene perturbation scores are often more informative than maps of expression level.</li>
<li>We can identify highly perturbed genes, and we can quantify the spatial dependence of their perturbations.</li>
<li>By applying spatial clustering algorithms to the perturbation matrix, we can discover distinct impacts of disease across the span of tissues.</li>
<li>By clustering genes’ perturbation values, we discover sets of genes with spatially correlated perturbations.</li>
</ol>
<p>The above suite of analyses very quickly brings the major impacts of disease into focus. Conveniently, this analysis is agnostic to your cell typing results, making it a plausible tool for first-pass data exploration.</p>
</section>
<section id="resources" class="level1">
<h1>Resources</h1>
<p><a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/tree/Main/_code/InSituDiff" target="_blank">The InSituDiff R package</a></p>
<p>See <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/blob/Main/_code/InSituDiff/vignettes/InSituDiff-basic-vignette.html" target="_blank">the package vignette</a> for a demonstration of the workflow.</p>


</section>

 ]]></description>
  <category>exploratory analysis</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/insitudiff/</guid>
  <pubDate>Mon, 25 Nov 2024 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/insitudiff/figures/insitudiff-tile.png" medium="image" type="image/png" height="136" width="144"/>
</item>
<item>
  <title>Defining Regions of Interest in CosMx® SMI data using napari</title>
  <dc:creator>Evelyn Metzger</dc:creator>
  <link>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-rois/cosmx-rois.html</link>
  <description><![CDATA[ 





<section id="introducion" class="level1" data-number="1">
<h1 data-number="1"><span class="header-section-number">1</span> Introducion</h1>
<p>I am consistently impressed by the remarkable cellular resolution, sensitivity, and comprehensive spatial profiling capabilities that CosMx<sup>®</sup> SMI technology offers. Indeed, I often analyze datasets that consist of 10s of slides and millions of cells – numbers that are steadily growing with time.</p>
<p>At several points in my analysis workflow I need to subset the data. For example, I may want to examine a specific niche or ask what the molecular composition of each kidney glomerulus looks like. While some of these subsets can be achieved by computational means, there are some scenarios where I isolate specific regions or specific cells by directly selecting them on the tissue. I refer to this as selecting Regions of Interest (ROIs).</p>
<p>In this post, I will show you how to define ROIs using the <code>napari-cosmx</code> plugin. In a future post, we’ll show a similar approach using R.</p>
<section id="preliminaries" class="level2" data-number="1.1">
<h2 data-number="1.1" class="anchored" data-anchor-id="preliminaries"><span class="header-section-number">1.1</span> Preliminaries</h2>
<p>This is the fourth installment of our <a href="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/#category=napari"><code>napari series</code></a>. Readers should be familiar with the <a href="../../posts/napari-cosmx-intro/index.html">napari-cosmx plugin</a> and the <a href="../../posts/napari-cosmx-basics/using-napari-cosmx.html">basics</a>. I’ll also make use of the python interpreter and users may benefit from reviewing the post on <a href="../../posts/napari-stitching/napari-cosmx-stitching.html">stitching</a> before reading further.</p>
<ul>
<li>Section&nbsp;2 shows a step-by-step guide to create ROIs. It starts with a simple polygon followed by adding additional code to make the process of ROI creation more automated via keyboard shortcuts.</li>
<li>Section&nbsp;3 shows another way to selection “ROIs” and that’s by selecting individual cells.</li>
</ul>
</section>
</section>
<section id="sec-selecting-groups-of-cells" class="level1" data-number="2">
<h1 data-number="2"><span class="header-section-number">2</span> Selecting Groups of Cells</h1>
<p>There are two ways to interact with napari and the napari-cosmx plugin. The first is via the GUI (see <a href="../../posts/napari-cosmx-intro/index.html">napari-cosmx plugin</a> and the <a href="../../posts/napari-cosmx-basics/using-napari-cosmx.html">basics</a> for a refresher). If you’re working with the GUI, drag and drop your CosMx SMI napari folder into napari’s main window to view the tissue. Once opened, you can access the ipython terminal by clicking on the <code>&gt;_</code> icon which is located on the bottom left of the application (<a href="../../posts/napari-cosmx-basics/using-napari-cosmx.html#fig-initial" target="_blank">see yellow arrow in the previous post</a>). The main object that we’ll work with is named <code>gem</code> (for Gemini).</p>
<p>For users more comfortable with directly launching napari and napari-cosmx using the command line, this second method is for you. Activate your virtual environment containing the napari-cosmx plugin. I’m testing this with Python 3.9, pyenv, <a href="https://napari.org/dev/release/release_0_5_4.html">napari 0.5.4</a>, PyQt5 5.15.11, and <a href="https://github.com/Nanostring-Biostats/CosMx-Analysis-Scratch-Space/blob/05868d8643b2cba0d4248d0d402927284884f7ae/assets/napari-cosmx%20releases/napari_CosMx-0.4.17.1-py3-none-any.whl">napari_CosMx-0.4.17.1</a>. After activation, launch ipython and then instantiate your <code>gem</code> object.</p>
<div class="sourceCode" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode bash code-with-copy"><code class="sourceCode bash"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># in bash</span></span>
<span id="cb1-2"><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">cd</span> to_project_directory</span>
<span id="cb1-3"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">pyenv</span> activate your_virtual_environment_name</span>
<span id="cb1-4"><span class="ex" style="color: null;
background-color: null;
font-style: inherit;">ipython</span></span></code></pre></div>
<div class="sourceCode" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb2-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># in ipython/python</span></span>
<span id="cb2-2"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> importlib.metadata <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> metadata</span>
<span id="cb2-3"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> numpy</span>
<span id="cb2-4"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pandas <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> pd</span>
<span id="cb2-5"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> os</span>
<span id="cb2-6"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> napari_cosmx.gemini <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> Gemini</span>
<span id="cb2-7"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> pickle</span>
<span id="cb2-8"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">from</span> os <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> listdir</span>
<span id="cb2-9"><span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">import</span> imageio</span>
<span id="cb2-10"></span>
<span id="cb2-11">data_dir <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'/path/to/napari/data/files'</span></span>
<span id="cb2-12">gem <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> Gemini(data_dir)</span></code></pre></div>
<p>In my example dataset, I have the metadata already loaded.</p>
<div class="sourceCode" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb3-1">gem.metadata</span></code></pre></div>
<pre><code>               cell_ID    cell_type initial_cell_type  leiden
UID                                                          
10101        c_1_100_1     B cell 1          B cell 1       0
10200      c_1_100_100   CD4 T cell        CD4 T cell       2
1000100   c_1_100_1000     B cell 1          B cell 1       0
1002101   c_1_100_1001   CD4 T cell        CD4 T cell       2
1004104   c_1_100_1002     B cell 1          B cell 1       0
...                ...          ...               ...     ...
350859     c_1_395_592   CD4 T cell        CD4 T cell       2
20457783  c_1_254_4523     B cell 1          B cell 1       0
3261907   c_1_271_1806     B cell 2          B cell 2       1
4670103   c_1_182_2161  plasma cell       plasma cell      12
25664444   c_1_88_5066  plasma cell       plasma cell      12
</code></pre>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>If you are working directly in ipython, you can open up the right hand widget using the <code>show_widget</code> method.</p>
</div>
</div>
<p>Let’s color cells by <code>cell_type</code>. I prefer the terminal for this task as I have finer control of the individual colors for each cell type.</p>
<div class="sourceCode" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb5-1">my_colors <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> {</span>
<span id="cb5-2"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B cell 1"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#AA0DFE"</span>,</span>
<span id="cb5-3"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B cell 2"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#3283FE"</span>, </span>
<span id="cb5-4"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD4 T cell"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#85660D"</span>, </span>
<span id="cb5-5"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"B cell 3"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#782AB6"</span>, </span>
<span id="cb5-6"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fibroblast reticular cell 1"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#565656"</span>, </span>
<span id="cb5-7"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fibroblast reticular cell 2"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#1C8356"</span>, </span>
<span id="cb5-8"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"macrophage"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#16FF32"</span>, </span>
<span id="cb5-9"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"pericyte"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#F7E1A0"</span>, </span>
<span id="cb5-10"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"GC B cell"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#E2E2E2"</span>, </span>
<span id="cb5-11"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"CD8 T cell"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#1CBE4F"</span>, </span>
<span id="cb5-12"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"interferon-stimulated cell"</span>: <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#C4451C"</span>, </span>
<span id="cb5-13"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"APC 1"</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#DEA0FD"</span>, </span>
<span id="cb5-14"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"plasma cell"</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FE00FA"</span>, </span>
<span id="cb5-15"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"NK cell"</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#325A9B"</span>, </span>
<span id="cb5-16"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"nonspecific"</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#FEAF16"</span>, </span>
<span id="cb5-17"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"epithelial cell"</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#F8A19F"</span>, </span>
<span id="cb5-18"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"APC 2"</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#90AD1C"</span>, </span>
<span id="cb5-19"><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"dendritic cells"</span>:<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"#F6222E"</span></span>
<span id="cb5-20">}</span>
<span id="cb5-21"></span>
<span id="cb5-22">gem.viewer.layers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Segmentation'</span>].visible <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb5-23">gem.viewer.layers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'FOV labels'</span>].visible <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb5-24"></span>
<span id="cb5-25">gem.color_cells(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_type"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>my_colors)</span>
<span id="cb5-26"></span>
<span id="cb5-27"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Optional step</span></span>
<span id="cb5-28">fig_path <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"./fig-cell-types.png"</span></span>
<span id="cb5-29"><span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">with</span> imageio.get_writer(fig_path, dpi<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">250</span>)) <span class="im" style="color: #00769E;
background-color: null;
font-style: inherit;">as</span> writer:</span>
<span id="cb5-30">        screenshot <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gem.viewer.screenshot(canvas_only<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb5-31">        writer.append_data(screenshot)</span></code></pre></div>
<p>At this point, your image should look like Figure&nbsp;1.</p>
<div class="cell">
<div class="cell-output-display">
<div id="fig-cell-types" class="quarto-float quarto-figure quarto-figure-center anchored">
<figure class="quarto-float quarto-float-fig figure">
<div aria-describedby="fig-cell-types-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
<img src="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-rois/figures/fig-cell-types.png" class="img-fluid figure-img" width="508">
</div>
<figcaption class="quarto-float-caption-bottom quarto-float-caption quarto-float-fig" id="fig-cell-types-caption-0ceaefa1-69ba-4598-a22c-09a6ac19f8ca">
Figure&nbsp;1: Lymph node dataset with colors corresponding to cell types.
</figcaption>
</figure>
</div>
</div>
</div>
<p>Let’s create a single ROI around one of the nodules. Here are the steps:</p>
<ol type="1">
<li>Zoom and pan to desired region</li>
<li>Create a Shapes layer by clicking the filled white polygon on the left side panel.</li>
<li>Select face color and edge color. Tip: to show no face color, set the alpha to 0.</li>
<li>Click on the shape type and draw polygon</li>
<li>Optional: save ROI to disk</li>
</ol>
<p>Steps 1-4 can be seen in the video below.</p>
<video width="800" controls="">
<source src="./figures/creating_an_roi.mp4">
</video>
<p>We can rename that layer by double clicking it or with the command below.</p>
<div class="sourceCode" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb6-1">gem.viewer.layers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Shapes'</span>].name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ROI001'</span></span></code></pre></div>
<p>We can also <em>save</em> this ROI as a pickle file so we can later come back to it when we open the sample again.</p>
<p>To save:</p>
<div class="sourceCode" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb7-1">gem.save_layers([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ROI001'</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"path/to/output/data"</span>)</span></code></pre></div>
<p>And if we want to load that file later:</p>
<div class="sourceCode" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb8-1">gem.load_layers([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ROI001'</span>], <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"path/to/output/data"</span>)</span></code></pre></div>
<section id="more-efficient-roi-creation" class="level2" data-number="2.1">
<h2 data-number="2.1" class="anchored" data-anchor-id="more-efficient-roi-creation"><span class="header-section-number">2.1</span> More efficient ROI creation</h2>
<p>There are many nodules in this sample. While the process of creating an ROI is simple, this manual process can take time. It can be more efficient to look at computational approaches like defining these nodules based on shared cell type composition (<em>i.e.</em>, niche). But if we still want fine control of the ROIs, we can speed up this process by creating a few helper functions that do many of these steps for us.</p>
<p>In the code below, we are creating a <em>keyboard shortcut</em> that will create a new shapes layer simply by pressing <code>n</code> on your keyboard. The new layer will be named ROI001 if it’s the first one; otherwise, it will add an integer to the ROI name (ROI002, ROI003…). After creating a new layer, pressing <code>p</code> will activate the polygon tool allowing you to select the vertices of a given polygon. Double-clicking the last vertex will “close” the polygon.</p>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>I tend to keep the shapes layer inactive whenever possible. This limits the number of accidental vertex additions to a shape.</p>
</div>
</div>
<p>Here’s the code. Be sure to add the shortcut definitions <em>after</em> creating the <code>gem</code> object. You can change the color and edge width to any valid value. Here I’ll make the border yellow with a width of 100.</p>
<div class="sourceCode" id="cb9" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb9-1"></span>
<span id="cb9-2"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> find_next_roi(my_list):</span>
<span id="cb9-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""Finds the next ROI code in a list of ROI strings.</span></span>
<span id="cb9-4"></span>
<span id="cb9-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Args:</span></span>
<span id="cb9-6"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      my_list: A list of strings in the format "ROIxxx" where xxx are digits.</span></span>
<span id="cb9-7"></span>
<span id="cb9-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  Returns:</span></span>
<span id="cb9-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      The next ROI code in the sequence, or "ROI001" if the list is empty </span></span>
<span id="cb9-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">      or the next sequential code if no gap is found.</span></span>
<span id="cb9-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">  """</span></span>
<span id="cb9-12"></span>
<span id="cb9-13">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> my_list:  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Handle empty list</span></span>
<span id="cb9-14">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ROI001"</span></span>
<span id="cb9-15"></span>
<span id="cb9-16">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Extract numeric parts and convert to integers</span></span>
<span id="cb9-17">  numbers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">int</span>(item[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>:]) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> item <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> my_list]</span>
<span id="cb9-18"></span>
<span id="cb9-19">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Sort the numbers in ascending order</span></span>
<span id="cb9-20">  numbers.sort()</span>
<span id="cb9-21"></span>
<span id="cb9-22">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Find the first gap in the sequence</span></span>
<span id="cb9-23">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="bu" style="color: null;
background-color: null;
font-style: inherit;">len</span>(numbers) <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>):</span>
<span id="cb9-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> numbers[i <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> numbers[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>:</span>
<span id="cb9-25">      next_number <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numbers[i] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb9-26">      <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"ROI</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>next_number<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:03d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb9-27"></span>
<span id="cb9-28">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If no gap is found, return the next sequential number</span></span>
<span id="cb9-29">  next_number <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> numbers[<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get the last number and increment</span></span>
<span id="cb9-30">  <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> <span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"ROI</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>next_number<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:03d}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span></span>
<span id="cb9-31"></span>
<span id="cb9-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># This keybinding makes it easier to create a new shape layer for ROIs</span></span>
<span id="cb9-33"><span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">@gem.viewer.bind_key</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'n'</span>, overwrite<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb9-34"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> new_roi_layer(viewer):</span>
<span id="cb9-35">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Search layers for "ROI" pattern</span></span>
<span id="cb9-36">    layers <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> viewer.layers</span>
<span id="cb9-37">    names <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [x.name <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> x <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> layers]</span>
<span id="cb9-38">    names_filtered <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [item <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> item <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> names <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"ROI"</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> item]</span>
<span id="cb9-39">    new_roi_name <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> find_next_roi(names_filtered)</span>
<span id="cb9-40">    <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">print</span>(<span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;">f"Creating </span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">{</span>new_roi_name<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">}</span><span class="ss" style="color: #20794D;
background-color: null;
font-style: inherit;"> layer."</span>)</span>
<span id="cb9-41">    viewer.add_shapes(</span>
<span id="cb9-42">        shape_type<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'polygon'</span>,</span>
<span id="cb9-43">        scale <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [gem.mm_per_px, gem.mm_per_px],</span>
<span id="cb9-44">        name<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>new_roi_name,</span>
<span id="cb9-45">        face_color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'transparent'</span>,</span>
<span id="cb9-46">        edge_color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'yellow'</span>,</span>
<span id="cb9-47">        edge_width<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">100</span></span>
<span id="cb9-48">    )</span>
<span id="cb9-49"></span></code></pre></div>
<p>In the video below, I am quickly creating a new shapes layer using the keyboard combination <code>n + p</code>.</p>
<video width="800" controls="">
<source src="./figures/creating_rois.mp4">
</video>
<p>And now that I have four ROIs, I can save them like this:</p>
<div class="sourceCode" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb10-1">N<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span></span>
<span id="cb10-2">roi_list <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ROI'</span><span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="bu" style="color: null;
background-color: null;
font-style: inherit;">str</span>(i).zfill(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">3</span>) <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> i <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">range</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, N<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span><span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)]</span>
<span id="cb10-3">gem.save_layers(roi_list, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"path/to/output/data"</span>)</span></code></pre></div>
</section>
<section id="subsetting-based-on-rois" class="level2" data-number="2.2">
<h2 data-number="2.2" class="anchored" data-anchor-id="subsetting-based-on-rois"><span class="header-section-number">2.2</span> Subsetting Based on ROIs</h2>
<p>What we would like to do now is to identify which of the cells are in each of these polygons. There’s a method available in <code>napari-cosmx</code> to do just that.</p>
<p>Using the <code>roi_list</code> list we created above, we can generate a Boolean column in the metdata for all of the ROIs.</p>
<div class="callout callout-style-default callout-note callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Note
</div>
</div>
<div class="callout-body-container callout-body">
<p>Depending on the size of the sample, the size of the ROI(s), and your hardware, this process can be computationally intense.</p>
</div>
</div>
<div class="sourceCode" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb11-1">new_metadata <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gem.layers_to_metadata(roi_list)</span>
<span id="cb11-2"></span>
<span id="cb11-3">new_metadata</span></code></pre></div>
<pre><code>               cell_ID    cell_type initial_cell_type  ...  ROI002  ROI003  ROI004
UID                                                    ...                        
10101        c_1_100_1     B cell 1          B cell 1  ...   False   False   False
10200      c_1_100_100   CD4 T cell        CD4 T cell  ...   False   False   False
1000100   c_1_100_1000     B cell 1          B cell 1  ...   False   False   False
1002101   c_1_100_1001   CD4 T cell        CD4 T cell  ...   False   False   False
1004104   c_1_100_1002     B cell 1          B cell 1  ...   False   False   False
...                ...          ...               ...  ...     ...     ...     ...
350859     c_1_395_592   CD4 T cell        CD4 T cell  ...   False   False   False
20457783  c_1_254_4523     B cell 1          B cell 1  ...   False   False   False
3261907   c_1_271_1806     B cell 2          B cell 2  ...   False   False   False
4670103   c_1_182_2161  plasma cell       plasma cell  ...   False   False   False
25664444   c_1_88_5066  plasma cell       plasma cell  ...   False   False   False</code></pre>
<div class="callout callout-style-default callout-tip callout-titled">
<div class="callout-header d-flex align-content-center">
<div class="callout-icon-container">
<i class="callout-icon"></i>
</div>
<div class="callout-title-container flex-fill">
Tip
</div>
</div>
<div class="callout-body-container callout-body">
<p>Recall that you can save your new metadata file to disk so that it can be used later with the color cells widget. (<em>e.g.</em>, <code>new_metadata.to_csv("_new_metadata.csv", index=False)</code>).</p>
</div>
</div>
<p>ROIs can be hierarchical. For example, one can create concentric rings around a focal region. So a given cell can be True for multiple ROIs.</p>
<p>If you prefer to have these extra columns converted into a single column with the name of the ROI a given cell is found in, you can use this function.</p>
<div class="sourceCode" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb13-1"></span>
<span id="cb13-2"></span>
<span id="cb13-3"><span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">def</span> generate_roi_summary_column(df):</span>
<span id="cb13-4">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">"""</span></span>
<span id="cb13-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Generates a 'ROI' column based on all ROI columns in the dataframe and removes the individual ROI columns.</span></span>
<span id="cb13-6"></span>
<span id="cb13-7"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Args:</span></span>
<span id="cb13-8"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        df: The pandas dataframe containing ROI columns.</span></span>
<span id="cb13-9"></span>
<span id="cb13-10"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    Returns:</span></span>
<span id="cb13-11"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">        The updated dataframe with the 'ROI' summary column and individual ROI columns removed.</span></span>
<span id="cb13-12"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">    """</span></span>
<span id="cb13-13"></span>
<span id="cb13-14">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Get all columns that start with 'ROI'</span></span>
<span id="cb13-15">    roi_cols <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [col <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> col <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> df.columns <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> col.startswith(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ROI'</span>)]</span>
<span id="cb13-16"></span>
<span id="cb13-17">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Filter dataframe to only include ROI columns</span></span>
<span id="cb13-18">    roi_df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df[roi_cols]</span>
<span id="cb13-19"></span>
<span id="cb13-20">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Create a new column 'ROI' and initialize it with None</span></span>
<span id="cb13-21">    df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ROI'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">None</span></span>
<span id="cb13-22"></span>
<span id="cb13-23">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Iterate over each row</span></span>
<span id="cb13-24">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> index, row <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> roi_df.iterrows():</span>
<span id="cb13-25">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Check if all values in the row are False</span></span>
<span id="cb13-26">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">not</span> <span class="bu" style="color: null;
background-color: null;
font-style: inherit;">any</span>(row):</span>
<span id="cb13-27">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">continue</span>  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Keep 'ROI' as None</span></span>
<span id="cb13-28"></span>
<span id="cb13-29">        <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># If there's at least one True, find the first column name where it's True</span></span>
<span id="cb13-30">        <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">for</span> col <span class="kw" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">in</span> roi_cols:</span>
<span id="cb13-31">            <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">if</span> row[col]:</span>
<span id="cb13-32">                df.loc[index, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'ROI'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> col</span>
<span id="cb13-33">                <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">break</span></span>
<span id="cb13-34"></span>
<span id="cb13-35">    <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Drop the ROI columns</span></span>
<span id="cb13-36">    df.drop(columns<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>roi_cols, inplace<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span><span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>)</span>
<span id="cb13-37"></span>
<span id="cb13-38">    <span class="cf" style="color: #003B4F;
background-color: null;
font-weight: bold;
font-style: inherit;">return</span> df</span></code></pre></div>
<p>Here’s a tabulation of the number of cells found in each ROI in this example.</p>
<div class="sourceCode" id="cb14" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb14-1"></span>
<span id="cb14-2">meta_summary <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> generate_roi_summary_column(new_metadata)</span>
<span id="cb14-3"></span>
<span id="cb14-4">meta_summary.ROI.value_counts()</span></code></pre></div>
<pre><code>ROI
ROI001    13503
ROI003     8536
ROI002     7686
ROI004     5721
Name: count, dtype: int64</code></pre>
<p>As you can see in the code above, in the case you have hierarchial ROIs, a given cell that is present in multiple ROIs will be assigned the first ROI in the list.</p>
</section>
</section>
<section id="sec-selecting-individual-cells" class="level1" data-number="3">
<h1 data-number="3"><span class="header-section-number">3</span> Selecting Individual Cells</h1>
<p>Sometimes I want to focus on individual cells instead of regions. A typical case for me is when I want to select “anchor” cells for use with InSituType. And while the above polygon-based ROI selection approach <em>does work</em> on single cells, it’s a little more effort than just clicking a cell.</p>
<p>In the code below, I zoomed into an arbitrary position, replaced filled polygons with cell type contours, and turned on a few IF channels.</p>
<div class="sourceCode" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb16-1"></span>
<span id="cb16-2">gem.viewer.layers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cell_type'</span>].visible <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">False</span></span>
<span id="cb16-3">gem.color_cells(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"cell_type"</span>, color<span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span>my_colors, contour <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb16-4"></span>
<span id="cb16-5">gem.viewer.window.set_geometry(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">49</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1440</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">773</span>)</span>
<span id="cb16-6">gem.viewer.camera.center <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.0</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2.2981841637346654</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">12.99023480800836</span>)</span>
<span id="cb16-7">gem.viewer.camera.zoom <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">7477.634103126872</span></span>
<span id="cb16-8"></span>
<span id="cb16-9">gem.add_channel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CD68'</span>, colormap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'red'</span>) </span>
<span id="cb16-10">cd68 <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gem.viewer.layers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'CD68'</span>]</span>
<span id="cb16-11">cd68.contrast_limits <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1560.7958115183246</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">5072.586387434555</span>]</span>
<span id="cb16-12"></span>
<span id="cb16-13">gem.add_channel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PanCK'</span>, colormap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'green'</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># PanCK</span></span>
<span id="cb16-14">PanCK <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gem.viewer.layers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'PanCK'</span>]</span>
<span id="cb16-15">PanCK.contrast_limits <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">2331.937172774869</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">9234.471204188483</span>]</span>
<span id="cb16-16"></span>
<span id="cb16-17">gem.add_channel(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Membrane'</span>, colormap <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'cyan'</span>) <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># membrane</span></span>
<span id="cb16-18">mem <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gem.viewer.layers[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Membrane'</span>]</span>
<span id="cb16-19">mem.contrast_limits <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> [<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">3684.502617801047</span>, <span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">18176.879581151832</span>]</span></code></pre></div>
<p>In the video below, I selected a few cells using the Points layer.</p>
<video width="800" controls="">
<source src="./figures/selecting_cells.mp4">
</video>
<p>Here are those cell IDs.</p>
<div class="sourceCode" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode python code-with-copy"><code class="sourceCode python"><span id="cb17-1">df <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> gem.layers_to_metadata([<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Points'</span>])</span>
<span id="cb17-2">df_filtered <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">=</span> df.loc[df[<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">'Points'</span>] <span class="op" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="va" style="color: #111111;
background-color: null;
font-style: inherit;">True</span>].cell_ID</span>
<span id="cb17-3">df_filtered</span></code></pre></div>
<pre><code>UID
13697552    c_1_151_3701
14115200    c_1_151_3757
14554376    c_1_151_3815
15437192    c_1_151_3929
15547400    c_1_151_3943
16000151    c_1_151_4000
16329832    c_1_151_4041
19053376    c_1_151_4365
19105792    c_1_151_4371
19132027    c_1_151_4374
Name: cell_ID, dtype: object
</code></pre>
</section>
<section id="conclusion" class="level1" data-number="4">
<h1 data-number="4"><span class="header-section-number">4</span> Conclusion</h1>
<p>This blog post provides a step-by-step guide on defining Regions of Interest (ROIs) in CosMx SMI data using the napari-cosmx plugin. It demonstrated how to manually select ROIs with polygons, streamline the process with keyboard shortcuts for efficiency, and subset data based on these selections. I also illustrated how to select individual cells using a Points layer in napari, offering a precise method for identifying cells of interest for further analysis. The code used here has not gone through the typical, vigorous testing process. Please reach out and file a Github issue if you find any bugs.</p>


</section>

 ]]></description>
  <category>napari</category>
  <category>how-tos</category>
  <category>python</category>
  <category>ROIs</category>
  <category>subsetting</category>
  <category>insitutype</category>
  <guid>https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-rois/cosmx-rois.html</guid>
  <pubDate>Thu, 21 Nov 2024 00:00:00 GMT</pubDate>
  <media:content url="https://nanostring-biostats.github.io/CosMx-Analysis-Scratch-Space/posts/napari-rois/figures/fig-initial.png" medium="image" type="image/png" height="137" width="144"/>
</item>
</channel>
</rss>
